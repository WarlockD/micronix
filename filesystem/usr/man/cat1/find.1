

find (1)                     6/25/82                     find (1)


     NNAAMMEE
          ffiinndd - find files


     SSYYNNOOPPSSIISS
          find pathname-list expression


     DDEESSCCRRIIPPTTIIOONN
          FFiinndd  searches  each  of  the given pathnames for files
          matching the given expression. If  the  pathname  of  a
          directory is given, all files in that directory and all
          of its subdirectories (recursively) are searched.
          
          The  expression  above is built from constructions like
          the following:

       --nnaammee ffiilleennaammee
          True if the filename argument matched the current  file
          name.  Normal  shell  argument  syntax  may  be used if
          escaped (watch out for '[', '?', '*', '^').
          
          Examples: '-name a.out' would  match  all  files  named
          "a.out".  '-name  "*.o"  ' would match all files in the
          tree whose name ends in ".o"

       --ppeerrmm oonnuumm
          Where onum is an  octal  number.  True  if  the  file's
          permission flags match the given number.
          
          Example:  '  -perm  777  '  would match all files whose
          permissions are "wide open".

       --ttyyppee cc
          True if the type of the file c, where c is b, c, d or f
          for block special, character special directory or  play
          file.
          
          Example: ' -type f '.

       --lliinnkkss
          True if the file has n links.
          
          Example:  '-links  1'  would  consider  only files with
          exactly one link.

       --uusseerr nnaammee
          True if the file belongs to the user uname (login  name
          or numeric user ID).
          
          Example:  '  -user root ' would screen all files except
          those owned by root.




                               -1-




find (1)                     6/25/82                     find (1)


       --ggrroouupp nnaammee
          True if the file belongs to group gname (group name  or
          numeric group ID).
          
          Example:  '-group  sales'  would consider only files in
          group "sales".

       --ssiizzee nn
          True if the file  is  n  blocks  long  (512  bytes  per
          block).

       --iinnuumm nn
          True if the file has inode number n.

       --aattiimmee nn
          True if the file has been accessed in n days.

       --mmttiimmee nn
          True if the file has been modified in n days.

       --eexxeecc ccoommmmaanndd
          Always  true.  If  the  command  is  complex it must be
          enclosed in quotes ("). If the sequence  {}  occurs  in
          the  command,  the current filename will be substituted
          for it.

       --ookk ccoommmmaanndd
          Like -exec except that the generated command is written
          on the the standard output, then the standard input  is
          read  and  the  command executed only upon the response
          'y'. In other words,  you  are  asked  if  it's  ok  to
          execute the command. Expect to see something like: < rm
          /a/smith/books/3.1 > ok ?

       --pprriinntt
          Print  the  file  name. Always true, causes the current
          pathname to be printed. (Note that 'find' does its work
          silently and if you don't tell  it  otherwise,  nothing
          will be printed.)

       --nneewweerr ffiillee
          True  if  the  current  file  has  been  modified  more
          recently than the argument file.
          
          If two of the above constructions appear one after  the
          other,  then  the  effect  is a logical AND of the two.
          That is, a primitive will be processed only if  all  of
          the previous primitives were successful.




                               -2-




find (1)                     6/25/82                     find (1)


     EEXXAAMMPPLLEESS
          To  remove  all  files  named  a.out that have not been
          accessed in a week

          find / -name a.out -atime +7 -exec "rm {}"

          To  simply  list  the  names  of  all  the  file  in  a
          hierarchy:

               find . -print


     FFIILLEESS
          /etc/passwd - to look up user names.
          
          /etc/group - to look up group names.


     SSEEEE AALLSSOO
          sh (1), filsys (5)




                               -3-


