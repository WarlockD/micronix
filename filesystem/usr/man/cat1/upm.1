

upm (1)                      6/25/82                      upm (1)


     PPRROOGGRRAAMM
          uuppmm -- CP/M for Micronix
          
          
     UUSSAAGGEE
          uuppmm [[uuppmm aarrggss]] [[ccpp//mm pprroogg]] [[pprroogg aarrggss]]
          
          
     FFUUNNCCTTIIOONN
          UUppmm   provides   a  close  functional  replica  of  the
          environment in which applications programs  written  to
          run under CP/M expect. Many CP/M programs will function
          unchanged under Micronix (such as Micropro's WordStar).
          Some  CP/M  programs  do  not  work under uuppmm,, however,
          because of their extreme  system  dependence.  Programs
          attempting   8080  I/O  instruction,  for  example,  or
          interrupt manipulation will not work. If a CP/M program
          goes awry, however, it will have only a local effect  -
          the rest of the operating system will continue running.
          
          The  intended  purpose  of  uuppmm  is to "bridge the gap"
          between low-cost multi-user systems  and  the  enormous
          body  of  special-purpose software written for the CP/M
          system - giving true multi-user function _a_n_d CP/M.  UUppmm
          is  intended  to  be  means  whereby major applications
          software written for CP/M may be run unchanged directly
          under Micronix.
          
          Under Micronix there are no  records,  no  extents,  no
          disk  drives  in the CP/M sense, no file control blocks
          (FCBs),  disk  parameter  blocks   (DPBs),   allocation
          vectors,  etc.,  but  uuppmm  attempts to do a good job of
          pulling the wool over the eyes  of  the  CP/M  program.
          When the CP/M program thinks it is opening a CP/M file,
          it  is  really  opening  a  Micronix  file. UUppmm handles
          conversion  back  and  forth  between  CP/M  FDB's  and
          Micronix  file  path  names.  It  maintains  a table of
          correspondences  between  CP/M  drives   and   Micronix
          directories.  File  I/O  is  monitored  and  the extent
          numbers are changed at the appropriate times.
          
          It should be noted that some files under  Micronix  may
          be  inaccessible  because  they  have  "CP/M impossible
          names". This is no great stumbling block,  however,  as
          one  can  simply rename the Micronix file(s). The rules
          for uuppmm file names are:

               All lower case letters.
               
               Maximum eight character filename.
               
               Maximum three character extension (optional).




                               -1-




upm (1)                      6/25/82                      upm (1)


               Names without an extension may be  at  most  eight
               characters long.
               
               No question marks (?) or asterisks (*) may be used
               as a character in the name.

          UUppmm  also  contains  a  "Bios  jump  table"  bearing  a
          striking resemblance to the original, and corresponding
          in function.
          
          Users will also find  all  the  conventional  commands,
          file  reference  characters and functions expected from
          CP/M  -  file  transfer,  logical  device   assignment,
          program  assembly  and  debugging  features  and system
          utilities.
          
          
          There  is  no  significant  difference   in   the   way
          application   programs   are   run   under   uuppmm..   All
          documentation for these programs are valid.
          
          
          UUppmm has two  modes:  DIRECT  and  INTERACTIVE.  If  you
          intend  to  run  only one CP/M application program, use
          the DIRECT mode. If you intend to run a series of  CP/M
          programs, use the INTERACTIVE mode.
          
          To enter INTERACTIVE mode, type
          
               uuppmm
          
          alone on a line.
          
          
          To enter DIRECT mode type
          
               uuppmm pprrooggrraamm nnaammee
          
          
          To  effectively  use  uuppmm it is necessary to understand
          the  relationship  between  CP/M's  concept  of   drive
          letters and Micronix's directories.
          
          CP/M  organizes  its  information by drive letter (A: -
          P:). Since the  most  natural  analogous  structure  in
          Micronix  is  the  directory,  uuppmm maintains a table of
          CP/M drive designations and the names of  the  Micronix
          directories to which they correspond.
          
          The special command "=" (a single equal sign alone on a
          line)  displays the CP/M - Micronix drive relationships
          currently in effect.
          
          You may change the drive designation  pointers  with  a


                               -2-




upm (1)                      6/25/82                      upm (1)


          command of the form
          
               AA::ddiirrnnaammee
          
          wherein  A  may  be  replaced  by  any of the letters A
          through P and directory name must contain at least  one
          slant character ("/"). For example
          
               BB::..//
          
          would "point" CP/M drive "B" at your current directory.
          
          These   drive   designation  modifiers  may  appear  as
          commands to the uuppmm "CCP" or in the  command  line.  An
          example follows:
          
               uuppmm aa:://ccppmm bb::..// //ccppmm//wwss
          
          meaning  run  uuppmm,,  setting  drive  A  to correspond to
          Micronix directory "/cpm" and drive B to correspond  to
          directory   "./",   then   directly   run  the  program
          /cpm/ws.com (the .com suffix is added automatically).
          
          You may leave INTERACTIVE mode by typing  "exit"  as  a
          command.
          
          Exit  from  uuppmm''ss  DIRECT  mode occurs immediately upon
          completion of the called application program.
          
          In summary then, the order of events from the time  uuppmm
          is called is as follows:
          
          1)   An  attempt is made to read the ".upm" file in the
               current   directory.   It   may   contain    drive
               designators,  an  "lst"  designator,  drive select
               commands, and a CP/M command to be run  in  DIRECT
               mode.  The  commands  found in the ".upm" file are
               executed in the order they appear.
               
          2)   The command line is scanned for drive designators,
               drive select commands, CP/M program name  and  its
               arguments  (if  any).  The  commands  found on the
               command  line  are  executed  in  the  order  they
               appear.
               
          3)   A  choice  is  made.  If  no CP/M program name was
               specified on  the  command  line,  uuppmm  goes  into
               INTERACTIVE  mode  and  gives  a CP/M prompt (e.g.
               "A>"). If a program was specified, that program is
               immediately run.
          
          These features may be used to customize uuppmm,, and can be
          used to advantage in conjunction with the aalliiaass command
          of the shell. Some examples follow.


                               -3-




upm (1)                      6/25/82                      upm (1)


          
          The simplest way to run uuppmm is by simply typing:
          
               uuppmm
          
          It will  then  come  up  and  prompt  you  for  further
          instruction.
          
          A possible .upm file might contain:
          
               AA:://ccppmm
               BB::..// LLSSTT::||//bbiinn//llpprr
               B:
          
          Which means:
          
               Make  CP/M  drive  A  refer  to Micronix directory
               "/cpm".
               
               Make CP/M drive B refer to Micronix directory "./"
               (your current directory).
               
               Address  the  LST:  device  and  arrange  to  have
               printed   output   sent  to  the  printer  spooler
               program. (File contents directed to program  _a_f_t_e_r
               execution   of  application  program  command  for
               printing; LST: output  is  then  directed  to  llpprr
               program for printing.)
               
               Select drive B.
          
          With  the  preceding  .upm  file in existence, you need
          only type "upm", and it will scan  the  .upm  file  and
          come  up  with  everything  set  up  as described. This
          spares you the hassle of  repeatedly  typing  in  drive
          designation commands each time you enter uuppmm..
          
          It's  also  possible to specify more information on the
          command line. Consider:
          
               uuppmm aa:://ccppmm bb::..// llsstt::oouuttppuutt bb:: aa::wwss ddooccuummeenntt
          
          This command tells the system to:
          
               1) Start uuppmm..
               
               2) Set drive A to /cpm
               
               3) Set drive B to ./
               
               4) Arrange printed output be written onto the file
               "output" after execution of Wordstar "P" command
               
               5) Select drive B


                               -4-




upm (1)                      6/25/82                      upm (1)


               
               6) Run Wordstar
               
               7) Pass the argument "document" to Wordstar
          
          
          Admittedly, it would be a bit cumbersome to  type  this
          entire  command  every time. Instead, you could use the
          aalliiaass  command  to  make  a  "shorthand"  command  line
          containing:
          
          aalliiaass wwss ""uuppmm aa:://ccppmm bb::..// llsstt::oouuttppuutt bb:: aa::wwss ddooccuummeenntt""
          
          Every time you log in, simply type
          
               wwss
          
          and the above commands is run for you.
          
          
          PPrriinntteerr OOppeerraattiioonn
          
          CP/M programs send printer output to the "lst:" device.
          By  default,  upm  connects  the  lst  device  to  your
          terminal. The easiest way to connect it to your printer
          is to do it indirectly, thru a disk file. Either in the
          .upm file, or on the command line,  include  the  words
          "lst:output". Then all printed output will be stored in
          the  file  "output".  When you exit from upm, type "lpr
          output", and the  output  will  be  sent  to  the  line
          printer.  (Any file name you wish can be used here, not
          just "output". Don't let different people use the  same
          name  in  the  same directory, or their outputs will be
          mixed.) This has the advantage that  other  people  can
          continue  to use the line printer while you are running
          your CP/M programs.
          
          There is another way to connect the lst device  to  the
          printer. Instead of "lst:output" in the .upm file or on
          the  command  line,  you  can use "lst:|/bin/lpr". This
          connects the lst  device  directly  with  the  spooling
          program,  and  allows  your printed output to appear as
          soon as it is  generated.  There  is  a  problem  here,
          however,  that is inherent in the logic of spooling. To
          avoid interleaved printing, the spooling  program  must
          read  each input stream to its end before it can accept
          another. When the input is coming via a pipe from  upm,
          then  lpr  cannot see an end-of-input until the pipe is
          closed, ie, until upm exits. That  means  that  no  one
          else on the system will be able to use the line printer
          until you exit from upm.
          
          
          TTeexxtt FFiilleess..


                               -5-




upm (1)                      6/25/82                      upm (1)


          
          Herein  are  some practical suggestions on the handling
          of text files and the successful transportation thereof
          between  CP/M  and  Micronix.  Also   included   is   a
          description of the differences in their formats.
          
          CP/M  text files and Micronix text files are identical,
          _e_x_c_e_p_t for the following:
          
          1.   At the end of each line of a Micronix  file  there
               is  a single NEWLINE character; at the end of each
               line of  a  CP/M  text  file  there  is  a  RETURN
               character followed by a NEWLINE character.
               
          2.   A  CP/M  file's length must be an even multiple of
               128 bytes. A Micronix file's  length  may  be  any
               number  of  bytes (both are constrained to maximum
               file sizes). CP/M text files are  padded  with  ^Z
               characters at the end to round them out to an even
               multiple of 128. Micronix text files are not.
               
          There  is  a  convenient  utility for converting a text
          file back and forth between the two formats. To make  a
          text file suitable for Micronix:
          
               cclleeaann ffiillee
          
          To make a text file suitable for CP/M or uuppmm::
          
               cclleeaann --uu ffiillee
          
          The  name cclleeaann comes from the idea of cleaning out the
          excess RETURN characters and ^Z characters at the  end;
          "-u" stands for "unclean".




                               -6-




upm (1)                      6/25/82                      upm (1)


          
          PPrrooggrraammss  tthhaatt  aatttteemmpptt  88008800  iinnssttrruuccttiioonn or interrupt
          manipulation, such as a program to format a hard  disk,
          or  that  "move"  a  conventional  CP/M system, such as
          MOVCPM or SYSGEN, will not work under uuppmm.. Nor can  uuppmm
          handle  disk  allocation  vector CP/M calls (it returns
          nonsense). Otherwise, there are no restrictions to  the
          types of file that may be run under this program.
          
          
     SSEEEE AALLSSOO
          Upm tutorial in User Reference Manual
          
          
NOTE:  CP/M  is  a  registered  trademark  of  Digital  Research.
WordStar is a registered trademark of the MicroPro Corporation.




                               -7-


