

ratfor (1)                   3/18/82                   ratfor (1)


     PPRROOGGRRAAMM
          rraattffoorr - ratfor -> FORTRAN translator
          
          
     UUSSAAGGEE
          rraattffoorr


     FFUUNNCCTTIIOONN
          The  RRaattffoorr  preprocessor  for  FORTRAN  enables you to
          write in a the free-form structured  language,  Ratfor,
          then  compile  your programs with your existing FORTRAN
          compiler. This implementation incorporates iinncclluuddee  and
          mmaaccrroo  capabilities.  RRaattffoorr  reads  from  the standard
          input and writes to the standard output. It may be used
          as a filter.

          Lines of the form:

                  iinncclluuddee ffiillee

          are  replaced  by  the  contents  of  the  named  file.
          IInncclluuddeess  may be nested. Note that some implementations
          include the file "file.rat".  In  this  implementation,
          the file must be named explicitly.

          Macro definitions such as:

                  ddeeffiinnee((ttookkeenn,,ssttrriinngg))

                     or

                  ddeeffiinnee((ttookkeenn,,......$$11......$$22......$$33......))

          may  appear.  The left parenthesis must follow the word
          define immediately. In the first case, ssttrriinngg is merely
          substituted for ttookkeenn everywhere  it  appears.  In  the
          second, occurrences of the form:

                  ttookkeenn((aarrggaa,,aarrggbb,,aarrggcc))

          are  replaced  by  the  defining  string,  but with the
          values substituted for the arguments. The  construction
          $n,  where  n  is  a  decimal  digit, signifies the nth
          argument.  A  given  macro  may  have  at   most   nine
          arguments. Macro definitions may be recursive.

          Any   valid   FORTRAN   statement  is  a  valid  rraattffoorr
          statement. A statement or group of  statements  may  be
          enclosed  in  curly brackets "{" and "}". The result is
          treated as a single statement. In addition to  standard
          FORTRAN, the following are understood:




                               -1-




ratfor (1)                   3/18/82                   ratfor (1)


          iiff ((ccoonnddiittiioonn)) ssttaatteemmeenntt;;

               The  statement  is  executed  if  the condition is
               true.

          iiff ((ccoonnddiittiioonn)) ssttaatteemmeenntt;; eellssee ssttaatteemmeenntt;;

               If the condition is true, the first  statement  is
               executed,   otherwise   the  second  statement  is
               executed. An eellssee goes with the last un-elsed iiff..

          wwhhiillee ((ccoonnddiittiioonn)) ssttaatteemmeenntt;;

               The statement is executed repeatedly  as  long  as
               the condition remains true (possibly zero times as
               the   condition   is   always  tested  before  the
               statement is executed.) The condition may  not  be
               left out. For an infinite loop, see rreeppeeaatt below.

          ffoorr ((ssttaatteemmeenntt;; ccoonnddiittiioonn;; ssttaatteemmeenntt)) ssttaatteemmeenntt;;

               First,  the  first  statement  is  executed.  Then
               repeatedly the condition is tested, and  if  true,
               the  last  statement is executed, then the second.
               If the condition is false, the loop is broken  and
               control  proceeds  to the next statement following
               the ffoorr.. More clearly: the first statement is  the
               initializer   of  the  loop,  the  second  is  the
               incrementation, and the last is the  body  of  the
               loop.

          rreeppeeaatt ssttaatteemmeenntt;;

               The statement is executed repeatedly.

          rreeppeeaatt ssttaatteemmeenntt;; uunnttiill ((ccoonnddiittiioonn));;

               The  statement  is  executed  repeatedly until the
               condition is true. The condition is always  tested
               after  the statement is executed, which is to say,
               the statement will always  be  executed  at  least
               once.

          ddoo lliimmiittss;; ssttaatteemmeenntt;;

               A  FORTRAN  ddoo  loop  is set up with the specified
               limits and the statement as the body of the  loop.
               You are relieved of the burden of dealing with the
               continue statement and its statement number.




                               -2-




ratfor (1)                   3/18/82                   ratfor (1)


          nnuummbbeerr ssttaatteemmeenntt;;

               Statements  may  be numbered. Numbers may comprise
               at most five digits.  You  need  not  worry  about
               where on the line the number appears.

          bbrreeaakk;;

               One  level  of  wwhhiillee,,  ffoorr,, rreeppeeaatt,, or ddoo loop is
               broken out of.

          nneexxtt;;

               Transfers control to the looping mechanism of  the
               innermost  wwhhiillee,,  ffoorr,,  rreeppeeaatt,, or ddoo in which it
               occurs.




          The following abbreviations may be used:

                  >>     ..ggtt..    ggrreeaatteerr tthhaann
                  >>==    ..ggee..    ggrreeaatteerr tthhaann oorr eeqquuaall
                  <<     ..lltt..    lleessss tthhaann
                  <<==    ..llee..    lleessss tthhaann oorr eeqquuaall
                  ====    ..eeqq..    eeqquuaall
                  !!==    ..nnee..    nnoott eeqquuaall
                  ^^==    ..nnee..    nnoott eeqquuaall
                  !!     ..nnoott..   llooggiiccaall nneeggaattiioonn
                  ^^     ..nnoott..   llooggiiccaall nneeggaattiioonn
                  &&     ..aanndd..   llooggiiccaall aanndd
                  ||     ..oorr..    llooggiiccaall oorr


     EEXXAAMMPPLLEE 
          To compile a Ratfor program using Microsoft FORTRAN:

                rraattffoorr <<pprrooggrraamm..rraatt >>pprrooggrraamm..ffoorr
                ff8800 pprrooggrraamm..rreell,,ttttyy::==pprrooggrraamm..ffoorr//nn
                ll8800 pprrooggrraamm..rreell,,ffoorrlliibb..rreell,,pprrooggrraamm..ccoomm//nn,,//ee


     NNOOTTEESS
          DDoo statements generate a spurious,  although  harmless,
          extra ccoonnttiinnuuee in the absence of a bbrreeaakk statement.


     AALLSSOO RREEAADD
          Kernighan,  B.W.  and  P.J.  Plauger,  _S_o_f_t_w_a_r_e  _T_o_o_l_s,
          (Addison-Wesley, 1976).




                               -3-


