.he "dup (2)                      3/19/82                      dup (2)"
.fo "				    -#-"
.in 5
.rm 65
.bd
NAME
.in +5
.br
.bd
dup
- duplicate a file descriptor
.sp 2
.in -5
.bd
C
.in +5
.br
dup(descriptor)
.sp 2
.in -5
.bd
FUNCTION       
.in +5
.br
.bd
Dup 
takes a file descriptor previously returned by
.bd
open, creat,
or
.bd
pipe
and allocates a new descriptor
synonymous with the original.  Subsequent reads or writes
with the new descriptor will have exactly the same
effect as the same call with the old descriptor.

Since the algorithm that allocates file descriptors
returns the lowest available value, combinations of
.bd
dup
and
.bd
close
can be used to move file descriptors
in a general way. This is used mostly for manipulating
the standard input (file descriptor 0) and the
standard output (file descriptor 1).

.bd
Dup
is subject to the limit of 16 active file descriptors
per process.
.sp 2
.in -5
.bd
RETURNS
.in +5
.br
.bd
Dup()
returns a file descriptor (positive) if successful,
or a -1 if not.
.sp 2
.in -5
.bd
ASSEMBLER
.in +5
.br
.bd
(dup = 41)
.br
(old descriptor in hl)
.br
.bd
sys; dup
.br
(new descriptor in hl)
.sp 2
.in -5
.bd
RETURNS
.in +5
.br
On success, the carry flag is cleared and the new descriptor
is returned in register hl.  On failure, the carry flag is set.
