

setuid (2)                   3/19/82                   setuid (2)


     NNAAMMEE
          ssiiggnnaall - set disposition of signals
          
          
     CC
          signal(sig, func)
          int (*func)();
          
          
     FFUUNNCCTTIIOONN
          A  signal  is  a  means  of notifying a process of some
          external event. A signal can be sent  from  the  system
          (in  response  to  an  attempt  to  execute  an illegal
          instruction, for example), from a terminal (to abort  a
          process), or at the request of another process (via the
          kkiillll   system   call).   Normally,   a   signal  causes
          termination of the receiving  process,  but  this  call
          allows the process either to ignore it or to "catch" it
          via  an interrupt to a specified location. There are 15
          signals:
          
              11    ---- ((hhaanngguupp))
              22    iinntteerrrruupptt ((ccaauusseedd bbyy ttyyppiinngg DDEELL))
              33    qquuiitt ((ccaauusseedd bbyy ttyyppiinngg ccoonnttrrooll \\)) **
              44    iilllleeggaall iinnssttrruuccttiioonn **
              55    ---- ((ttrraaccee ttrraapp))
              66    bbaacckkggrroouunndd ((ccaauusseedd bbyy ttyyppiinngg ccoonnttrrooll bb))
              77    rreeccoorrdd aavvaaiillaabbllee aatt tteerrmmiinnaall ****
              88    ---- ((ffllooaattiinngg ppooiinntt eexxcceeppttiioonn))
              99    kkiillll ((ccaannnnoott bbee ccaauugghhtt oorr iiggnnoorreedd))
              1100   ---- ((bbuuss eerrrroorr))
              1111   ---- ((mmeemmoorryy ffaauulltt))
              1122   bbaadd aarrgguummeenntt ttoo aa ssyysstteemm ccaallll **
              1133   wwrriittee ttoo aa ppiippee wwiitthh nnoo oonnee ttoo rreeaadd iitt
              1144   ---- ((aallaarrmm cclloocckk))
              1155   tteerrmmiinnaattee ((ccaattcchhaabbllee kkiillll))

              ** causes a core dump unless caught or ignored

              **** not reset when caught
          
          Signals marked "--"  are  not  currently  sent  by  the
          system. (The Unix V6 descriptions are given).
          
          A "func" of 0 tells the system to institute the default
          action  for the given signal. For all signals but 6 and
          7, this means process termination  on  receipt  of  the
          signal.  For signal 6, the default action is to put the
          process into the  "background"  (all  further  signals,
          except 9, will be ignored, and reads on a terminal will
          return  eof).  For  signal  7, the default action is to
          ignore the signal.




				    -1-




setuid (2)                   3/19/82                   setuid (2)


          If "func" is 1, the signal will be ignored.  If  "func"
          is  any  value  greater  than 1, then it is taken as an
          address, and  receipt  of  the  signal  will  cause  an
          interrupt to that address. Except as noted, a signal is
          reset  to  0  after  being  caught.  So in general, the
          catching routine must issue another signal call  if  it
          wants to continue catching the signal.
          
          If  a  signal is caught during a slow system call (read
          or write to a terminal, sslleeeepp , or  wwaaiitt  ),  the  call
          will  terminate prematurely and return an error (number
          EINTR - see the Introduction).
          
          After  a  fork,   the   child   inherits   all   signal
          dispositions.  EExxeecc  passes  on  all default and ignore
          dispositions, but resets all caught signals to  default
          action.
          
          
     RREETTUURRNNSS
          The  return  value  is  the old signal disposition. A 0
          indicates  success,  a  -1  indicates  failure  (signal
          number out of range).
          
          
     AASSSSEEMMBBLLEERR
          ((ssiiggnnaall == 4488))
          ssyyss;; ssiiggnnaall;; ssiigg;; ffuunncc;;
          ((oolldd vvaalluuee iinn rr00))
          
          
     RREETTUURRNNSS
          The  carry  flag  is  cleared  on  success,  or  set on
          failure.




				    -2-


