

break (2)			  3/18/82               break (2)


     NNAAMMEE
          bbrreeaakk,, bbrrkk,, ssbbrrkk - change core allocation


     CC
          char * brk(addr)
          char * sbrk(addr)


     FFUUNNCCTTIIOONN
          BBrrkk  sets  the  system's  idea  of  the  lowest  memory
          location not used by the program (called  the  "break")
          to  addr  (which  may  be  rounded  up  to  suit memory
          management hardware). The old break is returned.
          
          Locations greater than or equal to the break  and  less
          than  the stack pointer are not in the address space of
          the program. These locations may be overwritten by  the
          system,  and  may  cause memory faults if accessed. The
          system will refuse to set the  break  above  the  stack
          pointer,  but  a  program  is  free  to  move its stack
          pointer below the break.
          
          SSbbrrkk adds incr more bytes to the program's  data  space
          and returns a pointer to the start of the new area.
          
          When a program begins execution via eexxeecc (2), its break
          is  set  to  the  top  of  its program and data storage
          areas.  Thus,  only  programs  that  must   dynamically
          allocate data space need to use these calls.


     RREETTUURRNNSS
          The  old break is returned on success. A -1 is returned
          if the request  would  require  more  memory  than  the
          system  limit, or if it would move the break across the
          stack pointer.


     AASSSSEEMMBBLLEERR
          ((bbrreeaakk == 1177))
          ssyyss;; bbrreeaakk;; aaddddrr


     RREETTUURRNNSS
          Only success or failure is  returned,  by  clearing  or
          setting the carry flag, respectively.




				    -1-


