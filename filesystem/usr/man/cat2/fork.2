

fork (2)                     3/19/82                     fork (2)


     NNAAMMEE
          ffoorrkk - create a new process
          
          
     CC
          fork()
          
          
     FFUUNNCCTTIIOONN
          FFoorrkk  is  the  only  way  to  create a new process. The
          calling process splits into a "parent" and  a  "child".
          The  child's core image is a copy of the parent's, open
          files are shared, and signals remain unchanged.  FFoorrkk(())
          returns a zero to the child process, while it returns a
          non-zero  number  to the parent. This is the process ID
          of the child, and is used by wwaaiitt (2) and kkiillll (2).
          
          
     RREETTUURRNNSS
          FFoorrkk(()) returns a zero to the child,  and  the  non-zero
          process  ID  of the child to the parent. A return of -1
          (not just  negative)  indicates  a  temporary  lack  of
          process space.
          
          
     AASSSSEEMMBBLLEERR
          ((ffoorrkk == 22))
          ssyyss;; ffoorrkk
          ((cchhiilldd rreettuurrnn))
          ((++ 33 bbyytteess))
          ((ppaarreenntt rreettuurrnn)) ((cchhiilldd iidd iinn hhll))
          
          
     RREETTUURRNNSS
          The  child  process returns to the location immediately
          following the fork. The parent skips three bytes before
          returning, and receives the child ID in hl.  If  a  new
          process  cannot  be  created,  the carry flag is set on
          return to  the  parent  (and  the  child  return  never
          happens).




				    -1-


