.he "obj (1)                      4/15/82                      obj (1)"
.fo "                               -#-"
.in 5
.rm 65
.bd
PROGRAM
.in +5
.br
.bd
obj
- examine object files
.sp 2
.in -5
.bd
USAGE
.in +5
.br
obj -[flags] <files>
.sp 2
.in -5
.bd
FUNCTION
.in +5
.br
.bd
Obj
permits inspection of relocatable object files in standard form for
any target machine.  Such files may have been output by an assembler,
combined by link, or archived by
.bd
lib. Obj
can be used either to check their size and configuration, or to
output information from their symbol tables.

The flags are:
.sp
.in +5
.ta 5
.ti -5
-d	Output all defined symbols in each file, one per line.  Each
line contains the value of the symbol, a code indicating to what the
value is relative, and the symbol name.  values are output as the
number of digits needed to represent an integer on the target machine.
Relocation codes are: "T" for test relative, "D" for data relative,
"B: for bss relative, "A" for absolute, or "?" for anything
.bd
obj
does not recognize.  Lowercase letters are used for local 
symbols, uppercase for globals.

.ti -5
-g	Print global symbols only.

.ti -5
-i	Print all global symbols with the interval in bytes between
successive symbols shown in each value field.  Implies the flags
-[d u v].

.ti -5
-o	Output symbol values in octal.  Default is hexadecimal.

.ti -5
-s	Display the sizes, in decimal, of the text segment, the
data segment, the bss segment, and the space reserved for the
runtime stack plus heap, followed by the sum of all the sizes.

.ti -5
-t	List type information for this file.  For each object file
the data file is: the size of an integer on the target machine, the
byte order it observes, the most restrictive storage bound it
enforces, and the maximum number of characters it permits in an external
name.  If the file is  library, the type of library is output and
the information above is output for each module in the library.
.bp
.ti -5
-u	List all undefined symbols in each file.  If -d is also 
specified, each undefined symbol is listed with the code "U".  The
value of each symbol, if non-zero, is the space to be reserved for it
at load time if it is not explicitly defined.

.ti -5
-v	Sort by value; implies the -d flag above.  Symbols of
equal value are sorted alphabetically.

.in -5
If no flags are given, the default is -[d u]; that is, all symbols
are listed, sorted in alphabetical order on symbol name.  If more
than one of the flags -[d s t y] is selected, then type information
is output first, followed by segment sizes, followed by the symbol list
specified with -d or -u.

<files> specifies zero or more files, which must be in relocatable
format, or standard library format, or in UNIX/V6 library format, or
UNIX/V7 library format.  If more than one file, or a library, is
specified, the name of ech separate file or module precedes any
information output for it, each name followed by a colon and a 
newline; if -s is given, a line of totals is also output.  If no
<files> are specified, or if "-" is encountered on the command
line, xeq is used.
.sp 2
.in -5
.bd
RETURNS
.in +5
.br
.bd
Obj
returns success if no diagnostics are produced, that is, if all
reads are successful and all file formats are valid.
.sp 2
.in -5
.bd
EXAMPLE
.in +5
.br
To obtain a list of all symbols in a module:
.sp
.in +5
.bd 7
% obj alloc.o
.br
0x00000074T_alloc
.br
0x00000000U_exit
.br
0x000001feT_free
.br
0x000000beT_nalloc
.br
0x00000000U_sbreak        
.br
0x00000000U_write         
.in 
.in 5
.sp 2
.bd
SEE ALSO
.br
.in +5
lib (1), link (1), lord (1), cc (1), as (1), cp1 (1), cp2 (1), cpp (1) 

NOTE: This program and documentation are products of Whitesmiths, Ltd.,
and are sold separately.
