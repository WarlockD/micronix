.he "cxr (1)                      3/18/82                      cxr (1)"
.fo "                               -#-"
.in 5
.rm 65
.bd
PROGRAM
.br
.in +5
.bd
cxr - 
C cross reference listing generator


.in -5
.bd
USAGE          
.in +5
.bd
cxr [ -exclusions ... ] [ program.c ... ]


.in -5
.bd
FUNCTION
.in +5
.fi
.bd
Cxr
generates a C cross reference listing for each of the named files.
If an argument begins with a minus, the rest of the argument
is taken as the name of file containing symbols to be excluded
from the cross referencing.
The symbols found therein are added to the list of already excluded symbols.
The exclusion files are free form.  
The symbols may appear most anywhere, as long as they are separated
by non-alphanumeric characters.
Note that the output of 
.bd
cxr 
is in order of appearance.
For a useful listing, run 
.bd
cxr's 
output through 
.bd
sort.
If no cross reference input files are given, the standard input is used.
For each symbol, the following is printed:
.sp
.in +8
.bd
<symbol> <file> <function> <line> <context>
.sp
.in -8
where
.in +8
.sp
.bd
<symbol>
.sp
.in -8
is simply the name of the symbol.

.in +8
.bd
<file>
.sp
.in -8
is the name of the file in which the current instance of the
symbol occurs;  
<file> is used when the standard input is being used.

.in +8
.bd
<function>
.sp
.in -8
is the name of the function in which the current instance
of the symbol appears.
If the symbol is global, no function name is printed.
.sp
.in +8
.bd
<line>
.sp
.in -8
is the number of the file.

.in +8
.bd
<context>
.sp
.in -8
is the text of the line in which the current instance of
the symbol appears.
Leading white space is removed from the line before printing.
.bp
All of the C keywords and the std.h typedefs are automatically
excluded.
This includes the preprocessor keywords.
Comments, string constants, character constants and
numerical constants are excluded.


.in -5
.bd
NOTES
.br
.in +5
If you make your structure references or function declarations
into onions of parenthesis, 
.bd
cxr 
may gaffe.


.in -5
.bd
EXAMPLE
.sp
.bd
.in +5
cxr file1.c file2.c file3.c file4.c >cross
.sp
.bd
sort <cross >sorted
.sp 
.in -5
Under Micronix:
.sp
.in +8
.bd
cxr *.c | sort > output &


.in -8
.in 
.in 5
.bd
SEE ALSO
.in +5
.br
sort (1), kwic (1)
