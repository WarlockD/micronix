

ctime (3)                    3/22/82                    ctime (3)


     SSUUBBRROOUUTTIINNEE((SS))
          ccttiimmee,,  llooccaallttiimmee,,  ggmmttiimmee,, aassccttiimmee,, ttiimmeezzoonnee - convert
          time and date to ASCII


     CC
          cchhaarr **ccttiimmee((cclloocckk))
          lloonngg **cclloocckk

          ##iinncclluuddee <<ttiimmee..hh>>

          ssttrruucctt ttmm **llooccaallttiimmee((cclloocckk))
          lloonngg **cclloocckk;;

          ssttrruucctt ttmm **ggmmttiimmee((cclloocckk))
          lloonngg **cclloocckk;;

          cchhaarr **aassccttiimmee((ttmm))
          ssttrruucctt ttmm **ttmm;;

          cchhaarr **ttiimmeezzoonnee((zzoonnee,,ddsstt))


     FFUUNNCCTTIIOONN
          CCttiimmee converts a time pointed to by cclloocckk [as  returned
          by  ttiimmee  (2)]  into  ASCII.  It returns a pointer to a
          26-character string in the following form:


                       WWeedd MMaarr 1100 1122::1122::5599 11998822\\nn\\00

          All fields have constant width.


          LLooccaallttiimmee and  ggmmttiimmee  return  pointers  to  structures
          containing the broken-down time.
          
          LLooccaallttiimmee  corrects  for  the  time  zone  and daylight
          savings time, if necessary.
          
          GGmmttiimmee converts to Greenwich Mean Time - the time  that
          Micronix uses.
          
          AAssccttiimmee  converts broken-down time to ASCII and returns
          a 26-character string.

          The iinncclluuddee file structure declaration follows:




                               -1-




ctime (3)                    3/22/82                    ctime (3)


                  ssttrruucctt ttmm {{ //** sseeee ccttiimmee((33)) **//
                        iinntt     ttmm_sseecc;;
                        iinntt     ttmm_mmiinn;;
                        iinntt     ttmm_hhoouurr
                        iinntt     ttmm_mmddaayy;;
                        iinntt     ttmm_mmoonn;;
                        iinntt     ttmm_yyeeaarr;;
                        iinntt     ttmm_wwddaayy;;
                        iinntt     ttmm_yyddaayy;;
                        iinntt     ttmm_iissddsstt;;
                  }};;


          The time is given using the following elements:

                  - 24 hour clock
                  - day of month, 1-31 days per month
                  - month of year, numbered 0-11
                  - day of the week, numbered 0-6
                  - date of the year, beginning 1900 -
                  - day of the year, 0-365
                  - non-zero flag indicates daylight savings


          The program checks the system to determine if time zone
          and/or   daylight   savings   time   adjustments    are
          appropriate  whenever  the  local  time  is called for.
          (Adjustments for changes in these conversions  in  1974
          and 1975 are included.)
          
          TTiimmeezzoonnee  returns  the  time  zone, measured in minutes
          westward from  Greenwich,  associated  with  its  first
          argument.  If  the  second  argument is 0, the standard
          name  is  used.  A  non-zero  flag  indicates  daylight
          savings time.
          
          A table is built into the routine. If the required name
          does  not appear on this table, the difference from GMT
          is produced. In Afghanistan, for example:

                          ttiimmeezzoonnee((--6600**44++3300)),, 00))

          would be appropriate because  it  is  eastward  of  GMT
          +4:30. The string GGMMTT++44::3300 is produced.


     EERRRROORRSS
          The return values point to static data whose content is
          overwritten by each call.


     AALLSSOO RREEAADD




                               -2-


