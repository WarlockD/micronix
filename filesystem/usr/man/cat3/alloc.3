

alloc (3)                    3/22/82                    alloc (3)


     SSUUBBRROOUUTTIINNEE((SS))
          aalllloocc,, ffrreeee,, rreeaalllloocc,, ccaalllloocc - main memory allocator


     CC
          cchhaarr **aalllloocc((ssiizzee))
          uunnssiiggnneedd ssiizzee;;

          ffrreeee((ppttrr))
          cchhaarr **ppttrr;;

          cchhaarr **rreeaalllloocc((ppttrr,, ssiizzee))
          cchhaarr **ppttrr;;
          uunnssiiggnneedd ssiizzee;;

          cchhaarr **ccaalllloocc((nneelleemm,, eellssiizzee))
          uunnssiiggnneedd nneelleemm,, eellssiizzee;;


     FFUUNNCCTTIIOONNSS
          The  routines  aalllloocc  and  ffrreeee  provide an easy-to-use
          memory allocation package. The aalllloocc routine returns  a
          pointer  to  a block of at least ssiizzee bytes long, which
          begins on a word boundary.
          
          The argument to ffrreeee is a pointer to a block  allocated
          previously  by  aalllloocc..  This  block  is  available  for
          further allocation; its contents are left undisturbed.
          
          AAlllloocc allocates the first large reach of free space  it
          finds in its circular search from the last allocated or
          freed  block,  uniting  neighboring  free  blocks as it
          searches. If no additional space is free,  aalllloocc  calls
          ssbbrrkk (see section 2) for more system memory.
          
          Block sizes pointed to by ppttrr are changed by rreeaalllloocc to
          ssiizzee bytes. It may also return a pointer to a block, if
          the  block  is  removed.  The values of the new and old
          block sizes determine the changes  in  block  contents;
          the contents remain unchanged up to the lesser value of
          the old and new sizes.
          
          AAlllloocc  contains a valuable search function which may be
          used to do storage compaction.  RReeaalllloocc  wwoorrkkss  iiff  ppttrr
          points  to  a  block that has been freed since the last
          call of aalllloocc,, rreeaalllloocc or calloc. Compounding sequences
          of ffrreeee,, aalllloocc and  realloc  thereby  augments  aalllloocc''ss
          search strategy for storage compaction.
          
          Allocation  of  space for an array of nneelleemm elements of
          eellssiizzee size is done by ccaalllloocc.. EEaacchh ooff  tthheessee  rroouuttiinneess
          rreettuurrnnss  aa  ppooiinntteerr  ttoo aa ssppaaccee aligned for any type of
          storage.



                               -1-




alloc (3)                    3/22/82                    alloc (3)


     EERRRROORRSS
          Note that chaos results if space assigned by  aalllloocc  is
          overrun, or if a random number is given to ffrreeee..
          
          A  NULL  pointer  (0) is returned by aalllloocc,, rreeaalllloocc and
          ccaalllloocc if no memory is available, or if a corrupt arena
          is detected that was  caused  by  storage  outside  the
          bounds  of  a  block.  If  user wishes to recompile the
          aalllloocc routine to rigidly check the arena  during  every
          transaction, he/she is referred to the source code.


     NNOOTTEESS
          The block pointed to by ppttrr may be destroyed if rreeaalllloocc




                               -2-


