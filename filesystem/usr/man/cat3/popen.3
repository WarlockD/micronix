

popen (3)                    3/23/82                    popen (3)


     SSUUBBRROOUUTTIINNEE((SS))
          ppooppeenn,, ppcclloossee - initiates I/O to/from a process
          
          
     CC

          ## iinncclluuddee <<ssttddiioo..hh>>

          FFIILLEE **ppooppeenn((ccoommmmaanndd,, ttyyppee))
          cchhaarr **ccoommmmaanndd,, **ttyyppee;;

          ppcclloossee((ssttrreeaamm))
          FFIILLEE **ssttrreeaamm;;
          
          
     FFUUNNCCTTIIOONN
          The  arguments to ppooppeenn are pointers to null-terminated
          strings. These strings contain: 1) a shell command line
          and 2) an I/O mode, either "r" for reading or  "w"  for
          writing.  A pipe is created between the calling process
          and the command to be executed. The value returned is a
          stream pointer  that  may  be  used  to  write  to  the
          standard  input  of  the  command  or  to read from its
          standard output.
          
          Streams opened by ppooppeenn are closed  by  ppcclloossee..  PPcclloossee
          waits  for  the  associated  process to terminate, then
          returns the exit status of the command.
          
          Since open files are shared, the type "r"  command  can
          be  used  as an input filter, the type "w" as an output
          filter.
          
          
     EERRRROORRSS
          PPooppeenn returns a 0 (NULL pointer) if the shell cannot be
          accessed, or if files or processes cannot be created.
          
          PPcclloossee returns -1 if ssttrreeaamm is not  associated  with  a
          command opened by ppooppeenn..
          
          
     NNOOTTEESS
          Filter  input  may be badly positioned if user attempts
          buffered reading before opening an input filter.
          
          Similar problems with an output filter may be prevented
          by flushing the buffer, i.e., using fffflluusshh.. [See ffcclloossee
          (3).]
          
          
     RREEAADD AALLSSOO




                               -1-


