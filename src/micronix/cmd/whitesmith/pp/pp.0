[1mNAME[0m
     [1mpp [22m‚Äê preprocess defines and includes

[1mSYNOPSIS[0m
     pp ‚Äê[c d*^ i* o* p? s? x 6] <files>

[1mFUNCTION[0m
     pp  is  the  preprocessor used by the C compiler, to perform
     #define, #include, and other functions signalled by a #, be‚Äê
     fore  actual  compilation  begins.  It can be used to advan‚Äê
     tage, however, with most language processors.  The flag  op‚Äê
     tions are:

     [1m‚Äêc  [22mdon‚Äôt  strip  out /* comments */ nor continue lines that
          end with .

     [1m‚Äêd* [22mwhere * has the form name=def, define name with the def‚Äê
          inition string def before reading the input; if =def is
          omitted, the definition is taken as "1".  The name  and
          def  must  be in the same argument, i.e., no blanks are
          permitted unless the argument is  quoted.   Up  to  ten
          definitions may be entered in this fashion.

     [1m‚Äêi* [22mchange the prefix used with #include <filename> from the
          default "" to the string *.  Multiple  prefixes  to  be
          tried in order may be specified, separated by the char‚Äê
          acter ‚Äô|‚Äô.

     [1m‚Äêo* [22mwrite the output to the file * and write error  messages
          to STDOUT.  Default is STDOUT for output and STDERR for
          error  messages.    On   many   systems   (other   than
          Idris/UNIX), the ‚Äêo option is mandatory with ‚Äêx because
          STDOUT is interpreted as a text file, and hence becomes
          corrupted.

     [1m‚Äêp?   [22mchange  the preprocessor control character from ‚Äô#‚Äô to
          the character ?.

     [1m‚Äês?  [22mchange the  secondary  preprocessor  control  character
          from ‚Äô@‚Äô to the character ?.

     [1m‚Äêx [22mput out lexemes for input to the C compiler p1, not lines
          of text.

     [1m‚Äê6 [22mput out extra newlines and/or SOH  (‚Äô1‚Äô)  codes  to  keep
          source  line  numbers  correct  for UNIX/V6 compiler or
          ptc.

     pp processes the named files, or STDIN if none are given, in
     the  order  specified, writing the resultant text to STDOUT.
     Preprocessor actions are described in detail in Section I of
     the C Programmers‚Äô Manual.

     The  presence  of a secondary preprocessor control character
     permits two levels of parameterization.  For  instance,  the
     invocation

        pp ‚Äêc ‚Äêp@

     will  expand  define  and  ifdef conditionals, leaving all #
     commands and comments intact; invoking pp with no  arguments
     would  expand both @ and # commands.  The flag ‚Äês# would ef‚Äê
     fectively disable the secondary control character.
[1mEXAMPLE[0m

     The standard style for writing C programs is:

             /* name of program
              */
             #include <std.h>

             #define MAXN    100

             COUNT things[MAXN];
             etc.

The use of uppercase only identifiers is not required by pp,  but
is  strongly  recommended  to  distinguish parameters from normal
program identifiers and keywords.

[1mSEE ALSO[0m
     p1, ptc

[1mBUGS[0m
     Unbalanced quotes ‚Äô or " may not occur in a  line,  even  in
     the  absence of the ‚Äêx flag.  Floating constants longer than
     38 digits may compile incorrectly, on some host machines.













































