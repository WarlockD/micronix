
INC = /include
HIGH_AS	= inits.o
IO_AS	= intrpt.o mio.o
LOW_AS	= uhdr.o mem.o sub8.o
AS_OBJS = $(HIGH_AS) $(IO_AS) $(LOW_AS)

LOW_C = mount.o access.o balloc.o cio.o create.o exec.o fio.o fork.o \
	ialloc.o iget.o imap.o link.o user.o malloc.o name.o open.o queue.o \
	rdwri.o reg.o sig.o sleep.o subc.o swap.o sys1.o sys2.o system.o time.o \
	trap.o tty.o uio.o
IO_C = con.o dj.o memdev.o multio.o mw.o
HIGH_C = main.o cus.o

LOW_OFILES = $(LOW_AS) $(LOW_C)
IO_OFILES = $(IO_C) $(IO_AS)
HIGH_OFILES = $(HIGH_C) $(HIGH_AS)
CFLAGS = -i/include

unix : low.o io.o high.o
	link -tb0x1000 -r -o unix low.o io.o -lm.a high.o

$(AS_OBJS) : $*.s
	as $*.s

$(HIGH_C) : $*.c
	cc $(CFLAGS) -c -x0 $*.c

$(LOW_C) $(IO_C) : $*.c
	cc $(CFLAGS) -c $*.c

low.o: $(LOW_OFILES)
	link -tb0x1000 -d -o low.o $(LOW_OFILES)

io.o:	$(IO_OFILES) 
	link -tb0x1000 -d -o io.o $(IO_OFILES)

high.o:	$(HIGH_OFILES)
	link -tb0x1000 -d -o high.o $(HIGH_OFILES)

makedate: makedate.c
	cc -o makedate makedate.c -lS

build.h: makedate
	./makedate

#
# include file dependencies
#
user.o:	user.c
	cc $(CFLAGS) -c -x7 user.c

install: unix

clean:
	rm *.o unix

#
# dependencies generated by
#
# fgrep '#include' *.c | tr -d '"' | sed 's/#include//' | awk '
#	{ if ($1 != f) { printf("\n%s", $1); f = $1 } }
#	{ printf(" %s", $2) }
# END { printf("\n") }
# '

access.c: $(INC)/sys.h $(INC)/inode.h $(INC)/mount.h $(INC)/proc.h
balloc.c: $(INC)/sys.h $(INC)/buf.h $(INC)/sup.h $(INC)/proc.h
cio.c: $(INC)/sys.h $(INC)/con.h $(INC)/file.h $(INC)/inode.h $(INC)/proc.h
con.c: $(INC)/sys.h $(INC)/con.h
create.c: $(INC)/sys.h $(INC)/inode.h $(INC)/proc.h
cus.c: $(INC)/sys.h $(INC)/tty.h
dj.c: $(INC)/sys.h $(INC)/buf.h $(INC)/con.h $(INC)/proc.h
exec.c: $(INC)/sys.h $(INC)/inode.h $(INC)/proc.h $(INC)/buf.h $(INC)/obj.h
fio.c: $(INC)/sys.h $(INC)/inode.h $(INC)/buf.h $(INC)/con.h $(INC)/proc.h
fork.c: $(INC)/sys.h $(INC)/inode.h $(INC)/proc.h $(INC)/file.h $(INC)/con.h
ialloc.c: $(INC)/sys.h $(INC)/inode.h $(INC)/proc.h $(INC)/buf.h $(INC)/sup.h
iget.c: $(INC)/sys.h $(INC)/inode.h $(INC)/mount.h $(INC)/buf.h $(INC)/proc.h
imap.c: $(INC)/sys.h $(INC)/inode.h $(INC)/buf.h $(INC)/proc.h
link.c: $(INC)/sys.h $(INC)/inode.h $(INC)/proc.h
lock.c: $(INC)/sys.h $(INC)/inode.h $(INC)/proc.h $(INC)/file.h $(INC)/lock.h
main.c: $(INC)/sys.h $(INC)/inode.h $(INC)/mount.h $(INC)/proc.h $(INC)/file.h $(INC)/buf.h $(INC)/con.h build.h
makedate.c: $(INC)/std.h $(INC)/time.h
malloc.c: $(INC)/sys.h $(INC)/proc.h $(INC)/buf.h $(INC)/sup.h $(INC)/con.h
memdev.c: $(INC)/sys.h $(INC)/proc.h $(INC)/con.h
mount.c: $(INC)/sys.h $(INC)/inode.h $(INC)/mount.h $(INC)/proc.h $(INC)/buf.h $(INC)/sup.h
mset.c: $(INC)/tty.h
multio.c: $(INC)/sys.h $(INC)/tty.h $(INC)/proc.h
mw.c: $(INC)/sys.h $(INC)/buf.h $(INC)/proc.h $(INC)/con.h
name.c: $(INC)/sys.h $(INC)/buf.h $(INC)/proc.h $(INC)/inode.h
open.c: $(INC)/sys.h $(INC)/inode.h $(INC)/proc.h $(INC)/file.h $(INC)/con.h
queue.c: $(INC)/sys.h $(INC)/tty.h $(INC)/proc.h
rdwri.c: $(INC)/sys.h $(INC)/inode.h $(INC)/file.h $(INC)/proc.h
reg.c: $(INC)/sys.h $(INC)/proc.h
sig.c: $(INC)/sys.h $(INC)/proc.h $(INC)/tty.h
sleep.c: $(INC)/sys.h $(INC)/proc.h
subc.c: $(INC)/sys.h $(INC)/con.h
swap.c: $(INC)/sys.h $(INC)/proc.h $(INC)/buf.h $(INC)/con.h
sys1.c: $(INC)/sys.h $(INC)/inode.h $(INC)/file.h $(INC)/proc.h
sys2.c: $(INC)/sys.h $(INC)/inode.h $(INC)/proc.h $(INC)/file.h
system.c: $(INC)/sys.h $(INC)/proc.h
time.c: $(INC)/sys.h $(INC)/proc.h
trap.c: $(INC)/sys.h $(INC)/proc.h
tty.c: $(INC)/sys.h $(INC)/tty.h $(INC)/proc.h
uio.c: $(INC)/sys.h $(INC)/proc.h $(INC)/buf.h $(INC)/con.h $(INC)/sup.h
user.c: $(INC)/sys.h $(INC)/proc.h
