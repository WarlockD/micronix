*** /usr/src/usr.lib/libvmf/vmf.c.old	Thu Oct 21 20:55:38 1993
--- /usr/src/usr.lib/libvmf/vmf.c	Mon Nov 19 19:43:14 2001
***************
*** 93,100 ****
  
  	nmapsegs++;
  
! 	if	(segno >= vspace->v_maxsegno || segno < 0)
! 		{
  #ifdef DEBUG
  		fprintf(stderr,"vmmapseg vspace0%o segno%d\n", vspace, segno);
  #endif
--- 93,99 ----
  
  	nmapsegs++;
  
! 	if (segno >= vspace->v_maxsegno) {
  #ifdef DEBUG
  		fprintf(stderr,"vmmapseg vspace0%o segno%d\n", vspace, segno);
  #endif
***************
*** 110,122 ****
  			{     /* not in memory */
  			int status;
  
! 			for (s = (struct vseg *)s->s_link.back; s->s_lock_count != 0; 
! 					s = (struct vseg *)s->s_link.back)
! 				{
! 				if (s == (struct vseg *)seghead)
! 					vmerror("Too many locked segs!");
  				debugseg(s, "back skip");
! 				}
  			debugseg(s, "dump on");
  			if	(s->s_flags & S_DIRTY)
  				if	(swap(s, write) != 0)
--- 109,120 ----
  			{     /* not in memory */
  			int status;
  
! 			for (s = (struct vseg *)s->s_link.back;
! 			    s !=(struct vseg *)seghead && s->s_lock_count != 0;
! 			    s = (struct vseg *)s->s_link.back)
  				debugseg(s, "back skip");
! 			if (s == (struct vseg *)seghead)
! 				vmerror("Too many locked segs!");
  			debugseg(s, "dump on");
  			if	(s->s_flags & S_DIRTY)
  				if	(swap(s, write) != 0)
*** /usr/src/sys/mdec/rauboot.s.old	Wed May 17 19:54:13 2000
--- /usr/src/sys/mdec/rauboot.s	Mon Nov 19 20:02:57 2001
***************
*** 16,22 ****
  
  MSCPSIZE =	64.	/ One MSCP command packet is 64bytes long (need 2)
  
! RASEMAP	=	140000	/ RA controller owner semaphore
  
  RAERR =		100000	/ error bit 
  RASTEP1 =	04000	/ step1 has started
--- 16,22 ----
  
  MSCPSIZE =	64.	/ One MSCP command packet is 64bytes long (need 2)
  
! RASEMAP	=	100000	/ RA controller owner semaphore
  
  RAERR =		100000	/ error bit 
  RASTEP1 =	04000	/ step1 has started
***************
*** 287,309 ****
  	mov	$RASEMAP,*$ra+RARSPH	/ set mscp semaphores
  	mov	$RASEMAP,*$ra+RACMDH
  	mov	*raip,r0		/ tap controllers shoulder
! 	mov	$ra+RACMDI,r0
  1:
  	tst	(r0)
! 	beq	1b			/ Wait till command read
! 	clr	(r0)+			/ Tell controller we saw it, ok.
  2:
  	tst	(r0)
! 	beq	2b			/ Wait till response written
  	clr	(r0)			/ Tell controller we go it
  	rts	pc
  
! / Some adaptors (TD Systems Viking for example) require the vector field
! /  to be initialized even though interrupts are not enabled.  Use the primary
! /  vector of 0154.   The standalone MSCP driver does the same thing and later on
! /  the  kernel programs the adaptor with an assigned vector
! 
! icons:	RAERR + 033			/ 033 = 0154 >> 2
  	ra+RARING
  	0
  	RAGO
--- 287,306 ----
  	mov	$RASEMAP,*$ra+RARSPH	/ set mscp semaphores
  	mov	$RASEMAP,*$ra+RACMDH
  	mov	*raip,r0		/ tap controllers shoulder
! 	mov	$ra+RACMDH,r0
  1:
  	tst	(r0)
! 	bmi	1b			/ Wait till command read
! 	mov	$ra+RARSPH,r0
  2:
  	tst	(r0)
! 	bmi	2b			/ Wait till response written
! 	mov	$ra+RACMDI,r0
! 	clr	(r0)+			/ Tell controller we saw it, ok.
  	clr	(r0)			/ Tell controller we go it
  	rts	pc
  
! icons:	RAERR + 033
  	ra+RARING
  	0
  	RAGO
*** /usr/src/bin/ld/ld.c.old	Mon Nov 19 19:41:48 2001
--- /usr/src/bin/ld/ld.c	Mon Nov 19 19:42:29 2001
***************
*** 478,483 ****
--- 478,485 ----
  			}
  			curov++;
  			continue;
+ 		case 'g': /* Just ignore the debug flag */
+ 			continue;
  		case 'y':
  		case 'A':
  		case 'H':
*** /usr/src/lib/cpp/cpp.c.old	Sun Aug 26 09:36:03 2001
--- /usr/src/lib/cpp/cpp.c	Mon Nov 19 19:49:46 2001
***************
*** 148,153 ****
--- 148,154 ----
  STATIC	char	*dirnams[MAXINC];	/* actual directory of #include files */
  STATIC	int	fins[MAXINC];
  STATIC	int	lineno[MAXINC];
+ STATIC	char	*lowmem;	/* set to lowest address that malloc uses */
  
  STATIC	char	*dirs[10];	/* -I and <> directories */
  char *strdex(), *copy(), *subst(), *trmdir();
***************
*** 804,809 ****
--- 805,812 ----
  				cp2 = cp;
  				while (*cp2 != '"' && cp2 < inp)
  					cp2++;
+ 				if (fnames[ifno] >= lowmem)
+ 					free(fnames[ifno]);
  				fnames[ifno] = savestring(cp, cp2);
  			}
  			continue;
***************
*** 823,828 ****
--- 826,833 ----
  	register char *cp;
  
  	retbuf = (char *) calloc(finish - start + 1, sizeof (char));
+ 	if (retbuf == NULL)
+ 		pperror("calloc");
  	cp = retbuf;
  	while (start < finish)
  		*cp++ = *start++;
***************
*** 1088,1093 ****
--- 1093,1100 ----
  	fnames[ifno=0] = (char *)inquire(stdin, _FILENAME);
  	dirnams[0] = dirs[0] = trmdir(copy(fnames[0]));
  # endif
+ 	lowmem = (char *)sbrk(0);	/* for free() */
+ 
  	for(i=1; i<argc; i++)
  		{
  		switch(argv[i][0])
*** /usr/src/lib/cpp/Makefile.old	Thu Jul 11 19:55:10 1996
--- /usr/src/lib/cpp/Makefile	Mon Nov 19 20:00:58 2001
***************
*** 1,39 ****
! #	Makefile	1.3	(2.11BSD) 96/7/11
  #
- 
- # Defined SHARED_DATA to be whatever will make your compiler make initialized
- # variables shared and read only.  Don't do this on a PDP-11 if you're also
- # compiling separate I&D since doing so puts the shared data in text space
- # which can't be accessed normally.
- #
- #SHARED_DATA=-R
- 
- # CFLAGS=-O -Dunix=1 -DFLEXNAMES
- # If you don't have split I/D, you'll have to edit the constant
- # SBSIZE in cpp.c to reflect this.
- 
  CFLAGS=-O -Dpdp11=1 -DFLEXNAMES -DBSD2_11 -UBSD2_10
  SEPFLAG=-i
  
! cpp :	cpp.o cpy.o rodata.o
! 	$(CC) $(CFLAGS) $(SEPFLAG) -o cpp rodata.o cpp.o cpy.o
  
  cpy.c : cpy.y
  	yacc cpy.y
- 	../pcc/:yyfix yyexca yyact yypact yypgo yyr1 yyr2 yychk yydef
  	mv y.tab.c cpy.c
  
  cpy.o :	cpy.c yylex.c
  
- rodata.o : cpy.c
- 	$(CC) $(CFLAGS) ${SHARED_DATA} -c rodata.c
- 
  clean :
! 	rm -f *.s *.o cpy.c rodata.c cpp
  
  install : cpp
  	install -s cpp $(DESTDIR)/lib
- 
- sources : cpp.c cpy.y yylex.c README
- cpp.c cpy.y yylex.c README :
- 	sccs get $@
--- 1,19 ----
! #	Makefile	1.4	(2.11BSD) 2001/11/19
  #
  CFLAGS=-O -Dpdp11=1 -DFLEXNAMES -DBSD2_11 -UBSD2_10
  SEPFLAG=-i
  
! cpp :	cpp.o cpy.o
! 	$(CC) $(CFLAGS) $(SEPFLAG) -o cpp cpp.o cpy.o
  
  cpy.c : cpy.y
  	yacc cpy.y
  	mv y.tab.c cpy.c
  
  cpy.o :	cpy.c yylex.c
  
  clean :
! 	rm -f *.o cpy.c cpp
  
  install : cpp
  	install -s cpp $(DESTDIR)/lib
*** /usr/src/man/man1/mkstr.1.old	Tue Oct 22 20:22:35 1996
--- /usr/src/man/man1/mkstr.1	Mon Nov 19 20:12:48 2001
***************
*** 74,80 ****
  			exit(1);
  		}
  	}
! 	\fBif\fR (lseek(efil, (long) a1, 0) |\|| read(efil, buf, 256) <= 0)
  		\fBgoto\fR oops;
  	printf(buf, a2, a3, a4);
  }
--- 74,81 ----
  			exit(1);
  		}
  	}
! 	\fBif\fR (lseek(efil, (long) a1, 0) <= 0 |\||
! 	    read(efil, buf, 256) <= 0)
  		\fBgoto\fR oops;
  	printf(buf, a2, a3, a4);
  }
*** /usr/src/man/man2/Makefile.old	Sat Mar  4 16:12:17 2000
--- /usr/src/man/man2/Makefile	Mon Nov 19 20:18:29 2001
***************
*** 14,24 ****
  # IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
  # WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  #
! #	@(#)Makefile	2.11 (2.11BSD) 2000/3/4
  #
  MDIR=	/usr/man/cat2
  SRCS=	accept.2 access.2 acct.2 adjtime.2 bind.2 brk.2 chdir.2 chmod.2 \
! 	chown.2 chroot.2 close.2 connect.2 creat.2 dup.2 execve.2 exit.2 \
  	chflags.2 \
  	fcntl.2 fetchi.2 flock.2 fork.2 fperr.2 fsync.2 getdtablesize.2 \
  	getgroups.2 gethostid.2 gethostname.2 getitimer.2 \
--- 14,24 ----
  # IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
  # WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  #
! #	@(#)Makefile	2.12 (2.11BSD) 2001/11/19
  #
  MDIR=	/usr/man/cat2
  SRCS=	accept.2 access.2 acct.2 adjtime.2 bind.2 brk.2 chdir.2 chmod.2 \
! 	chown.2 chroot.2 close.2 connect.2 dup.2 execve.2 exit.2 \
  	chflags.2 \
  	fcntl.2 fetchi.2 flock.2 fork.2 fperr.2 fsync.2 getdtablesize.2 \
  	getgroups.2 gethostid.2 gethostname.2 getitimer.2 \
***************
*** 37,43 ****
  	stat.2 statfs.2 swapon.2 symlink.2 sync.2 syscall.2 truncate.2 ucall.2 \
  	umask.2 unlink.2 utimes.2 vfork.2 vhangup.2 wait.2 write.2
  OBJS=	accept.0 access.0 acct.0 adjtime.0 bind.0 brk.0 chdir.0 chmod.0 \
! 	chown.0 chroot.0 close.0 connect.0 creat.0 dup.0 execve.0 exit.0 \
  	chflags.0 \
  	fcntl.0 fetchi.0 flock.0 fork.0 fperr.0 fsync.0 getdtablesize.0 \
  	getgroups.0 gethostid.0 gethostname.0 getitimer.0 \
--- 37,43 ----
  	stat.2 statfs.2 swapon.2 symlink.2 sync.2 syscall.2 truncate.2 ucall.2 \
  	umask.2 unlink.2 utimes.2 vfork.2 vhangup.2 wait.2 write.2
  OBJS=	accept.0 access.0 acct.0 adjtime.0 bind.0 brk.0 chdir.0 chmod.0 \
! 	chown.0 chroot.0 close.0 connect.0 dup.0 execve.0 exit.0 \
  	chflags.0 \
  	fcntl.0 fetchi.0 flock.0 fork.0 fperr.0 fsync.0 getdtablesize.0 \
  	getgroups.0 gethostid.0 gethostname.0 getitimer.0 \
*** /usr/src/man/man3/Makefile.old	Mon Dec  8 21:29:48 1997
--- /usr/src/man/man3/Makefile	Mon Nov 19 20:20:21 2001
***************
*** 14,24 ****
  # IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
  # WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  #
! #	@(#)Makefile	5.4.15 (2.11BSD) 1997/12/8
  #
  MDIR=	/usr/man/cat3
  SRCS1=	abort.3 abs.3 alarm.3 asinh.3 assert.3 atof.3 bstring.3 byteorder.3 \
! 	compat-sys5.3 crypt.3 ctime.3 ctype.3 curses.3 dbm.3 daemon.3 \
  	devname.3 directory.3 ecvt.3 end.3 erf.3 err.3 execl.3 exit.3 \
  	exp.3 fclose.3 ferror.3 floor.3 \
  	fopen.3 fread.3 frexp.3 fseek.3 getc.3 getdisk.3 getenv.3 getfsent.3 \
--- 14,24 ----
  # IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
  # WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  #
! #	@(#)Makefile	5.4.16 (2.11BSD) 2001/11/19
  #
  MDIR=	/usr/man/cat3
  SRCS1=	abort.3 abs.3 alarm.3 asinh.3 assert.3 atof.3 bstring.3 byteorder.3 \
! 	compat-sys5.3 creat.3 crypt.3 ctime.3 ctype.3 curses.3 dbm.3 daemon.3 \
  	devname.3 directory.3 ecvt.3 end.3 erf.3 err.3 execl.3 exit.3 \
  	exp.3 fclose.3 ferror.3 floor.3 \
  	fopen.3 fread.3 frexp.3 fseek.3 getc.3 getdisk.3 getenv.3 getfsent.3 \
***************
*** 39,45 ****
  	syserrlst.3 \
  	utime.3 valloc.3 varargs.3
  OBJS1=	abort.0 abs.0 alarm.0 asinh.0 assert.0 atof.0 bstring.0 byteorder.0 \
! 	compat-sys5.0 crypt.0 ctime.0 ctype.0 curses.0 dbm.0 daemon.0 \
  	devname.0 directory.0 ecvt.0 end.0 erf.0 err.0 execl.0 exit.0 \
  	exp.0 fclose.0 ferror.0 floor.0 \
  	fopen.0 fread.0 frexp.0 fseek.0 getc.0 getdisk.0 getenv.0 getfsent.0 \
--- 39,45 ----
  	syserrlst.3 \
  	utime.3 valloc.3 varargs.3
  OBJS1=	abort.0 abs.0 alarm.0 asinh.0 assert.0 atof.0 bstring.0 byteorder.0 \
! 	compat-sys5.0 creat.0 crypt.0 ctime.0 ctype.0 curses.0 dbm.0 daemon.0 \
  	devname.0 directory.0 ecvt.0 end.0 erf.0 err.0 execl.0 exit.0 \
  	exp.0 fclose.0 ferror.0 floor.0 \
  	fopen.0 fread.0 frexp.0 fseek.0 getc.0 getdisk.0 getenv.0 getfsent.0 \
*** /VERSION.old	Mon Nov 19 20:14:53 2001
--- /VERSION	Tue Dec  4 19:33:14 2001
***************
*** 1,5 ****
! Current Patch Level: 440
! Date: November 19, 2001
  
  2.11 BSD
  ============
--- 1,5 ----
! Current Patch Level: 441
! Date: December 4, 2001
  
  2.11 BSD
  ============
