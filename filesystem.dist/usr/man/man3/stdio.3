.he "stdio (3s)                    3/22/82                  stdio (3s)"
.fo "                               -#-"
.in 5
.rm 65
.bd
SUBROUTINES
.in +5
.br
.bd
stdio
- standard buffered I/O package
.sp 2
.in -5
.bd
C           
.in +5
.br
.bd
#include <stdio.h>
.sp
.bd
FILE *stdin;
.br
.bd
FILE *stdout;
.bd
.br
FILE *stderr;
.sp 2
.in -5
.bd
FUNCTION   
.in +5
.br
This section describes two levels of buffered input/output utilities:
1) in-line macros designated by (3), and 2) higher level standard I/O
utilities designated by (3s) or (3m).

The in-line macros,
.bd
getc
and
.bd
putc
handle characters quickly.

Routines such as
.bd
gets, fgets, printf, fprintf, fwrite, fread, puts
and
.bd
scanf
and
.bd
fscanf
use the in-line macros; both levels may be freely intermixed.

Files with this type of associated buffering are called
.bd
streams
and are declared to be a pointer to a defined type
.bd
FILE.  Fopen
(3) has the ability to create descriptive data for streams.  It
returns a pointer to designate the stream in all further transactions.
Normally, there are three open streams with constant pointers declared 
in the 
.bd
include 
file associated with a standard open file:
.sp
.in +4
.bd 
stdin
- standard input file
.br
.bd
stdout
- standard output file
.br
.bd
stderr
- standard error file
.sp 2
.in -4	
A constant "pointer" (NULL 0) designates no stream.
.sp
Aî integeò constanô (end of file, or EOÆ -1© ió returneä upoî erroò bù anù 
integeò functionó that deal with streams or upon end of file.

Routines that use the I/O package must have the header file 
with the pertinent macro definitions (<stdio.h>).  The 
.bd
include
file declares all functions and constants described in the sections
designated by (3s); they need no further declaration.
.bp
The following constants and functions are used as macros:
.sp
.in +8
.bd
feof  ferror  fileno  getc  getchar  putc
.in -8
.sp
It is dangerous to redeclare these names.
.sp 2
.in -5
.bd
ERRORS         
.in +5
.br
The
.bd
EOF
value is consistently returned, indicating that a 
.bd
FILE 
pointer has not been initialized with 
.bd
fopen.
Thió meanó thaô inpuô oò outpuô haó beeî attempteä oî aî outpuô 
oò inpuô stream, or that a 
.bd
FILE
pointer designates corrupt
.bd
FILE
data.

This use of the standard library has been changed to line buffer output
to a terminal by default.  It attempts to flush the output whenever a
.bd
read
(seå Sectioî 2© froí thå standarä inpuô ió necessary®  Iî mosô 
cases¬ thió makeó thå utilitù morå efficient.  Thå actionó 
themselveó shoulä bå transparenô unlesó it
is used with programs which use standard I/O routines 
.ul
and
.bd
read
(2) to read from the standard input. 

When large amounts of computation are done after outputting part of a line
to a terminal, it is necessary to
.bd
fflush
(3) the standard output before continuing on so that the output appears.
.sp 2
.in -5 
.bd
ALSO READ
.in +5
.br
close (2), open (2), read (2), write (2)