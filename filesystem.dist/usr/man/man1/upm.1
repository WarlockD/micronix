.he "upm (1)                      6/25/82                      upm (1)"
.fo "                               -#-"
.in 5
.rm 65
.bd
PROGRAM
.in +5
.br
.bd
upm - 
CP/M for Micronix


.in -5
.bd
USAGE            
.in +5
.br
.bd
upm [upm args] [cp/m prog] [prog args]


.in -5
.bd
FUNCTION   
.in +5
.br
.bd
Upm 
provides a close functional replica of the environment in which
applications programs written to run under CP/M expect.
Many CP/M programs will function unchanged under Micronix
(such as Micropro's WordStar).
Some CP/M programs do not work under 
.bd
upm,
however, because of their extreme system dependence.
Programs attempting 8080 I/O instruction, for example, or 
interrupt manipulation
will not work.
If a CP/M program goes awry, however, it will
have only a local effect - the rest of the operating system will 
continue running.

The intended purpose of 
.bd
upm 
is to "bridge the gap" between low-cost multi-user systems and the 
enormous body of special-purpose software written
for the CP/M system - giving
true multi-user function 
.ul
and 
CP/M.
.bd
Upm 
is intended to be means whereby major applications
software written for CP/M may be run unchanged directly under Micronix.

Under Micronix there are no records, no extents, no 
disk drives
in the CP/M sense, no file control blocks (FCBs), disk parameter 
blocks (DPBs), allocation vectors, etc., but 
.bd
upm 
attempts to do a good job of pulling the wool over the eyes of 
the CP/M program.
When the CP/M program thinks it is opening a CP/M file,
it is really opening a Micronix file.
.bd
Upm 
handles conversion back and forth between CP/M FDB's and Micronix
file path names.
It maintains a table of correspondences between CP/M drives and
Micronix directories.
File I/O is monitored and the extent numbers are changed at the appropriate
times.

It should be noted that some files under Micronix
may be inaccessible because they have "CP/M impossible names".
This is no great stumbling block, however,
as one can simply rename the Micronix file(s).
The rules for 
.bd
upm 
file names are:
.sp 
.in +5
All lower case letters.

Maximum eight character filename.               

Maximum three character extension (optional).
.bp
Names without an extension may be at most eight characters long.

No question marks (?) or asterisks (*) may be used as a character 
in the name.
.in -5
.sp 
.bd
Upm 
also contains a "Bios jump table"
bearing a striking resemblance to the original,
and corresponding in function.

Users will also find all the conventional commands, file reference
characters and functions expected from CP/M - file transfer, logical device
assignment, program assembly and debugging features and system utilities.


There is no significant difference in the way application programs
are run under
.bd
upm.
All documentation for these programs are valid.


.bd
Upm 
has two modes: DIRECT and INTERACTIVE.
If you intend to run only one CP/M application program, use the
DIRECT mode.
If you intend to run a series of CP/M programs, use the
INTERACTIVE mode.

To enter INTERACTIVE mode, type 

.ti +5
.bd
upm 

alone on a line.


To enter DIRECT mode type 

.ti +5
.bd
upm program name


To effectively use 
.bd
upm 
it is necessary to understand the relationship
between CP/M's concept of drive letters and Micronix's directories.

CP/M organizes its information by drive letter (A: - P:).
Since the most natural analogous structure in Micronix is the directory,
.bd
upm 
maintains a table of CP/M drive designations and the names
of the Micronix directories to which they correspond.

The special command "="
(a single equal sign alone on a line)
displays the CP/M - Micronix drive relationships currently in effect.

You may change the drive designation pointers with a command of the form

.ti +5
.bd
A:dirname

wherein A may be replaced by any of the letters A through P
and directory name must contain at least one slant character ("/").
For example

.ti +5
.bd
B:./

would "point" CP/M drive "B" at your current directory.

These drive designation modifiers may appear as commands to the 
.bd
upm
"CCP" or in the command line.  An example follows:

.ti +5
.bd
upm a:/cpm b:./ /cpm/ws

meaning run 
.bd
upm, 
setting drive A to correspond to Micronix directory "/cpm"
and drive B to correspond to directory "./", then directly
run the program /cpm/ws.com (the .com suffix is added automatically).

You may leave INTERACTIVE mode by typing "exit" as a 
command.

Exit from 
.bd
upm's 
DIRECT mode occurs immediately upon completion of the
called application program.

In summary then,
the order of events from the time 
.bd
upm 
is called is as follows:

.in +5
.ta 5
.ti -5
1)	An attempt is made to read the ".upm" file in the 
current directory.
It may contain drive designators,
an "lst" designator,
drive select commands,
and a CP/M command to be run in DIRECT mode.
The commands found in the ".upm" file are executed in the order they appear.

.ti -5
2)	The command line is scanned for drive designators,
drive select commands, 
CP/M program name and its arguments (if any).
The commands found on the command line are executed in the order
they appear.

.ti -5
3)	A choice is made.
If no CP/M program name was specified on the command line, 
.bd
upm 
goes into INTERACTIVE mode
and gives a CP/M prompt (e.g. "A>").
If a program was specified, that program is immediately run.
.in -5

These features may be used to customize 
.bd
upm,
and can be used to advantage in conjunction with the 
.bd
alias
command of the shell.
Some examples follow.

The simplest way to run 
.bd
upm 
is by simply typing:

.ti +5
.bd
upm

It will then come up and prompt you for
further instruction.

A possible .upm file might contain:

.in +5
.bd 7
A:/cpm
.br
B:./
.bd
LST:|/bin/lpr
.br
B:
.in -5

Which means:

.in +5
Make CP/M drive A refer to Micronix directory "/cpm".

Make CP/M drive B refer to Micronix directory "./" (your current 
directory).

Address the LST: device and arrange to have printed output sent to the
printer
spooler program. (File contents directed to program  
.ul
after
execution
of application program command for printing; LST: output is then directed
to 
.bd
lpr
program for printing.)

Select drive B.
.in -5

With the preceding .upm file in existence,
you need only type "upm", and it will scan the .upm file and
come up with everything set up as described.
This spares you the hassle of repeatedly typing in drive designation
commands each time you enter 
.bd
upm.

It's also possible to specify more information on the command line.
Consider:

.ti +5
.bd
upm a:/cpm b:./ lst:output b: a:ws document

This command tells the system to:

.in +5
1) Start 
.bd
upm.

2) Set drive A to /cpm

3) Set drive B to ./

4) Arrange printed output be written onto the file "output"
after execution of Wordstar "P" command

5) Select drive B

6) Run Wordstar

7) Pass the argument "document" to Wordstar
.in -5


Admittedly, it would be a bit cumbersome to type
this entire command every time. Instead, 
you could use the 
.bd
alias
command to make a "shorthand" command line containing:

.bd
alias ws "upm a:/cpm b:./ lst:output b: a:ws document"

Every time you log in, simply type

.ti +5
.bd
ws

and the above commands is run for you.        


.bd
Printer Operation

CP/M programs send printer output to the "lst:" device.
By default, upm connects the lst device to your terminal.
The easiest way to connect it to your printer is to do it
indirectly, thru a disk file. Either in the .upm file, or on the
command line, include the words "lst:output". Then all printed
output will be stored in the file "output".
When you exit from
upm, type "lpr output", and the output will be sent to the line printer.
(Any file name you wish can be used here, not just "output".
Don't let different people use the same name in the same directory,
or their outputs will be mixed.)
This has the advantage that other people can continue to
use the line printer while you are running your CP/M programs.

There is another way to connect the lst device to the printer.
Instead of "lst:output" in the .upm file or on the command line,
you can use "lst:|/bin/lpr". This connects the lst device directly with the
spooling program, and allows your printed output to appear
as soon as it is generated. There is a problem here, however,
that is inherent in the logic of spooling.
To avoid interleaved printing, the spooling program must read each
input stream to its end before it can accept another.
When the input is coming via a pipe from upm, then lpr cannot
see an end-of-input until the pipe is closed, ie, until upm
exits. That means that no one else on the system will be able
to use the line printer until you exit from upm.


.bd
Text Files.

Herein are some practical suggestions on the handling of text files
and the successful transportation thereof between CP/M and Micronix.
Also included is a description of the differences in their formats.

CP/M text files and Micronix text files are identical,
.ul
except
for the following:

.in +5
.ti -5
.ta 5
1.	At the end of each line of a Micronix file there is a single
NEWLINE character; at the end of each line of a CP/M text file
there is a RETURN character followed by a NEWLINE character.

.ti -5
2.	A CP/M file's length must be an even multiple of 128 bytes.
A Micronix file's length may be any number of bytes
(both are constrained to maximum file sizes).
CP/M text files are padded with ^Z characters at the end
to round them out to an even multiple of 128.
Micronix text files are not.

.in -5
There is a convenient utility for converting a text file back and forth
between the two formats.
To make a text file suitable for Micronix:

.ti +5
.bd
clean file

To make a text file suitable for CP/M or  
.bd
upm:

.ti +5
.bd
clean -u file

The name 
.bd
clean 
comes from the idea of cleaning out the excess RETURN characters
and ^Z characters at the end; "-u" stands for "unclean".
.bp

.bd
Programs that attempt 8080 instruction 
or interrupt manipulation, such as a program to format a hard disk,
or that "move" a conventional CP/M system, such as MOVCPM or SYSGEN,
will not work under
.bd
upm.
Nor can
.bd
upm
handle disk allocation vector CP/M calls (it returns nonsense).
Otherwise, there are no restrictions to the types of file that may be
run under this program.


.in -5
.bd
SEE ALSO
.in +5
.br
Upm tutorial in User Reference Manual


.in 0
NOTE: CP/M is a registered trademark of Digital Research.  WordStar
is a registered trademark of the MicroPro Corporation.
