; generated by disas version 3
; and hand edited
; Morrow Designs Sysgen Version 4.5
;
; movcpm must generate the whole system from 0x900
;
boot	equ	0000h
bios	equ	0001h
bdos	equ	0005h
dfcb	equ	005bh
fcbcr	equ	dfcb+32

loadp	equ	0900h

coni	equ	1
cono	equ	2
self	equ	14
openf	equ	15
dreadf	equ	20

seldsk	equ	24
settrk	equ	27
setsec	equ	30
setdma	equ	33
readf	equ	36
writef	equ	39

	org	0100h

tpa: 	JP	start		; .C.	    c3 43 03 

	DB	"COPYRIGHT (C) 1978, DIGITAL RESEARCH "
ost: 	DB	02H
spt: 	DB	1AH
tran: 	DB	01H,02H,03H,04H,05H,06H,07H,08H,09H,0AH,0BH,0CH,0DH,0EH,0FH
	DB	10H,11H,12H,13H,14H,15H,16H,17H,18H,19H,1AH,1BH,1CH,1DH,1EH
	DB	1FH,20H,21H,22H,23H,24H,25H,26H,27H,28H,29H,2AH,2BH,2CH,2DH
	DB	2EH,2FH,30H,31H,32H,33H,34H,35H,36H,37H,38H,39H,3AH,3BH,3CH
	DB	3DH,3EH,3FH,40H,41H,42H,43H,44H,45H,46H,47H,48H,49H,4AH,4BH
	DB	4CH,4DH,4EH,4FH,50H

	; copy the dpb in (HL) to (DE)

copydpb: LD	C,10H		; ..	    0e 10 
dpbl: 	LD	A,(HL)		; ~	    7e 
	INC	HL		; #	    23 
	LD	(DE),A		; .	    12 
	INC	DE		; .	    13 
	DEC	C		; .	    0d 
	JP	NZ,dpbl		; .|.	    c2 7c 01 
	RET			; .	    c9 

	; multiply A * 128 into HL

multsec: LD	L,A		; o	    6f 
	LD	H,00H		; &.	    26 00 
	ADD	HL,HL		; )	    29 
	ADD	HL,HL		; )	    29 
	ADD	HL,HL		; )	    29 
	ADD	HL,HL		; )	    29 
	ADD	HL,HL		; )	    29 
	ADD	HL,HL		; )	    29 
	ADD	HL,HL		; )	    29 
	RET			; .	    c9 

	; get a console character and convert to upper case in A

getchar: LD	C,coni		; ..	    0e 01 
	CALL	bdos		; ...	    cd 05 00 
	CP	61H		; .a	    fe 61 
	RET	C		; .	    d8 
	CP	7BH		; .{	    fe 7b 
	RET	NC		; .	    d0 
	AND	5FH		; ._	    e6 5f 
	RET			; .	    c9 

	; send a character in A to console

putchar: LD	E,A		; _	    5f 
	LD	C,cono		; ..	    0e 02 
	JP	bdos		; ...	    c3 05 00 

	; send cr, lf

crlf: 	LD	A,0DH		; >.	    3e 0d 
	CALL	putchar		; ...	    cd 9e 01 
	LD	A,0AH		; >.	    3e 0a 
	JP	putchar		; ...	    c3 9e 01 

	; send cr, lf, and message in HL

crmsg: 	PUSH	HL		; .	    e5 
	CALL	crlf		; ...	    cd a4 01 
	POP	HL		; .	    e1 
	
	; send message in HL

outmsg: LD	A,(HL)		; ~	    7e 
	OR	A		; .	    b7 
	RET	Z		; .	    c8 
	PUSH	HL		; .	    e5 
	CALL	putchar		; ...	    cd 9e 01 
	POP	HL		; .	    e1 
	INC	HL		; #	    23 
	JP	outmsg		; ...	    c3 b3 01 

	; write dpb in HL to bios

setdpb:	LD	HL,(dpbsave)	; *`.	    2a 60 06 
	EX	DE,HL		; .	    eb 
	CALL	copydpb		; .z.	    cd 7a 01 

	; select disk and return dph

sel: 	LD	A,(sdisk)	; :..	    3a d7 05 
	LD	C,A		; O	    4f 
	LD	DE,seldsk	; ...	    11 18 00 
	JP	biosc		; ...	    c3 ed 01 

	; set track

trk: 	LD	DE,settrk	; ...	    11 1b 00 
	JP	biosc		; ...	    c3 ed 01 

	; set sector

sec: 	LD	DE,setsec	; ...	    11 1e 00 
	LD	B,00H		; ..	    06 00 
	JP	biosc		; ...	    c3 ed 01 

	; set dma address to HL

dma: 	LD	DE,setdma	; .!.	    11 21 00 
	JP	biosc		; ...	    c3 ed 01 

	; read sector

read: 	LD	DE,readf	; .$.	    11 24 00 
	JP	biosc		; ...	    c3 ed 01 

	; write sector

write: 	LD	DE,writef	; .'.	    11 27 00 

	; call bios

biosc: 	LD	HL,(0001H)	; *..	    2a 01 00 
	ADD	HL,DE		; .	    19 
	JP	(HL)		; .	    e9 

	; read file sector

dread: 	LD	C,14H		; ..	    0e 14 
	JP	bdos		; ...	    c3 05 00 

	; open file

open: 	LD	C,0FH		; ..	    0e 0f 
	JP	bdos		; ...	    c3 05 00 

	; complain about tiny disk

single: LD	HL,smesg	; !..	    21 84 05 
	CALL	outmsg		; ...	    cd b3 01 
	JP	reboot		; .6.	    c3 36 04 

	; select disk and xfer system according to rw
	
xfer:
 	CALL	sel		; ...	    cd c6 01 
	LD	A,H		; |	    7c 
	OR	L		; .	    b5 
	JP	Z,selfail	; .3.	    ca 33 04 
	LD	DE,000AH	; ...	    11 0a 00 		; get dpb offset
	ADD	HL,DE		; .	    19 
	LD	E,(HL)		; ^	    5e 
	INC	HL		; #	    23 
	LD	D,(HL)		; V	    56 			; dpb in DE
	EX	DE,HL		; .	    eb 
	LD	(dpbsave),HL	; "`.	    22 60 06 		; save dpb
	INC	HL		; #	    23 
	XOR	A		; .	    af 
	LD	(dtype),A	; 2_.	    32 5f 06 		; dtype = 0
	OR	(HL)		; .	    b6 			; A = spt high
	DEC	HL		; +	    2b 
	JP	NZ,notnstr	; .?.	    c2 3f 02 		; not northstar 
	LD	A,(HL)		; ~	    7e 			; A = spt low
	CP	14H		; ..	    fe 14 		; 2.5k / track
	JP	Z,single	; ...	    ca fc 01 		; single density
	CP	28H		; .(	    fe 28 		; 5k / track
	JP	NZ,notnstr	; .?.	    c2 3f 02 
	LD	A,FFH		; >.	    3e ff 
	LD	(dtype),A	; 2_.	    32 5f 06 		; dtype = 0xff - nsdd
	LD	A,28H		; >(	    3e 28 
	LD	(spt),A		; 2).	    32 29 01 
	LD	A,02H		; >.	    3e 02 		; 2 reserved
	LD	(ost),A		; 2(.	    32 28 01 
	JP	H0277		; .w.	    c3 77 02 

notnstr: LD	DE,000BH	; ...	    11 0b 00 		; offset of cks
	PUSH	HL		; .	    e5 
	ADD	HL,DE		; .	    19 
	LD	A,(HL)		; ~	    7e 
	INC	HL		; #	    23 
	OR	(HL)		; .	    b6 
	POP	HL		; .	    e1 
	JP	NZ,floppy	; .f.	    c2 66 02 		; cks != 0
	LD	A,50H		; >P	    3e 50 		; 10k / track
	LD	(spt),A		; 2).	    32 29 01 
	LD	A,01H		; >.	    3e 01 		; 1 reserved
	LD	(ost),A		; 2(.	    32 28 01 
	PUSH	HL		; .	    e5 
	LD	DE,dpb2		; .r.	    11 72 06		; save biosdpb 
	CALL	copydpb		; .z.	    cd 7a 01 
	POP	HL		; .	    e1 
	LD	DE,dpb1		; .b.	    11 62 06 		; save it again
	CALL	copydpb		; .z.	    cd 7a 01 
	JP	H0277		; .w.	    c3 77 02 

floppy:	LD	A,1AH		; >.	    3e 1a 		; 26 sectors
	LD	(spt),A		; 2).	    32 29 01 		; 3.25 k
	LD	DE,dpb1		; .b.	    11 62 06 		; save bios dpb
	CALL	copydpb		; .z.	    cd 7a 01 
	LD	DE,dpb2		; .r.	    11 72 06 		; put dpb2 to bios
	CALL	setdpb		; ...	    cd bf 01 

H0277: 	LD	A,(dtype)	; :_.	    3a 5f 06 		; get drive type
	OR	A		; .	    b7 
	JP	Z,getput	; ...	    ca 9d 02 		; if not northstar

	LD	BC,boot		; ...	    01 00 00 		; track 0
	CALL	trk		; ...	    cd d0 01 
	LD	BC,0001H	; ...	    01 01 00 		; sector 1
	CALL	sec		; ...	    cd d6 01 
	LD	BC,secbuf	; ...	    01 de 05 		; place to put it
	CALL	dma		; ...	    cd de 01 

bootr:	CALL	read		; ...	    cd e4 01 		; read boot sector
	OR	A		; .	    b7 
	JP	NZ,bootr	; ...	    c2 90 02 

	LD	A,(mtype)	; ::.	    3a 3a 06 		; in sector we just read
	LD	(095CH),A	; 2\.	    32 5c 09 		; save it

getput: LD	HL,0900H	; !..	    21 00 09		; dma to 0900h 
	LD	(dmaddr),HL	; "..	    22 db 05 
	LD	A,FFH		; >.	    3e ff 		; init so track starts at 0
	LD	(track),A	; 2..	    32 d8 05 

rwtrk: 	LD	HL,track	; !..	    21 d8 05		; track++ 
	INC	(HL)		; 4	    34 
	LD	A,(ost)		; :(.	    3a 28 01 		; check overflow
	CP	(HL)		; .	    be 
	JP	Z,overfl	; .B.	    ca 42 03 
	LD	C,(HL)		; N	    4e 			; set track
	CALL	trk		; ...	    cd d0 01 
	LD	A,FFH		; >.	    3e ff		; init so sector starts at 0 
	LD	(sector),A	; 2..	    32 d9 05 

rwsec: 	LD	A,(spt)		; :).	    3a 29 01 
	LD	HL,sector	; !..	    21 d9 05 
	INC	(HL)		; 4	    34 
	CP	(HL)		; .	    be 
	JP	Z,endtrk	; ...	    ca 16 03 		; sector == spt
	LD	HL,sector	; !..	    21 d9 05 
	LD	E,(HL)		; ^	    5e			; get sector to DE 
	LD	D,00H		; ..	    16 00 
	LD	HL,tran		; !*.	    21 2a 01 		; translate table
	LD	B,(HL)		; F	    46 			; get tran[0]
	ADD	HL,DE		; .	    19 
	LD	C,(HL)		; N	    4e 			; c = tran[sector]
	PUSH	BC		; .	    c5 
	CALL	sec		; ...	    cd d6 01 		; sector = (01),(tran[sector])
	POP	BC		; .	    c1 
	LD	A,C		; y	    79 
	SUB	B		; .	    90 
	CALL	multsec		; ...	    cd 85 01 		; hl = dma offset for sector
	EX	DE,HL		; .	    eb 
	LD	HL,(dmaddr)	; *..	    2a db 05 
	ADD	HL,DE		; .	    19 			; hl = dma address
	LD	B,H		; D	    44 
	LD	C,L		; M	    4d 
	CALL	dma		; ...	    cd de 01 		; point at place to read sector
	LD	A,(rw)		; :..	    3a da 05 		; get direction
	OR	A		; .	    b7 
	JP	Z,tryread	; ...	    ca f6 02 
	LD	C,00H		; ..	    0e 00		; write sector
	CALL	write		; ...	    cd ea 01 
	JP	chkrw		; ...	    c3 f9 02 

tryread: CALL	read		; ...	    cd e4 01 		; read sector
chkrw: 	OR	A		; .	    b7 
	JP	Z,rwsec		; ...	    ca bc 02 		; it worked! more!
	LD	HL,errmsg	; !..	    21 07 05 
	CALL	outmsg		; ...	    cd b3 01 		; we lose
	CALL	getchar		; ...	    cd 90 01 
	PUSH	AF		; .	    f5 
	CALL	crlf		; ...	    cd a4 01 
	POP	AF		; .	    f1 
	CP	0DH		; ..	    fe 0d 
	JP	Z,rwsec		; ...	    ca bc 02 		; if we don't care
	LD	HL,reboot	; !6.	    21 36 04 
	LD	(nsdd+1),HL	; "@.	    22 40 03 		; self modifying code, really?

endtrk:	LD	HL,1D00H	; !..	    21 00 1d 		; 5k from start
	LD	(dmaddr),HL	; "..	    22 db 05 
	LD	A,(dtype)	; :_.	    3a 5f 06 		; ff - nsdd
	OR	A		; .	    b7 
	JP	NZ,nsdd		; .?.	    c2 3f 03 
	LD	HL,1600H	; !..	    21 00 16		; 3.25k from start 
	LD	(dmaddr),HL	; "..	    22 db 05 
	LD	A,36H		; >6	    3e 36 		; 80 - 26 = 54
	LD	(spt),A		; 2).	    32 29 01		; rest to read from track 1 
	LD	HL,track	; !..	    21 d8 05 
	LD	A,(ost)		; :(.	    3a 28 01 		; this code is odd
	DEC	A		; =	    3d 			; we restore dpb if reserved track exhausted
	CP	(HL)		; .	    be 
	JP	Z,nsdd		; .?.	    ca 3f 03 
	LD	DE,dpb1		; .b.	    11 62 06 
	CALL	setdpb		; ...	    cd bf 01 
nsdd: 	JP	rwtrk		; ...	    c3 a8 02 		; this might be an abort or a loop

overfl:	RET			; .	    c9 

start: 	LD	SP,stack	; 1..	    31 a2 06 
	LD	HL,signon	; !I.	    21 49 04 
	CALL	outmsg		; ...	    cd b3 01 
	LD	A,(005DH)	; :].	    3a 5d 00 
	CP	20H		; ..	    fe 20 
	JP	Z,getsys	; ...	    ca a1 03 
	LD	DE,005CH	; .\.	    11 5c 00 
	CALL	open		; ...	    cd f7 01 
	INC	A		; <	    3c 
	JP	NZ,rdok		; .g.	    c2 67 03 
	LD	HL,nofile	; !`.	    21 60 05 
	CALL	crmsg		; ...	    cd ae 01 
	JP	reboot		; .6.	    c3 36 04 

rdok: 	XOR	A		; .	    af 
	LD	(fcbcr),A	; 2|.	    32 7c 00 
	LD	C,10H		; ..	    0e 10 
prerd: 	PUSH	BC		; .	    c5 
	LD	DE,005CH	; .\.	    11 5c 00 
	CALL	dread		; ...	    cd f2 01 
	POP	BC		; .	    c1 
	OR	A		; .	    b7 
	JP	NZ,H0398	; ...	    c2 98 03 
	DEC	C		; .	    0d 
	JP	NZ,prerd	; .m.	    c2 6d 03 
	LD	HL,0900H	; !..	    21 00 09 
rdinp: 	PUSH	HL		; .	    e5 
	LD	B,H		; D	    44 
	LD	C,L		; M	    4d 
	CALL	dma		; ...	    cd de 01 
	LD	DE,005CH	; .\.	    11 5c 00 
	CALL	dread		; ...	    cd f2 01 
	POP	HL		; .	    e1 
	OR	A		; .	    b7 
	JP	NZ,putsys	; ...	    c2 e7 03 
	LD	DE,0080H	; ...	    11 80 00 
	ADD	HL,DE		; .	    19 
	JP	rdinp		; ...	    c3 80 03 

H0398: 	LD	HL,badfile	; !m.	    21 6d 05 
	CALL	crmsg		; ...	    cd ae 01 
	JP	reboot		; .6.	    c3 36 04 

	; ask where this system is coming from

getsys: LD	HL,askget	; !k.	    21 6b 04 
	CALL	crmsg		; ...	    cd ae 01 
	CALL	getchar		; ...	    cd 90 01 
	CP	0DH		; ..	    fe 0d 		; CR - in memory already
	JP	Z,putsys	; ...	    ca e7 03 
	SUB	41H		; .A	    d6 41 
	CP	10H		; ..	    fe 10 
	JP	C,getc		; ...	    da bc 03		; range check 
	CALL	baddisk		; .C.	    cd 43 04 
	JP	getsys		; ...	    c3 a1 03 		; ask again

getc: 	ADD	A,41H		; .A	    c6 41 		; src drive letter in getmsg
	LD	(gdisk),A	; 2..	    32 a0 04 
	SUB	41H		; .A	    d6 41 
	LD	(sdisk),A	; 2..	    32 d7 05		; selected disk 
	CALL	crlf		; ...	    cd a4 01 
	LD	HL,getmsg	; !..	    21 96 04		; prompt to mount src disk 
	CALL	outmsg		; ...	    cd b3 01 
	CALL	getchar		; ...	    cd 90 01 
	CP	0DH		; ..	    fe 0d 
	JP	NZ,reboot	; .6.	    c2 36 04 		; maybe die
	CALL	crlf		; ...	    cd a4 01 
	XOR	A		; .	    af 
	LD	(rw),A		; 2..	    32 da 05		; do read 
	CALL	xfer		; ...	    cd 05 02 		
	LD	HL,done		; !..	    21 2e 05 
	CALL	outmsg		; ...	    cd b3 01 		; fall through

	; ask where this system is going

putsys: LD	HL,askput	; !..	    21 b4 04 
	CALL	crmsg		; ...	    cd ae 01 
	CALL	getchar		; ...	    cd 90 01 
	CP	0DH		; ..	    fe 0d 		; CR - die
	JP	Z,reboot	; .6.	    ca 36 04 
	SUB	41H		; .A	    d6 41 
	CP	10H		; ..	    fe 10 
	JP	C,putc		; ...	    da 02 04		; range check 
	CALL	baddisk		; .C.	    cd 43 04 
	JP	putsys		; ...	    c3 e7 03		; ask again 

putc: 	ADD	A,41H		; .A	    c6 41 		; dst drive letter in putmsg
	LD	(pdisk),A	; 2..	    32 f3 04 
	SUB	41H		; .A	    d6 41 
	LD	(sdisk),A	; 2..	    32 d7 05 		; selected disk
	LD	HL,putmsg	; !..	    21 e4 04 
	CALL	crmsg		; ...	    cd ae 01		; prompt to mount dest disk 
	CALL	getchar		; ...	    cd 90 01 
	CP	0DH		; ..	    fe 0d 		; CR - die
	JP	NZ,reboot	; .6.	    c2 36 04 
	CALL	crlf		; ...	    cd a4 01 
	LD	HL,rw		; !..	    21 da 05 
	LD	(HL),01H	; 6.	    36 01 		; do write
	CALL	xfer		; ...	    cd 05 02 
	LD	C,01H		; ..	    0e 01 
	CALL	write		; ...	    cd ea 01 
	LD	HL,done		; !..	    21 2e 05 
	CALL	outmsg		; ...	    cd b3 01 
	JP	putsys		; ...	    c3 e7 03 		; do more writes?

selfail: CALL	baddisk		; .C.	    cd 43 04 

reboot: XOR	A		; .	    af 
	LD	(sdisk),A	; 2..	    32 d7 05 
	CALL	sel		; ...	    cd c6 01 
	CALL	crlf		; ...	    cd a4 01 
	JP	boot		; ...	    c3 00 00 

baddisk: LD	HL,qdisk	; !@.	    21 40 05 
	JP	crmsg		; ...	    c3 ae 01 

signon: DB	"Morrow Designs Sysgen Version 4.5",00H
askget: DB	"Source drive name (Or return if in memory)",00H
getmsg: DB	"Source on "
gdisk: 	DB	04H,", then type return",00H
askput: DB	"Destination drive name (Or return to warm boot)",00H
putmsg: DB	"Destination on "
pdisk: 	DB	"6, then type return",00H
errmsg: DB	"Permanent error, Type return to ignore",00H
done: 	DB	"Function complete",00H
qdisk: 	DB	"Invalid drive (Use A through P)",00H
nofile: DB	"No such file",00H
badfile: DB	"Source file incomplete",00H
smesg: 	DB	"Can not generate systems on 5 1/4 diskettes",0DH,0AH,"th"
	DB	"at are formatted in single density.",00H
sdisk: 	DB	"o"
track: 	DB	" "
sector: DB	"w"
rw: 	DB	"a"
dmaddr: DW	6D72H
	DB	" "
secbuf: DB	62H,6FH,6FH,74H,29H,00H,44H,65H		; 128 bytes
	DB	73H,74H,69H,6EH,61H,74H,69H,6FH
	DB	6EH,20H,6FH,6EH,20H,36H,2CH,20H
	DB	74H,68H,65H,6EH,20H,74H,79H,70H
	DB	65H,20H,72H,65H,74H,75H,72H,6EH
	DB	00H,50H,65H,72H,6DH,61H,6EH,65H
	DB	6EH,74H,20H,65H,72H,72H,6FH,72H
	DB	2CH,20H,54H,79H,70H,65H,20H,72H
	DB	65H,74H,75H,72H,6EH,20H,74H,6FH
	DB	20H,69H,67H,6EH,6FH,72H,65H,00H
	DB	46H,75H,6EH,63H,74H,69H,6FH,6EH
	DB	20H,63H,6FH,6DH
mtype: 	DB	70H,6CH,65H,74H				; mtype is at offset 05ch
	DB	65H,00H,49H,6EH,76H,61H,6CH,69H
	DB	64H,20H,64H,72H,69H,76H,65H,20H
	DB	28H,55H,73H,65H,20H,41H,20H,74H
	DB	68H,72H,6FH,75H,67H,68H,20H,50H
	DB	00H
dtype: 	DB	00H
dpbsave: DW	6F4EH
dpb1: 	DW	7320H,6375H,2068H,6966H,656CH,5300H,756FH,6372H
dpb2: 	DW	001AH,0703H,F200H,3F00H,C000H,1000H,0200H,tpa
	DB	00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H
	DB	00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H
	DB	00H,00H
stack: 	DB	00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H
	DB	00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H
	DB	00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H
	DB	00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H
	DB	00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H
	DB	00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H
	DB	00H,00H,00H,00H
