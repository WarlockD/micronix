 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 1 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


       1/       0 :                     ; Reformatted and converted for cross-assembly by Macro Assembler AS
       2/       0 :                     ; Eric Smith <spacewar@gmail.com> 2018-01-24
       3/       0 :                     ; from original source os2ccp.asm from
       4/       0 :                     ;   http://www.cpm.z80.de/download/cpm2-plm.zip
       5/       0 :                     
       6/       0 :                     ; Changes:
       7/       0 :                     ;   multiple instructions per line split to separate lines
       8/       0 :                     ;   dollar sign in labels replaced by underscore
       9/       0 :                     ;   dollar sign (as digit separator) in binary constants removed
      10/       0 :                     ;   single quotes around strings replaced with double quotes
      11/       0 :                     ;   true and false replaced with _true and _false
      12/       0 :                     ;   replaced "not" operator with "~"
      13/       0 :                     ;   removed empty comments
      14/       0 :                     ;   added ifdef origin to allow origin to be specified from command line
      15/       0 :                     ;   added commments about serial number
      16/       0 :                     ;   added ifdefs on "noserial" to omit serialization check
      17/       0 :                     
      18/       0 :                     
      19/       0 :                     	.cpu	8080
      20/       0 :                     
      21/       0 :                     	title	"console command processor (CCP), ver 2.0"
      22/       0 :                     ;	assembly language version of the CP/M console command processor
      23/       0 :                     
      24/       0 :                     ;	version 2.2 February, 1980
      25/       0 :                     
      26/       0 :                     ;	Copyright (c) 1976, 1977, 1978, 1979, 1980
      27/       0 :                     ;	Digital Research
      28/       0 :                     ;	Box 579, Pacific Grove,
      29/       0 :                     ;	California, 93950
      30/       0 :                     
      31/       0 : =0H                 _false	equ	0000h
      32/       0 : =FFFFFFFFFFF..      _true	equ	~_false
      33/       0 : =0H                 testing	equ	_false	;true if debugging
      34/       0 :                     
      35/       0 :                     
      36/       0 : =>UNDEFINED         	ifdef	origin
      37/       0 :                     	org	origin
      38/       0 :                     bdosl	equ	$+800h		;bdos location
      39/       0 : =>TRUE              	else
      40/       0 : =>FALSE             	if	testing
      41/       0 :                     	org	3400h
      42/       0 :                     bdosl	equ	$+800h		;bdos location
      43/       0 : =>TRUE              	else
      44/       0 :                     	org	000h
      45/       0 : =800H               bdosl	equ	$+800h		;bdos location
      46/       0 : [40]                	endif
      47/       0 : [36]                	endif
      48/       0 : =100H               tran	equ	100h
      49/       0 : =0H                 tranm	equ	$
      50/       0 : =0H                 ccploc	equ	$
      51/       0 :                     
      52/       0 :                     ;	********************************************************
      53/       0 :                     ;	*	Base of CCP contains the following code/data   *
      54/       0 :                     ;	*	ccp:	jmp ccpstart	(start with command)   *
      55/       0 :                     ;	*		jmp ccpclear    (start, clear command) *
      56/       0 :                     ;	*	ccp+6	127		(max command length)   *
      57/       0 :                     ;	*	ccp+7	comlen		(command length = 00)  *
      58/       0 :                     ;	*	ccp+8	' ... '		(16 blanks)	       *
      59/       0 :                     ;	********************************************************
      60/       0 :                     ;	* Normal entry is at ccp, where the command line given *
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 2 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


      61/       0 :                     ;	* at ccp+8 is executed automatically (normally a null  *
      62/       0 :                     ;	* command with comlen = 00).  An initializing program  *
      63/       0 :                     ;	* can be automatically loaded by storing the command   *
      64/       0 :                     ;	* at ccp+8, with the command length at ccp+7.  In this *
      65/       0 :                     ;	* case, the ccp executes the command before prompting  *
      66/       0 :                     ;	* the console for input.  Note that the command is exe-*
      67/       0 :                     ;	* cuted on both warm and cold starts.  When the command*
      68/       0 :                     ;	* line is initialized, a jump to "jmp ccpclear" dis-   *
      69/       0 :                     ;	* ables the automatic command execution.               *
      70/       0 :                     ;	********************************************************
      71/       0 :                     
      72/       0 : C3 5C 03            	jmp	ccpstart	;start ccp with possible initial command
      73/       3 : C3 58 03            	jmp	ccpclear	;clear the command buffer
      74/       6 : 7F                  maxlen:	db	127	;max buffer length
      75/       7 : 00                  comlen:	db	0	;command length (filled in by dos)
      76/       8 :                     ;	(command executed initially if comlen non zero)
      77/       8 :                     combuf:
      78/       8 : 20 20 20 20 20 20   	db	"        "	;8 character fill
                    20 20 
      79/      10 : 20 20 20 20 20 20   	db	"        "	;8 character fill
                    20 20 
      80/      18 : 43 4F 50 59 52 49   	db	"COPYRIGHT (C) 1979, DIGITAL RESEARCH  "; 38
                    47 48 54 20 28 43 
                    29 20 31 39 37 39 
                    2C 20 44 49 47 49 
                    54 41 4C 20 52 45 
                    53 45 41 52 43 48 
                    20 20 
      81/      3E :                     	ds	128-($-combuf)
      82/      88 :                     ;	total buffer length is 128 characters
      83/      88 : 08 00               comaddr:dw	combuf	;address of next to char to scan
      84/      8A :                     staddr:	ds	2	;starting address of current fillfcb request
      85/      8C :                     
      86/      8C : =4H                 diska	equ	0004h	;disk address for current disk
      87/      8C : =5H                 bdos	equ	0005h	;primary bdos entry point
      88/      8C : =80H                buff	equ	0080h	;default buffer
      89/      8C : =5CH                fcb	equ	005ch	;default file control block
      90/      8C :                     
      91/      8C : =1H                 rcharf	equ	1	;read character function
      92/      8C : =2H                 pcharf	equ	2	;print character function
      93/      8C : =9H                 pbuff	equ	9	;print buffer function
      94/      8C : =AH                 rbuff	equ	10	;read buffer function
      95/      8C : =BH                 breakf	equ	11	;break key function
      96/      8C : =CH                 liftf	equ	12	;lift head function (no operation)
      97/      8C : =DH                 initf	equ	13	;initialize bdos function
      98/      8C : =EH                 self	equ	14	;select disk function
      99/      8C : =FH                 openf	equ	15	;open file function
     100/      8C : =10H                closef	equ	16	;close file function
     101/      8C : =11H                searf	equ	17	;search for file function
     102/      8C : =12H                searnf	equ	18	;search for next file function
     103/      8C : =13H                delf	equ	19	;delete file function
     104/      8C : =14H                dreadf	equ	20	;disk read function
     105/      8C : =15H                dwritf	equ	21	;disk write function
     106/      8C : =16H                makef	equ	22	;file make function
     107/      8C : =17H                renf	equ	23	;rename file function
     108/      8C : =18H                logf	equ	24	;return login vector
     109/      8C : =19H                cself	equ	25	;return currently selected drive number
     110/      8C : =1AH                dmaf	equ	26	;set dma address
     111/      8C : =20H                userf	equ	32	;set user number
     112/      8C :                     
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 3 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     113/      8C :                     ;	special fcb flags
     114/      8C : =9H                 rofile	equ	9	;read only file
     115/      8C : =AH                 sysfile	equ	10	;system file flag
     116/      8C :                     
     117/      8C :                     ;	special characters
     118/      8C : =DH                 cr	equ	13	;carriage return
     119/      8C : =AH                 lf	equ	10	;line feed
     120/      8C : =5FH                la	equ	5fh	;left arrow
     121/      8C : =1AH                eofile	equ	1ah	;end of file
     122/      8C :                     
     123/      8C :                     ;	utility procedures
     124/      8C :                     printchar:
     125/      8C : 5F                  	mov	e,a
     126/      8D : 0E 02               	mvi	c,pcharf
     127/      8F : C3 05 00            	jmp	bdos
     128/      92 :                     
     129/      92 :                     printbc:
     130/      92 :                     	;print character, but save b,c registers
     131/      92 : C5                  	push	b
     132/      93 : CD 8C 00            	call	printchar
     133/      96 : C1                  	pop	b
     134/      97 : C9                  	ret
     135/      98 :                     
     136/      98 :                     crlf:
     137/      98 : 3E 0D               	mvi	a,cr
     138/      9A : CD 92 00            	call	printbc
     139/      9D : 3E 0A               	mvi	a,lf
     140/      9F : C3 92 00            	jmp	printbc
     141/      A2 :                     
     142/      A2 :                     blank:
     143/      A2 : 3E 20               	mvi	a,' '
     144/      A4 : C3 92 00            	jmp	printbc
     145/      A7 :                     
     146/      A7 :                     print:	;print string starting at b,c until next 00 entry
     147/      A7 : C5                  	push	b		;now print the string
     148/      A8 : CD 98 00            	call	crlf
     149/      AB : E1                  	pop	h
     150/      AC : 7E                  prin0:	mov	a,m		;stop on 00
     151/      AD : B7                  	ora	a
     152/      AE : C8                  	rz
     153/      AF : 23                  	inx	h		;ready for next
     154/      B0 : E5                  	push	h
     155/      B1 : CD 8C 00            	call	printchar	;character printed
     156/      B4 : E1                  	pop	h
     157/      B5 : C3 AC 00            	jmp	prin0		;for another character
     158/      B8 :                     
     159/      B8 :                     initialize:
     160/      B8 : 0E 0D               	mvi	c,initf
     161/      BA : C3 05 00            	jmp	bdos
     162/      BD :                     
     163/      BD :                     select:
     164/      BD : 5F                  	mov	e,a
     165/      BE : 0E 0E               	mvi	c,self
     166/      C0 : C3 05 00            	jmp	bdos
     167/      C3 :                     
     168/      C3 :                     bdos_inr:
     169/      C3 : CD 05 00            	call	bdos
     170/      C6 : 32 EE 07            	sta	dcnt
     171/      C9 : 3C                  	inr	a
     172/      CA : C9                  	ret
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 4 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     173/      CB :                     
     174/      CB :                     open:	;open the file given by d,e
     175/      CB : 0E 0F               	mvi	c,openf
     176/      CD : C3 C3 00            	jmp	bdos_inr
     177/      D0 :                     
     178/      D0 :                     openc:	;open comfcb
     179/      D0 : AF                  	xra	a		;clear next record to read
     180/      D1 : 32 ED 07            	sta	comrec
     181/      D4 : 11 CD 07            	lxi	d,comfcb
     182/      D7 : C3 CB 00            	jmp	open
     183/      DA :                     
     184/      DA :                     close:	;close the file given by d,e
     185/      DA : 0E 10               	mvi	c,closef
     186/      DC : C3 C3 00            	jmp	bdos_inr
     187/      DF :                     
     188/      DF :                     search:	;search for the file given by d,e
     189/      DF : 0E 11               	mvi	c,searf
     190/      E1 : C3 C3 00            	jmp	bdos_inr
     191/      E4 :                     
     192/      E4 :                     searchn:
     193/      E4 :                     	;search for the next occurrence of the file given by d,e
     194/      E4 : 0E 12               	mvi	c,searnf
     195/      E6 : C3 C3 00            	jmp	bdos_inr
     196/      E9 :                     
     197/      E9 :                     searchcom:
     198/      E9 :                     	;search for comfcb file
     199/      E9 : 11 CD 07            	lxi	d,comfcb
     200/      EC : C3 DF 00            	jmp	search
     201/      EF :                     
     202/      EF :                     delete:	;delete the file given by d,e
     203/      EF : 0E 13               	mvi	c,delf
     204/      F1 : C3 05 00            	jmp	bdos
     205/      F4 :                     
     206/      F4 :                     bdos_cond:
     207/      F4 : CD 05 00            	call	bdos
     208/      F7 : B7                  	ora	a
     209/      F8 : C9                  	ret
     210/      F9 :                     
     211/      F9 :                     diskread:
     212/      F9 :                     	;read the next record from the file given by d,e
     213/      F9 : 0E 14               	mvi	c,dreadf
     214/      FB : C3 F4 00            	jmp	bdos_cond
     215/      FE :                     
     216/      FE :                     diskreadc:
     217/      FE :                     	;read the comfcb file
     218/      FE : 11 CD 07            	lxi	d,comfcb
     219/     101 : C3 F9 00            	jmp	diskread
     220/     104 :                     
     221/     104 :                     diskwrite:
     222/     104 :                     	;write the next record to the file given by d,e
     223/     104 : 0E 15               	mvi	c,dwritf
     224/     106 : C3 F4 00            	jmp	bdos_cond
     225/     109 :                     
     226/     109 :                     make:	;create the file given by d,e
     227/     109 : 0E 16               	mvi	c,makef
     228/     10B : C3 C3 00            	jmp	bdos_inr
     229/     10E :                     
     230/     10E :                     renam:	;rename the file given by d,e
     231/     10E : 0E 17               	mvi	c,renf
     232/     110 : C3 05 00            	jmp	bdos
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 5 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     233/     113 :                     
     234/     113 :                     getuser:
     235/     113 :                     	;return current user code in a
     236/     113 : 1E FF               	mvi	e,0ffh		;drop through to setuser
     237/     115 :                     
     238/     115 :                     setuser:
     239/     115 : 0E 20                       mvi	c,userf		;sets user number
     240/     117 : C3 05 00            	jmp	bdos
     241/     11A :                     
     242/     11A :                     saveuser:
     243/     11A :                     	;save user#/disk# before possible ^c or transient
     244/     11A : CD 13 01            	call	getuser		;code to a
     245/     11D : 87                  	add	a		;rot left
     246/     11E : 87                  	add	a
     247/     11F : 87                  	add	a
     248/     120 : 87                  	add	a
     249/     121 : 21 EF 07            	lxi	h,cdisk		;4b=user, 4b=disk
     250/     124 : B6                  	ora	m
     251/     125 : 32 04 00            	sta	diska		;stored away in memory for later
     252/     128 : C9                  	ret
     253/     129 :                     
     254/     129 :                     setdiska:
     255/     129 : 3A EF 07            	lda	cdisk		;user/disk
     256/     12C : 32 04 00            	sta	diska
     257/     12F : C9                  	ret
     258/     130 :                     
     259/     130 :                     translate:
     260/     130 :                     	;translate character in register A to upper case
     261/     130 : FE 61               	cpi	61h		;return if below lower case a
     262/     132 : D8                  	rc
     263/     133 : FE 7B               	cpi	7bh		;return if above lower case z
     264/     135 : D0                  	rnc
     265/     136 : E6 5F               	ani	5fh		;translated to upper case
     266/     138 : C9                  	ret
     267/     139 :                     
     268/     139 :                     readcom:
     269/     139 :                     	;read the next command into the command buffer
     270/     139 :                     	;check for submit file
     271/     139 : 3A AB 07            	lda	submit
     272/     13C : B7                  	ora	a
     273/     13D : CA 96 01            	jz	nosub
     274/     140 :                     	;scanning a submit file
     275/     140 :                     	;change drives to open and read the file
     276/     140 : 3A EF 07            	lda	cdisk
     277/     143 : B7                  	ora	a
     278/     144 : 3E 00               	mvi	a,0
     279/     146 : C4 BD 00            	cnz	select
     280/     149 :                     	;have to open again in case xsub present
     281/     149 : 11 AC 07            	lxi	d,subfcb	;skip if no sub
     282/     14C : CD CB 00            	call	open
     283/     14F : CA 96 01            	jz	nosub
     284/     152 : 3A BB 07            	lda	subrc		;read last record(s) first
     285/     155 : 3D                  	dcr	a
     286/     156 : 32 CC 07            	sta	subcr		;current record to read
     287/     159 : 11 AC 07            	lxi	d,subfcb	;end of file if last record
     288/     15C : CD F9 00            	call	diskread
     289/     15F : C2 96 01            	jnz	nosub
     290/     162 :                     	;disk read is ok, transfer to combuf
     291/     162 : 11 07 00            	lxi	d,comlen
     292/     165 : 21 80 00            	lxi	h,buff
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 6 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     293/     168 : 06 80               	mvi	b,128
     294/     16A : CD 42 04            	call	move0
     295/     16D :                     	;line is transferred, close the file with a
     296/     16D :                     	;deleted record
     297/     16D : 21 BA 07            	lxi	h,submod	;clear fwflag
     298/     170 : 36 00               	mvi	m,0
     299/     172 : 23                  	inx	h		;one less record
     300/     173 : 35                  	dcr	m
     301/     174 : 11 AC 07            	lxi	d,subfcb
     302/     177 : CD DA 00            	call	close
     303/     17A : CA 96 01            	jz	nosub
     304/     17D :                     	;close went ok, return to original drive
     305/     17D : 3A EF 07            	lda	cdisk
     306/     180 : B7                  	ora	a
     307/     181 : C4 BD 00            	cnz	select
     308/     184 :                     	;print to the 00
     309/     184 : 21 08 00            	lxi	h,combuf
     310/     187 : CD AC 00            	call	prin0
     311/     18A : CD C2 01            	call	break_key
     312/     18D : CA A7 01            	jz	noread
     313/     190 : CD DD 01            	call	del_sub		;break key depressed
     314/     193 : C3 82 03            	jmp	ccp
     315/     196 :                     
     316/     196 :                     nosub:	;no submit file
     317/     196 : CD DD 01            	call	del_sub
     318/     199 :                     	;translate to upper case, store zero at end
     319/     199 : CD 1A 01            	call	saveuser	;user # save in case control c
     320/     19C : 0E 0A               	mvi	c,rbuff
     321/     19E : 11 06 00            	lxi	d,maxlen
     322/     1A1 : CD 05 00            	call	bdos
     323/     1A4 : CD 29 01            	call	setdiska	;no control c, so restore diska
     324/     1A7 :                     noread:	;enter here from submit file
     325/     1A7 :                     	;set the last character to zero for later scans
     326/     1A7 : 21 07 00            	lxi	h,comlen	;length is in b
     327/     1AA : 46                  	mov	b,m
     328/     1AB :                     readcom0:
     329/     1AB : 23                  	inx	h		;end of scan?
     330/     1AC : 78                  	mov	a,b
     331/     1AD : B7                  	ora	a
     332/     1AE : CA BA 01            	jz	readcom1	;get character and translate
     333/     1B1 : 7E                  	mov	a,m
     334/     1B2 : CD 30 01            	call	translate
     335/     1B5 : 77                  	mov	m,a
     336/     1B6 : 05                  	dcr	b
     337/     1B7 : C3 AB 01            	jmp	readcom0
     338/     1BA :                     
     339/     1BA :                     readcom1: ;end of scan, h,l address end of command
     340/     1BA : 77                  	mov	m,a		;store a zero
     341/     1BB : 21 08 00            	lxi	h,combuf	;ready to scan to zero
     342/     1BE : 22 88 00            	shld	comaddr
     343/     1C1 : C9                  	ret
     344/     1C2 :                     
     345/     1C2 :                     break_key:
     346/     1C2 :                     	;check for a character ready at the console
     347/     1C2 : 0E 0B               	mvi	c,breakf
     348/     1C4 : CD 05 00            	call	bdos
     349/     1C7 : B7                  	ora	a
     350/     1C8 : C8                  	rz
     351/     1C9 : 0E 01               	mvi	c,rcharf	;character cleared
     352/     1CB : CD 05 00            	call	bdos
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 7 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     353/     1CE : B7                  	ora	a
     354/     1CF : C9                  	ret
     355/     1D0 :                     
     356/     1D0 :                     cselect:
     357/     1D0 :                     	;get the currently selected drive number to reg-A
     358/     1D0 : 0E 19               	mvi	c,cself
     359/     1D2 : C3 05 00            	jmp	bdos
     360/     1D5 :                     
     361/     1D5 :                     setdmabuff:
     362/     1D5 :                     	;set default buffer dma address
     363/     1D5 : 11 80 00            	lxi	d,buff		;(drop through)
     364/     1D8 :                     
     365/     1D8 :                     setdma:
     366/     1D8 :                     	;set dma address to d,e
     367/     1D8 : 0E 1A               	mvi	c,dmaf
     368/     1DA : C3 05 00            	jmp	bdos
     369/     1DD :                     
     370/     1DD :                     del_sub:
     371/     1DD :                     	;delete the submit file, and set submit flag to false
     372/     1DD : 21 AB 07            	lxi	h,submit	;return if no sub file
     373/     1E0 : 7E                  	mov	a,m
     374/     1E1 : B7                  	ora	a
     375/     1E2 : C8                  	rz
     376/     1E3 : 36 00               	mvi	m,0		;submit flag is set to false
     377/     1E5 : AF                  	xra	a		;on drive a to erase file
     378/     1E6 : CD BD 00            	call	select
     379/     1E9 : 11 AC 07            	lxi	d,subfcb
     380/     1EC : CD EF 00            	call	delete
     381/     1EF : 3A EF 07            	lda	cdisk		;back to original drive
     382/     1F2 : C3 BD 00            	jmp	select
     383/     1F5 :                     
     384/     1F5 : =>UNDEFINED         	ifndef	noserial
     385/     1F5 :                     serialize:
     386/     1F5 :                     	;check serialization
     387/     1F5 : 11 28 03            	lxi	d,serial	;check six bytes
     388/     1F8 : 21 00 08            	lxi	h,bdosl
     389/     1FB : 06 06               	mvi	b,6
     390/     1FD : 1A                  ser0:	ldax	d
     391/     1FE : BE                  	cmp	m
     392/     1FF : C2 CF 03            	jnz	badserial
     393/     202 : 13                  	inx	d
     394/     203 : 23                  	inx	h
     395/     204 : 05                  	dcr	b
     396/     205 : C2 FD 01            	jnz	ser0
     397/     208 : C9                  	ret			;serial number is ok
     398/     209 : [384]               	endif
     399/     209 :                     
     400/     209 :                     comerr:
     401/     209 :                     	;error in command string starting at position
     402/     209 :                     	;'staddr' and ending with first delimiter
     403/     209 : CD 98 00            	call	crlf		;space to next line
     404/     20C : 2A 8A 00            	lhld	staddr		;h,l address first to print
     405/     20F :                     comerr0: ;print characters until blank or zero
     406/     20F : 7E                  	mov	a,m		; not blank
     407/     210 : FE 20               	cpi	' '
     408/     212 : CA 22 02            	jz	comerr1
     409/     215 : B7                  	ora	a		; not zero, so print it
     410/     216 : CA 22 02            	jz	comerr1
     411/     219 : E5                  	push	h
     412/     21A : CD 8C 00            	call	printchar
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 8 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     413/     21D : E1                  	pop	h
     414/     21E : 23                  	inx	h
     415/     21F : C3 0F 02            	jmp	comerr0;	for another character
     416/     222 :                     comerr1: ;print question mark,and delete sub file
     417/     222 : 3E 3F               	mvi	a,'?'
     418/     224 : CD 8C 00            	call	printchar
     419/     227 : CD 98 00            	call	crlf
     420/     22A : CD DD 01            	call	del_sub
     421/     22D : C3 82 03            	jmp	ccp ;restart with next command
     422/     230 :                     
     423/     230 :                     ; fcb scan and fill subroutine (entry is at fillfcb below)
     424/     230 :                     	;fill the comfcb, indexed by A (0 or 16)
     425/     230 :                     	;subroutines
     426/     230 :                     delim:	;look for a delimiter
     427/     230 : 1A                  	ldax	d		;not the last element
     428/     231 : B7                  	ora	a
     429/     232 : C8                  	rz
     430/     233 : FE 20               	cpi	' '		;non graphic
     431/     235 : DA 09 02            	jc	comerr
     432/     238 : C8                  	rz			;treat blank as delimiter
     433/     239 : FE 3D               	cpi	'='
     434/     23B : C8                  	rz
     435/     23C : FE 5F               	cpi	la		;left arrow
     436/     23E : C8                  	rz
     437/     23F : FE 2E               	cpi	'.'
     438/     241 : C8                  	rz
     439/     242 : FE 3A               	cpi	':'
     440/     244 : C8                  	rz
     441/     245 : FE 3B               	cpi	';'
     442/     247 : C8                  	rz
     443/     248 : FE 3C               	cpi	'<'
     444/     24A : C8                  	rz
     445/     24B : FE 3E               	cpi	'>'
     446/     24D : C8                  	rz
     447/     24E : C9                  	ret			;delimiter not found
     448/     24F :                     
     449/     24F :                     deblank: ;deblank the input line
     450/     24F : 1A                  	ldax	d		;treat end of line as blank
     451/     250 : B7                  	ora	a
     452/     251 : C8                  	rz
     453/     252 : FE 20               	cpi	' '
     454/     254 : C0                  	rnz
     455/     255 : 13                  	inx	d
     456/     256 : C3 4F 02            	jmp	deblank
     457/     259 :                     
     458/     259 :                     addh: ;add a to h,l
     459/     259 : 85                  	add	l
     460/     25A : 6F                  	mov	l,a
     461/     25B : D0                  	rnc
     462/     25C : 24                  	inr	h
     463/     25D : C9                  	ret
     464/     25E :                     
     465/     25E :                     fillfcb0:
     466/     25E :                     	;equivalent to fillfcb(0)
     467/     25E : 3E 00               	mvi	a,0
     468/     260 :                     
     469/     260 :                     fillfcb:
     470/     260 : 21 CD 07            	lxi	h,comfcb	;fcb rescanned at end
     471/     263 : CD 59 02            	call	addh
     472/     266 : E5                  	push	h
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 9 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     473/     267 : E5                  	push	h
     474/     268 : AF                  	xra	a		;clear selected disk (in case A:...)
     475/     269 : 32 F0 07            	sta	sdisk
     476/     26C : 2A 88 00            	lhld	comaddr		;command address in d,e
     477/     26F : EB                  	xchg
     478/     270 : CD 4F 02            	call	deblank		;to first non-blank character
     479/     273 : EB                  	xchg			;in case of errors
     480/     274 : 22 8A 00            	shld	staddr
     481/     277 : EB                  	xchg			;d,e has command, h,l has fcb address
     482/     278 : E1                  	pop	h
     483/     279 :                     	;look for preceding file name A: B: ...
     484/     279 : 1A                  	ldax	d		;use current disk if empty command
     485/     27A : B7                  	ora	a
     486/     27B : CA 89 02            	jz	setcur0
     487/     27E : DE 40               	sbi	'A'-1		;disk name held in b if : follows
     488/     280 : 47                  	mov	b,a
     489/     281 : 13                  	inx	d		;set disk name if :
     490/     282 : 1A                  	ldax	d
     491/     283 : FE 3A               	cpi	':'
     492/     285 : CA 90 02            	jz	setdsk
     493/     288 :                     
     494/     288 :                     setcur: ;set current disk
     495/     288 : 1B                  	dcx	d		;back to first character of command
     496/     289 :                     setcur0:
     497/     289 : 3A EF 07            	lda	cdisk
     498/     28C : 77                  	mov	m,a
     499/     28D : C3 96 02            	jmp	setname
     500/     290 :                     
     501/     290 :                     setdsk: ;set disk to name in register b
     502/     290 : 78                  	mov	a,b		;mark as disk selected
     503/     291 : 32 F0 07            	sta	sdisk
     504/     294 : 70                  	mov	m,b		;past the :
     505/     295 : 13                  	inx	d
     506/     296 :                     
     507/     296 :                     setname: ;set the file name field
     508/     296 : 06 08               	mvi	b,8		;file name length (max)
     509/     298 :                     setnam0:
     510/     298 : CD 30 02            	call	delim		;not a delimiter
     511/     29B : CA B9 02            	jz	padname
     512/     29E : 23                  	inx	h		;must be ?'s
     513/     29F : FE 2A               	cpi	'*'
     514/     2A1 : C2 A9 02            	jnz	setnam1
     515/     2A4 : 36 3F               	mvi	m,'?'		;to dec count
     516/     2A6 : C3 AB 02            	jmp	setnam2
     517/     2A9 :                     
     518/     2A9 :                     setnam1:
     519/     2A9 : 77                  	mov	m,a		;store character to fcb
     520/     2AA : 13                  	inx	d
     521/     2AB :                     setnam2:
     522/     2AB : 05                  	dcr	b		;count down length
     523/     2AC : C2 98 02            	jnz	setnam0
     524/     2AF :                     
     525/     2AF :                     	;end of name, truncate remainder
     526/     2AF : CD 30 02            trname:	call	delim		;set type field if delimiter
     527/     2B2 : CA C0 02            	jz	setty
     528/     2B5 : 13                  	inx	d
     529/     2B6 : C3 AF 02            	jmp	trname
     530/     2B9 :                     
     531/     2B9 :                     padname:
     532/     2B9 : 23                  	inx	h
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 10 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     533/     2BA : 36 20               	mvi	m,' '
     534/     2BC : 05                  	dcr	b
     535/     2BD : C2 B9 02            	jnz	padname
     536/     2C0 :                     
     537/     2C0 :                     setty: ;set the type field
     538/     2C0 : 06 03               	mvi	b,3		;skip the type field if no .
     539/     2C2 : FE 2E               	cpi	'.'
     540/     2C4 : C2 E9 02            	jnz	padty
     541/     2C7 : 13                  	inx	d		;past the ., to the file type field
     542/     2C8 :                     setty0: ;set the field from the command buffer
     543/     2C8 : CD 30 02            	call	delim
     544/     2CB : CA E9 02            	jz	padty
     545/     2CE : 23                  	inx	h
     546/     2CF : FE 2A               	cpi	'*'
     547/     2D1 : C2 D9 02            	jnz	setty1
     548/     2D4 : 36 3F               	mvi	m,'?'		;since * specified
     549/     2D6 : C3 DB 02            	jmp	setty2
     550/     2D9 :                     
     551/     2D9 :                     setty1: ;not a *, so copy to type field
     552/     2D9 : 77                  	mov	m,a
     553/     2DA : 13                  	inx	d
     554/     2DB :                     setty2: ;decrement count and go again
     555/     2DB : 05                  	dcr	b
     556/     2DC : C2 C8 02            	jnz	setty0
     557/     2DF :                     
     558/     2DF :                     	;end of type field, truncate
     559/     2DF :                     trtyp: ;truncate type field
     560/     2DF : CD 30 02            	call	delim
     561/     2E2 : CA F0 02            	jz	efill
     562/     2E5 : 13                  	inx	d
     563/     2E6 : C3 DF 02            	jmp	trtyp
     564/     2E9 :                     
     565/     2E9 :                     padty:	;pad the type field with blanks
     566/     2E9 : 23                  	inx	h
     567/     2EA : 36 20               	mvi	m,' '
     568/     2EC : 05                  	dcr	b
     569/     2ED : C2 E9 02            	jnz	padty
     570/     2F0 :                     
     571/     2F0 :                     efill: ;end of the filename/filetype fill, save command address
     572/     2F0 :                     	;fill the remaining fields for the fcb
     573/     2F0 : 06 03               	mvi	b,3
     574/     2F2 : 23                  efill0:	inx h
     575/     2F3 : 36 00               	mvi	m,0
     576/     2F5 : 05                  	dcr	b
     577/     2F6 : C2 F2 02            	jnz	efill0
     578/     2F9 : EB                  	xchg			;set new starting point
     579/     2FA : 22 88 00            	shld	comaddr
     580/     2FD :                     
     581/     2FD :                     	;recover the start address of the fcb and count ?'s
     582/     2FD : E1                  	pop	h		;b=0, c=8+3
     583/     2FE : 01 0B 00            	lxi	b,11
     584/     301 : 23                  scnq:	inx	h
     585/     302 : 7E                  	mov	a,m
     586/     303 : FE 3F               	cpi	'?'
     587/     305 : C2 09 03            	jnz	scnq0
     588/     308 :                     	;? found, count it in b
     589/     308 : 04                  	inr b
     590/     309 : 0D                  scnq0:	dcr	c
     591/     30A : C2 01 03            	jnz	scnq
     592/     30D :                     
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 11 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     593/     30D :                     	;number of ?'s in c, move to a and return with flags set
     594/     30D : 78                  	mov	a,b
     595/     30E : B7                  	ora	a
     596/     30F : C9                  	ret
     597/     310 :                     
     598/     310 :                     intvec:
     599/     310 :                     	;intrinsic function names (all are four characters)
     600/     310 : 44 49 52 20         	db	"DIR "
     601/     314 : 45 52 41 20         	db	"ERA "
     602/     318 : 54 59 50 45         	db	"TYPE"
     603/     31C : 53 41 56 45         	db	"SAVE"
     604/     320 : 52 45 4E 20         	db	"REN "
     605/     324 : 55 53 45 52                 db      "USER"
     606/     328 : =6H                 intlen	equ ($-intvec)/4 ;intrinsic function length
     607/     328 :                     	
     608/     328 :                     ; serial number (details not documented in original DRI source file)
     609/     328 : 00                  serial:	db	0		; OEM number, low byte
     610/     329 : 00                  	db	0		; CP/M version, 16h = 2.2
     611/     32A : 00                  	db	0		; OEM number, high byte
     612/     32B : 00 00 00            	db	0,0,0		; serial number, big-endian
     613/     32E :                     
     614/     32E :                     
     615/     32E :                     intrinsic:
     616/     32E :                     	;look for intrinsic functions (comfcb has been filled)
     617/     32E : 21 10 03            	lxi	h,intvec	;c counts intrinsics as scanned
     618/     331 : 0E 00               	mvi	c,0
     619/     333 :                     intrin0:
     620/     333 : 79                  	mov	a,c		;done with scan?
     621/     334 : FE 06               	cpi	intlen
     622/     336 : D0                  	rnc
     623/     337 :                     	;no, more to scan
     624/     337 : 11 CE 07            	lxi	d,comfcb+1	;beginning of name
     625/     33A : 06 04               	mvi	b,4		;length of match is in b
     626/     33C :                     intrin1:
     627/     33C : 1A                  	ldax	d		;match?
     628/     33D : BE                  	cmp	m
     629/     33E : C2 4F 03            	jnz	intrin2		;skip if no match
     630/     341 : 13                  	inx	d
     631/     342 : 23                  	inx	h
     632/     343 : 05                  	dcr	b
     633/     344 : C2 3C 03            	jnz	intrin1		;loop while matching
     634/     347 :                     
     635/     347 :                     	;complete match on name, check for blank in fcb
     636/     347 : 1A                  	ldax	d		;otherwise matched
     637/     348 : FE 20               	cpi	' '
     638/     34A : C2 54 03            	jnz	intrin3
     639/     34D : 79                  	mov	a,c		;with intrinsic number in a
     640/     34E : C9                  	ret
     641/     34F :                     
     642/     34F :                     intrin2: ;mismatch, move to end of intrinsic
     643/     34F : 23                  	inx	h
     644/     350 : 05                  	dcr	b
     645/     351 : C2 4F 03            	jnz	intrin2
     646/     354 :                     
     647/     354 :                     intrin3: ;try next intrinsic
     648/     354 : 0C                  	inr	c		;to next intrinsic number
     649/     355 : C3 33 03            	jmp	intrin0		;for another round
     650/     358 :                     
     651/     358 :                     ccpclear:
     652/     358 :                     	;clear the command buffer
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 12 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     653/     358 : AF                  	xra	a
     654/     359 : 32 07 00            	sta	comlen
     655/     35C :                     	;drop through to start ccp
     656/     35C :                     ccpstart:
     657/     35C :                     	;enter here from boot loader
     658/     35C : 31 AB 07            	lxi	sp,stack	;save initial disk number
     659/     35F : C5                  	push	b
     660/     360 :                             ;(high order 4bits=user code, low 4bits=disk#)
     661/     360 : 79                  	mov	a,c		;user code
     662/     361 : 1F                  	rar
     663/     362 : 1F                  	rar
     664/     363 : 1F                  	rar
     665/     364 : 1F                  	rar
     666/     365 : E6 0F               	ani	0fh
     667/     367 :                     	
     668/     367 : 5F                  	mov	e,a		;user code selected
     669/     368 : CD 15 01            	call	setuser
     670/     36B :                     	;initialize for this user, get $ flag
     671/     36B : CD B8 00                    call	initialize	;0ffh in accum if $ file present
     672/     36E : 32 AB 07                    sta	submit		;submit flag set if $ file present
     673/     371 : C1                          pop	b		;recall user code and disk number
     674/     372 : 79                  	mov	a,c		;disk number in accumulator
     675/     373 : E6 0F               	ani	0fh
     676/     375 : 32 EF 07                    sta	cdisk		;clears user code nibble
     677/     378 : CD BD 00            	call	select		;proper disk is selected, now check sub files
     678/     37B :                     	;check for initial command
     679/     37B : 3A 07 00            	lda	comlen		;assume typed already
     680/     37E : B7                  	ora	a
     681/     37F : C2 98 03            	jnz	ccp0
     682/     382 :                     
     683/     382 :                     ccp:
     684/     382 :                     	;enter here on each command or error condition
     685/     382 : 31 AB 07            	lxi	sp,stack
     686/     385 : CD 98 00            	call	crlf		;print d> prompt, where d is disk name
     687/     388 : CD D0 01            	call	cselect		;get current disk number
     688/     38B : C6 41               	adi	'A'
     689/     38D : CD 8C 00            	call	printchar
     690/     390 : 3E 3E               	mvi	a,'>'
     691/     392 : CD 8C 00            	call	printchar
     692/     395 : CD 39 01            	call	readcom		;command buffer filled
     693/     398 :                     ccp0:	;(enter here from initialization with command full)
     694/     398 : 11 80 00            	lxi	d,buff		;default dma address at buff
     695/     39B : CD D8 01            	call	setdma
     696/     39E : CD D0 01            	call	cselect		;current disk number saved
     697/     3A1 : 32 EF 07            	sta	cdisk
     698/     3A4 : CD 5E 02            	call	fillfcb0	;command fcb filled
     699/     3A7 : C4 09 02            	cnz	comerr		;the name cannot be an ambiguous reference
     700/     3AA : 3A F0 07            	lda	sdisk
     701/     3AD : B7                  	ora	a
     702/     3AE : C2 A5 06            	jnz	userfunc
     703/     3B1 :                     	;check for an intrinsic function
     704/     3B1 : CD 2E 03            	call	intrinsic
     705/     3B4 : 21 C1 03            	lxi	h,jmptab	;index is in the accumulator
     706/     3B7 : 5F                  	mov	e,a		;index in d,e
     707/     3B8 : 16 00               	mvi	d,0
     708/     3BA : 19                  	dad	d
     709/     3BB : 19                  	dad	d
     710/     3BC : 7E                  	mov	a,m
     711/     3BD : 23                  	inx	h
     712/     3BE : 66                  	mov	h,m
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 13 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     713/     3BF : 6F                  	mov	l,a
     714/     3C0 : E9                  	pchl
     715/     3C1 :                     	;pc changes to the proper intrinsic or user function
     716/     3C1 :                     
     717/     3C1 :                     jmptab:
     718/     3C1 : 77 04               	dw	direct	;directory search
     719/     3C3 : 1F 05               	dw	erase	;file erase
     720/     3C5 : 5D 05               	dw	type	;type file
     721/     3C7 : AD 05               	dw	save	;save memory image
     722/     3C9 : 10 06               	dw	rename	;file rename
     723/     3CB : 8E 06               	dw	user	;user number
     724/     3CD : A5 06               	dw	userfunc;user-defined function
     725/     3CF :                     
     726/     3CF : =>UNDEFINED         	ifndef	noserial
     727/     3CF :                     badserial:
     728/     3CF : 21 F3 76            	LXI	H,76F3H	;'DI HLT' instructions.	
     729/     3D2 :                     	;typo "lxi h,di or (hlt shl 8)" here originally,
     730/     3D2 :                     	;corrected by comparing to disassembly of Clark Calkins.
     731/     3D2 : 22 00 00            	shld	ccploc
     732/     3D5 : 21 00 00            	lxi	h,ccploc
     733/     3D8 : E9                  	pchl
     734/     3D9 : [726]               	endif
     735/     3D9 :                     
     736/     3D9 :                     ;utility subroutines for intrinsic handlers
     737/     3D9 :                     readerr:
     738/     3D9 :                     	;print the read error message
     739/     3D9 : 01 DF 03            	lxi	b,rdmsg
     740/     3DC : C3 A7 00            	jmp	print
     741/     3DF : 52 45 41 44 20 45   rdmsg: db "READ ERROR",0
                    52 52 4F 52 00 
     742/     3EA :                     
     743/     3EA :                     nofile:
     744/     3EA :                     	;print no file message
     745/     3EA : 01 F0 03            	lxi	b,nofmsg
     746/     3ED : C3 A7 00            	jmp	print
     747/     3F0 : 4E 4F 20 46 49 4C   nofmsg: db "NO FILE",0
                    45 00 
     748/     3F8 :                     
     749/     3F8 :                     getnumber: ;read a number from the command line
     750/     3F8 : CD 5E 02            	call	fillfcb0	;should be number
     751/     3FB : 3A F0 07            	lda	sdisk		;cannot be prefixed
     752/     3FE : B7                  	ora	a
     753/     3FF : C2 09 02            	jnz	comerr
     754/     402 :                     	;convert the byte value in comfcb to binary
     755/     402 : 21 CE 07            	lxi	h,comfcb+1	;(b=0, c=11)
     756/     405 : 01 0B 00            	lxi	b,11
     757/     408 :                     	;value accumulated in b, c counts name length to zero
     758/     408 : 7E                  conv0:	mov	a,m
     759/     409 : FE 20               	cpi ' '
     760/     40B : CA 33 04            	jz	conv1
     761/     40E :                     	;more to scan, convert char to binary and add
     762/     40E : 23                  	inx	h		;valid?
     763/     40F : D6 30               	sui	'0'
     764/     411 : FE 0A               	cpi	10
     765/     413 : D2 09 02            	jnc	comerr
     766/     416 : 57                  	mov	d,a		;save value
     767/     417 : 78                  	mov	a,b		;mult by 10
     768/     418 : E6 E0               	ani	11100000b
     769/     41A : C2 09 02            	jnz	comerr
     770/     41D : 78                  	mov	a,b		;recover value
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 14 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     771/     41E : 07                  	rlc			;*8
     772/     41F : 07                  	rlc
     773/     420 : 07                  	rlc
     774/     421 : 80                  	add	b
     775/     422 : DA 09 02            	jc	comerr
     776/     425 : 80                  	add	b		;*8+*2 = *10
     777/     426 : DA 09 02            	jc	comerr
     778/     429 : 82                  	add	d		;+digit
     779/     42A : DA 09 02            	jc	comerr
     780/     42D : 47                  	mov	b,a		;for another digit
     781/     42E : 0D                  	dcr	c
     782/     42F : C2 08 04            	jnz	conv0
     783/     432 : C9                  	ret
     784/     433 :                     conv1:	;end of digits, check for all blanks
     785/     433 : 7E                  	mov	a,m		;blanks?
     786/     434 : FE 20               	cpi	' '
     787/     436 : C2 09 02            	jnz	comerr
     788/     439 : 23                  	inx	h
     789/     43A : 0D                  	dcr	c
     790/     43B : C2 33 04            	jnz	conv1
     791/     43E : 78                  	mov	a,b		;recover value
     792/     43F : C9                  	ret
     793/     440 :                     
     794/     440 :                     movename:
     795/     440 :                     	;move 3 characters from h,l to d,e addresses
     796/     440 : 06 03               	mvi	b,3
     797/     442 : 7E                  move0:	mov	a,m
     798/     443 : 12                  	stax	d
     799/     444 : 23                  	inx	h
     800/     445 : 13                  	inx	d
     801/     446 : 05                  	dcr	b
     802/     447 : C2 42 04            	jnz	move0
     803/     44A : C9                  	ret
     804/     44B :                     
     805/     44B :                     addhcf:	;buff + a + c to h,l followed by fetch
     806/     44B : 21 80 00            	lxi	h,buff
     807/     44E : 81                  	add	c
     808/     44F : CD 59 02            	call	addh
     809/     452 : 7E                  	mov	a,m
     810/     453 : C9                  	ret
     811/     454 :                     
     812/     454 :                     setdisk:
     813/     454 :                     	;change disks for this command, if requested
     814/     454 : AF                  	xra	a		;clear disk name from fcb
     815/     455 : 32 CD 07            	sta	comfcb
     816/     458 : 3A F0 07            	lda	sdisk		;no action if not specified
     817/     45B : B7                  	ora	a
     818/     45C : C8                  	rz
     819/     45D : 3D                  	dcr	a		;already selected
     820/     45E : 21 EF 07            	lxi	h,cdisk
     821/     461 : BE                  	cmp	m
     822/     462 : C8                  	rz
     823/     463 : C3 BD 00            	jmp	select
     824/     466 :                     
     825/     466 :                     resetdisk:
     826/     466 :                     	;return to original disk after command
     827/     466 : 3A F0 07            	lda	sdisk		;no action if not selected
     828/     469 : B7                  	ora	a
     829/     46A : C8                  	rz
     830/     46B : 3D                  	dcr	a		;same disk
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 15 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     831/     46C : 21 EF 07            	lxi	h,cdisk
     832/     46F : BE                  	cmp	m
     833/     470 : C8                  	rz
     834/     471 : 3A EF 07            	lda	cdisk
     835/     474 : C3 BD 00            	jmp	select
     836/     477 :                     
     837/     477 :                     ;individual intrinsics follow
     838/     477 :                     direct:
     839/     477 :                     	;directory search
     840/     477 : CD 5E 02            	call	fillfcb0	;comfcb gets file name
     841/     47A : CD 54 04            	call	setdisk		;change disk drives if requested
     842/     47D : 21 CE 07            	lxi	h,comfcb+1	;may be empty request
     843/     480 : 7E                  	mov	a,m
     844/     481 : FE 20               	cpi	' '		;skip fill of ??? if not blank
     845/     483 : C2 8F 04            	jnz	dir1
     846/     486 :                     	;set comfcb to all ??? for current disk
     847/     486 : 06 0B               	mvi	b,11		;length of fill ????????.???
     848/     488 : 36 3F               dir0:	mvi	m,'?'
     849/     48A : 23                  	inx	h
     850/     48B : 05                  	dcr	b
     851/     48C : C2 88 04            	jnz	dir0
     852/     48F :                     	;not a blank request, must be in comfcb
     853/     48F : 1E 00               dir1:	mvi	e,0		;E counts directory entries
     854/     491 : D5                  	push	d
     855/     492 : CD E9 00            	call	searchcom	;first one has been found
     856/     495 : CC EA 03            	cz	nofile		;not found message
     857/     498 : CA 1B 05            dir2:	jz	endir
     858/     49B :                     	;found, but may be system file
     859/     49B : 3A EE 07            	lda	dcnt		;get the location of the element
     860/     49E : 0F                  	rrc
     861/     49F : 0F                  	rrc
     862/     4A0 : 0F                  	rrc
     863/     4A1 : E6 60               	ani	1100000b
     864/     4A3 : 4F                  	mov	c,a
     865/     4A4 :                     	;c contains base index into buff for dir entry
     866/     4A4 : 3E 0A               	mvi	a,sysfile	;value to A
     867/     4A6 : CD 4B 04            	call	addhcf
     868/     4A9 : 17                  	ral			;skip if system file
     869/     4AA : DA 0F 05            	jc	dir6
     870/     4AD :                     	;c holds index into buffer
     871/     4AD :                     	;another fcb found, new line?
     872/     4AD : D1                  	pop	d
     873/     4AE : 7B                  	mov	a,e
     874/     4AF : 1C                  	inr	e
     875/     4B0 : D5                  	push	d
     876/     4B1 :                     	;e=0,1,2,3,...new line if mod 4 = 0
     877/     4B1 : E6 03               	ani	11b		;and save the test
     878/     4B3 : F5                  	push	psw
     879/     4B4 : C2 CC 04            	jnz	dirhdr0		;header on current line
     880/     4B7 : CD 98 00            	call	crlf
     881/     4BA : C5                  	push	b
     882/     4BB : CD D0 01            	call	cselect
     883/     4BE : C1                  	pop	b
     884/     4BF :                     	;current disk in A
     885/     4BF : C6 41               	adi	'A'
     886/     4C1 : CD 92 00            	call	printbc
     887/     4C4 : 3E 3A               	mvi	a,':'
     888/     4C6 : CD 92 00            	call	printbc
     889/     4C9 : C3 D4 04            	jmp	dirhdr1		;skip current line hdr
     890/     4CC :                     dirhdr0:
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 16 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     891/     4CC : CD A2 00            	call	blank		;after last one
     892/     4CF : 3E 3A               	mvi	a,':'
     893/     4D1 : CD 92 00            	call	printbc
     894/     4D4 :                     dirhdr1:
     895/     4D4 : CD A2 00            	call	blank
     896/     4D7 :                     	;compute position of name in buffer
     897/     4D7 : 06 01               	mvi	b,1		;start with first character of name
     898/     4D9 : 78                  dir3:	mov	a,b		;buff+a+c fetched
     899/     4DA : CD 4B 04            	call	addhcf
     900/     4DD : E6 7F               	ani	7fh		;mask flags
     901/     4DF :                     	;may delete trailing blanks
     902/     4DF : FE 20               	cpi	' '		;check for blank type
     903/     4E1 : C2 F9 04            	jnz	dir4
     904/     4E4 : F1                  	pop	psw		;may be 3rd item
     905/     4E5 : F5                  	push	psw
     906/     4E6 : FE 03               	cpi	3		;place blank at end if not
     907/     4E8 : C2 F7 04            	jnz	dirb
     908/     4EB : 3E 09               	mvi	a,9		;first char of type
     909/     4ED : CD 4B 04            	call	addhcf
     910/     4F0 : E6 7F               	ani	7fh
     911/     4F2 : FE 20               	cpi	' '
     912/     4F4 : CA 0E 05            	jz	dir5
     913/     4F7 :                     	;not a blank in the file type field
     914/     4F7 : 3E 20               dirb:	mvi	a,' '		;restore trailing filename chr
     915/     4F9 :                     dir4:
     916/     4F9 : CD 92 00            	call	printbc		;char printed
     917/     4FC : 04                  	inr	b
     918/     4FD : 78                  	mov	a,b
     919/     4FE : FE 0C               	cpi	12
     920/     500 : D2 0E 05            	jnc	dir5
     921/     503 :                     	;check for break between names
     922/     503 : FE 09               	cpi	9		;for another char
     923/     505 : C2 D9 04            	jnz	dir3
     924/     508 :                     	;print a blank between names
     925/     508 : CD A2 00            	call	blank
     926/     50B : C3 D9 04            	jmp	dir3
     927/     50E :                     
     928/     50E :                     dir5:	;end of current entry
     929/     50E : F1                  	pop	psw		;discard the directory counter (mod 4)
     930/     50F : CD C2 01            dir6:	call	break_key	;check for interrupt at keyboard
     931/     512 : C2 1B 05            	jnz	endir		;abort directory search
     932/     515 : CD E4 00            	call	searchn		;for another entry
     933/     518 : C3 98 04            	jmp	dir2
     934/     51B :                     endir:	;end of directory scan
     935/     51B : D1                  	pop	d		;discard directory counter
     936/     51C : C3 86 07            	jmp	retcom
     937/     51F :                     
     938/     51F :                     
     939/     51F :                     erase:
     940/     51F : CD 5E 02            	call	fillfcb0	;cannot be all ???'s
     941/     522 : FE 0B               	cpi	11
     942/     524 : C2 42 05            	jnz	erasefile
     943/     527 :                     	;erasing all of the disk
     944/     527 : 01 52 05            	lxi	b,ermsg
     945/     52A : CD A7 00            	call	print
     946/     52D : CD 39 01            	call	readcom
     947/     530 : 21 07 00            	lxi	h,comlen	;bad input
     948/     533 : 35                  	dcr	m
     949/     534 : C2 82 03            	jnz	ccp
     950/     537 : 23                  	inx	h
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 17 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


     951/     538 : 7E                  	mov	a,m
     952/     539 : FE 59               	cpi	'Y'
     953/     53B : C2 82 03            	jnz	ccp
     954/     53E :                     	;ok, erase the entire diskette
     955/     53E : 23                  	inx	h		;otherwise error at retcom
     956/     53F : 22 88 00            	shld	comaddr
     957/     542 :                     erasefile:
     958/     542 : CD 54 04            	call	setdisk
     959/     545 : 11 CD 07            	lxi	d,comfcb
     960/     548 : CD EF 00            	call	delete
     961/     54B : 3C                  	inr	a		;255 returned if not found
     962/     54C : CC EA 03            	cz	nofile		;no file message if so
     963/     54F : C3 86 07            	jmp	retcom
     964/     552 :                     
     965/     552 : 41 4C 4C 20 28 59   ermsg:	db	"ALL (Y/N)?",0
                    2F 4E 29 3F 00 
     966/     55D :                     
     967/     55D :                     type:
     968/     55D : CD 5E 02            	call	fillfcb0	;don't allow ?'s in file name
     969/     560 : C2 09 02            	jnz	comerr
     970/     563 : CD 54 04            	call	setdisk		;open the file
     971/     566 : CD D0 00            	call	openc
     972/     569 : CA A7 05            	jz	typerr		;zero flag indicates not found
     973/     56C :                     	;file opened, read 'til eof
     974/     56C : CD 98 00            	call	crlf		;read first buffer
     975/     56F : 21 F1 07            	lxi	h,bptr
     976/     572 : 36 FF               	mvi	m,255
     977/     574 :                     type0:	;loop on bptr
     978/     574 : 21 F1 07            	lxi	h,bptr		;end buffer
     979/     577 : 7E                  	mov	a,m
     980/     578 : FE 80               	cpi	128
     981/     57A : DA 87 05            	jc	type1		;carry if 0,1,...,127
     982/     57D : E5                  	push	h
     983/     57E :                     	;read another buffer full
     984/     57E : CD FE 00            	call	diskreadc
     985/     581 : E1                  	pop	h		;recover address of bptr
     986/     582 : C2 A0 05            	jnz	typeof		;hard end of file
     987/     585 : AF                  	xra	a		;bptr = 0
     988/     586 : 77                  	mov	m,a
     989/     587 :                     type1:	;read character at bptr and print
     990/     587 : 34                  	inr	m		;bptr = bptr + 1
     991/     588 : 21 80 00            	lxi	h,buff		;h,l addresses char
     992/     58B : CD 59 02            	call	addh
     993/     58E : 7E                  	mov	a,m
     994/     58F : FE 1A               	cpi	eofile
     995/     591 : CA 86 07            	jz	retcom
     996/     594 : CD 8C 00            	call	printchar
     997/     597 : CD C2 01            	call	break_key	;abort if break
     998/     59A : C2 86 07            	jnz	retcom
     999/     59D : C3 74 05            	jmp	type0 ;for another character
    1000/     5A0 :                     
    1001/     5A0 :                     typeof:	;end of file, check for errors
    1002/     5A0 : 3D                  	dcr	a
    1003/     5A1 : CA 86 07            	jz	retcom
    1004/     5A4 : CD D9 03            	call	readerr
    1005/     5A7 : CD 66 04            typerr:	call	resetdisk
    1006/     5AA : C3 09 02            	jmp	comerr
    1007/     5AD :                     
    1008/     5AD :                     save:
    1009/     5AD : CD F8 03            	call	getnumber	; value to register a
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 18 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


    1010/     5B0 : F5                  	push	psw		;save it for later
    1011/     5B1 :                     
    1012/     5B1 :                     	;should be followed by a file to save the memory image
    1013/     5B1 : CD 5E 02            	call	fillfcb0
    1014/     5B4 : C2 09 02            	jnz	comerr		;cannot be ambiguous
    1015/     5B7 : CD 54 04            	call	setdisk		;may be a disk change
    1016/     5BA : 11 CD 07            	lxi	d,comfcb	;existing file removed
    1017/     5BD : D5                  	push	d
    1018/     5BE : CD EF 00            	call	delete
    1019/     5C1 : D1                  	pop	d
    1020/     5C2 : CD 09 01            	call	make		;create a new file on disk
    1021/     5C5 : CA FB 05            	jz	saverr		;no directory space
    1022/     5C8 : AF                  	xra	a		;clear next record field
    1023/     5C9 : 32 ED 07            	sta	comrec
    1024/     5CC : F1                  	pop	psw		;#pages to write is in a, change to #sectors
    1025/     5CD : 6F                  	mov	l,a
    1026/     5CE : 26 00               	mvi	h,0
    1027/     5D0 : 29                  	dad	h 
    1028/     5D1 : 11 00 01            	lxi	d,tran		;h,l is sector count, d,e is load address
    1029/     5D4 :                     save0:	;check for sector count zero
    1030/     5D4 : 7C                  	mov	a,h		;may be completed
    1031/     5D5 : B5                  	ora	l
    1032/     5D6 : CA F1 05            	jz	save1
    1033/     5D9 : 2B                  	dcx	h		;sector count = sector count - 1
    1034/     5DA : E5                  	push	h		;save it for next time around
    1035/     5DB : 21 80 00            	lxi	h,128		;next dma address saved
    1036/     5DE : 19                  	dad	d
    1037/     5DF : E5                  	push	h
    1038/     5E0 : CD D8 01            	call	setdma		;current dma address set
    1039/     5E3 : 11 CD 07            	lxi	d,comfcb
    1040/     5E6 : CD 04 01            	call	diskwrite
    1041/     5E9 : D1                  	pop	d		;dma address, sector count
    1042/     5EA : E1                  	pop	h
    1043/     5EB : C2 FB 05            	jnz	saverr		;may be disk full case
    1044/     5EE : C3 D4 05            	jmp	save0		;for another sector
    1045/     5F1 :                     
    1046/     5F1 :                     save1:	;end of dump, close the file
    1047/     5F1 : 11 CD 07            	lxi	d,comfcb
    1048/     5F4 : CD DA 00            	call	close
    1049/     5F7 : 3C                  	inr	a		;255 becomes 00 if error
    1050/     5F8 : C2 01 06            	jnz	retsave		;for another command
    1051/     5FB :                     saverr:	;must be full or read only disk
    1052/     5FB : 01 07 06            	lxi	b,fullmsg
    1053/     5FE : CD A7 00            	call	print
    1054/     601 :                     retsave:
    1055/     601 :                     	;reset dma buffer
    1056/     601 : CD D5 01            	call	setdmabuff
    1057/     604 : C3 86 07            	jmp	retcom
    1058/     607 :                     fullmsg:
    1059/     607 : 4E 4F 20 53 50 41   	db "NO SPACE",0
                    43 45 00 
    1060/     610 :                     
    1061/     610 :                     
    1062/     610 :                     rename:
    1063/     610 :                     	;rename a file on a specific disk
    1064/     610 : CD 5E 02            	call	fillfcb0	;must be unambiguous
    1065/     613 : C2 09 02            	jnz	comerr
    1066/     616 : 3A F0 07            	lda	sdisk		;save for later compare
    1067/     619 : F5                  	push	psw
    1068/     61A : CD 54 04            	call	setdisk		;disk selected
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 19 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


    1069/     61D : CD E9 00            	call	searchcom	;is new name already there?
    1070/     620 : C2 79 06            	jnz	renerr3
    1071/     623 :                     	;file doesn't exist, move to second half of fcb
    1072/     623 : 21 CD 07            	lxi	h,comfcb
    1073/     626 : 11 DD 07            	lxi	d,comfcb+16
    1074/     629 : 06 10               	mvi	b,16
    1075/     62B : CD 42 04            	call	move0
    1076/     62E :                     	;check for = or left arrow
    1077/     62E : 2A 88 00            	lhld	comaddr
    1078/     631 : EB                  	xchg
    1079/     632 : CD 4F 02            	call	deblank
    1080/     635 : FE 3D               	cpi	'='		;ok if =
    1081/     637 : CA 3F 06            	jz	ren1
    1082/     63A : FE 5F               	cpi	la
    1083/     63C : C2 73 06            	jnz	renerr2
    1084/     63F : EB                  ren1:	xchg			;past delimiter
    1085/     640 : 23                  	inx	h
    1086/     641 : 22 88 00            	shld	comaddr
    1087/     644 :                     	;proper delimiter found
    1088/     644 : CD 5E 02            	call	fillfcb0
    1089/     647 : C2 73 06            	jnz	renerr2
    1090/     64A :                     	;check for drive conflict
    1091/     64A : F1                  	pop	psw		;previous drive number
    1092/     64B : 47                  	mov	b,a
    1093/     64C : 21 F0 07            	lxi	h,sdisk
    1094/     64F : 7E                  	mov	a,m
    1095/     650 : B7                  	ora	a
    1096/     651 : CA 59 06            	jz	ren2
    1097/     654 :                     	;drive name was specified.  same one?
    1098/     654 : B8                  	cmp	b
    1099/     655 : 70                  	mov	m,b
    1100/     656 : C2 73 06            	jnz	renerr2
    1101/     659 : 70                  ren2:	mov	m,b		;store the name in case drives switched
    1102/     65A : AF                  	xra	a		;is old file there?
    1103/     65B : 32 CD 07            	sta	comfcb
    1104/     65E : CD E9 00            	call	searchcom
    1105/     661 : CA 6D 06            	jz	renerr1
    1106/     664 :                     
    1107/     664 :                     	;everything is ok, rename the file
    1108/     664 : 11 CD 07            	lxi	d,comfcb
    1109/     667 : CD 0E 01            	call	renam
    1110/     66A : C3 86 07            	jmp	retcom
    1111/     66D :                     
    1112/     66D :                     renerr1:; no file on disk
    1113/     66D : CD EA 03            	call	nofile
    1114/     670 : C3 86 07            	jmp	retcom
    1115/     673 :                     renerr2:; ambigous reference/name conflict
    1116/     673 : CD 66 04            	call	resetdisk
    1117/     676 : C3 09 02            	jmp	comerr
    1118/     679 :                     renerr3:; file already exists
    1119/     679 : 01 82 06            	lxi	b,renmsg
    1120/     67C : CD A7 00            	call	print
    1121/     67F : C3 86 07            	jmp	retcom
    1122/     682 : 46 49 4C 45 20 45   renmsg:	db "FILE EXISTS",0
                    58 49 53 54 53 00 
    1123/     68E :                     
    1124/     68E :                     user:
    1125/     68E :                     	;set user number
    1126/     68E : CD F8 03            	call	getnumber	; leaves the value in the accumulator
    1127/     691 : FE 10               	cpi	16		; must be between 0 and 15
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 20 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


    1128/     693 : D2 09 02            	jnc	comerr
    1129/     696 : 5F                  	mov	e,a		;save for setuser call
    1130/     697 : 3A CE 07            	lda	comfcb+1
    1131/     69A : FE 20               	cpi	' '
    1132/     69C : CA 09 02            	jz	comerr
    1133/     69F : CD 15 01            	call	setuser		;new user number set
    1134/     6A2 : C3 89 07            	jmp	endcom
    1135/     6A5 :                     
    1136/     6A5 :                     userfunc:
    1137/     6A5 : =>UNDEFINED         	ifndef	noserialize
    1138/     6A5 : CD F5 01            	call	serialize	;check serialization
    1139/     6A8 : [1137]              	endif
    1140/     6A8 :                     	;load user function and set up for execution
    1141/     6A8 : 3A CE 07            	lda	comfcb+1
    1142/     6AB : FE 20               	cpi	' '
    1143/     6AD : C2 C4 06            	jnz	user0
    1144/     6B0 :                     	;no file name, but may be disk switch
    1145/     6B0 : 3A F0 07            	lda	sdisk		;no disk name if 0
    1146/     6B3 : B7                  	ora	a
    1147/     6B4 : CA 89 07            	jz	endcom
    1148/     6B7 : 3D                  	dcr	a		;set user/disk
    1149/     6B8 : 32 EF 07            	sta	cdisk
    1150/     6BB : CD 29 01            	call	setdiska
    1151/     6BE : CD BD 00            	call	select
    1152/     6C1 : C3 89 07            	jmp	endcom
    1153/     6C4 :                     user0:	;file name is present
    1154/     6C4 : 11 D6 07            	lxi	d,comfcb+9	;type ' '
    1155/     6C7 : 1A                  	ldax	d
    1156/     6C8 : FE 20               	cpi	' '
    1157/     6CA : C2 09 02            	jnz	comerr
    1158/     6CD : D5                  	push	d		;.com
    1159/     6CE : CD 54 04            	call	setdisk
    1160/     6D1 : D1                  	pop	d
    1161/     6D2 : 21 83 07            	lxi	h,comtype
    1162/     6D5 : CD 40 04            	call	movename	;file type is set to .com
    1163/     6D8 : CD D0 00            	call	openc
    1164/     6DB : CA 6B 07            	jz	userer
    1165/     6DE :                     	;file opened properly, read it into memory
    1166/     6DE : 21 00 01            	lxi	h,tran		;transient program base
    1167/     6E1 : E5                  load0:	push	h		;save dma address
    1168/     6E2 : EB                  	xchg
    1169/     6E3 : CD D8 01            	call	setdma
    1170/     6E6 : 11 CD 07            	lxi	d,comfcb
    1171/     6E9 : CD F9 00            	call	diskread
    1172/     6EC : C2 01 07            	jnz	load1
    1173/     6EF :                     	;sector loaded, set new dma address and compare
    1174/     6EF : E1                  	pop	h
    1175/     6F0 : 11 80 00            	lxi	d,128
    1176/     6F3 : 19                  	dad	d
    1177/     6F4 : 11 00 00            	lxi	d,tranm		;has the load overflowed?
    1178/     6F7 : 7D                  	mov	a,l
    1179/     6F8 : 93                  	sub	e
    1180/     6F9 : 7C                  	mov	a,h
    1181/     6FA : 9A                  	sbb	d
    1182/     6FB : D2 71 07            	jnc	loaderr
    1183/     6FE : C3 E1 06            	jmp	load0		;for another sector
    1184/     701 :                     
    1185/     701 : E1                  load1:	pop	h		;end file is 1
    1186/     702 : 3D                  	dcr	a
    1187/     703 : C2 71 07            	jnz	loaderr
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 21 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


    1188/     706 : CD 66 04            	call	resetdisk	;back to original disk
    1189/     709 : CD 5E 02            	call	fillfcb0
    1190/     70C : 21 F0 07            	lxi	h,sdisk
    1191/     70F : E5                  	push	h
    1192/     710 : 7E                  	mov	a,m		;drive number set
    1193/     711 : 32 CD 07            	sta	comfcb
    1194/     714 : 3E 10               	mvi	a,16		;move entire fcb to memory
    1195/     716 : CD 60 02            	call	fillfcb
    1196/     719 : E1                  	pop	h
    1197/     71A : 7E                  	mov	a,m
    1198/     71B : 32 DD 07            	sta	comfcb+16
    1199/     71E : AF                  	xra	a		;record number set to zero
    1200/     71F : 32 ED 07            	sta	comrec
    1201/     722 : 11 5C 00            	lxi	d,fcb
    1202/     725 : 21 CD 07            	lxi	h,comfcb
    1203/     728 : 06 21               	mvi	b,33
    1204/     72A : CD 42 04            	call	move0
    1205/     72D :                     	;move command line to buff
    1206/     72D : 21 08 00            	lxi	h,combuf
    1207/     730 : 7E                  bmove0:	mov	a,m
    1208/     731 : B7                  	ora	a
    1209/     732 : CA 3E 07            	jz	bmove1
    1210/     735 : FE 20               	cpi	' '
    1211/     737 : CA 3E 07            	jz	bmove1
    1212/     73A : 23                  	inx	h		;for another scan
    1213/     73B : C3 30 07            	jmp	bmove0
    1214/     73E :                     	;first blank position found
    1215/     73E : 06 00               bmove1:	mvi	b,0		;ready for the move
    1216/     740 : 11 81 00            	lxi	d,buff+1
    1217/     743 : 7E                  bmove2:	mov	a,m
    1218/     744 : 12                  	stax	d
    1219/     745 : B7                  	ora	a
    1220/     746 : CA 4F 07            	jz	bmove3
    1221/     749 :                     	;more to move
    1222/     749 : 04                  	inr	b
    1223/     74A : 23                  	inx	h
    1224/     74B : 13                  	inx	d
    1225/     74C : C3 43 07            	jmp	bmove2
    1226/     74F :                     bmove3:	;b has character count
    1227/     74F : 78                  	mov	a,b
    1228/     750 : 32 80 00            	sta	buff
    1229/     753 : CD 98 00            	call	crlf
    1230/     756 :                     	;now go to the loaded program
    1231/     756 : CD D5 01            	call	setdmabuff	;default dma
    1232/     759 : CD 1A 01            	call	saveuser	;user code saved
    1233/     75C :                     	;low memory diska contains user code
    1234/     75C : CD 00 01            	call	tran		;gone to the loaded program
    1235/     75F : 31 AB 07            	lxi	sp,stack	;may come back here
    1236/     762 : CD 29 01            	call	setdiska
    1237/     765 : CD BD 00            	call	select
    1238/     768 : C3 82 03            	jmp	ccp
    1239/     76B :                     
    1240/     76B :                     userer:	;arrive here on command error
    1241/     76B : CD 66 04            	call	resetdisk
    1242/     76E : C3 09 02            	jmp	comerr
    1243/     771 :                     
    1244/     771 :                     loaderr:;cannot load the program
    1245/     771 : 01 7A 07            	lxi	b,loadmsg
    1246/     774 : CD A7 00            	call	print
    1247/     777 : C3 86 07            	jmp	retcom
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 22 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


    1248/     77A :                     loadmsg:
    1249/     77A : 42 41 44 20 4C 4F   	db "BAD LOAD",0
                    41 44 00 
    1250/     783 :                     comtype:
    1251/     783 : 43 4F 4D            	db "COM"		;for com files
    1252/     786 :                     
    1253/     786 :                     
    1254/     786 :                     retcom:	;reset disk before end of command check
    1255/     786 : CD 66 04            	call	resetdisk
    1256/     789 :                     
    1257/     789 :                     endcom:	;end of intrinsic command
    1258/     789 : CD 5E 02            	call	fillfcb0	;to check for garbage at end of line
    1259/     78C : 3A CE 07            	lda	comfcb+1
    1260/     78F : D6 20               	sui	' '
    1261/     791 : 21 F0 07            	lxi	h,sdisk
    1262/     794 : B6                  	ora	m
    1263/     795 :                     	;0 in accumulator if no disk selected, and blank fcb
    1264/     795 : C2 09 02            	jnz	comerr
    1265/     798 : C3 82 03            	jmp	ccp
    1266/     79B :                     
    1267/     79B :                     
    1268/     79B :                     
    1269/     79B :                     ;	data areas
    1270/     79B :                     	ds	16	;8 level stack
    1271/     7AB :                     stack:
    1272/     7AB :                     
    1273/     7AB :                     ;	'submit' file control block
    1274/     7AB : 00                  submit:	db	0	;00 if no submit file, ff if submitting
    1275/     7AC : 00 24 24 24 20 20   subfcb:	db	0,"$$$     "	;file name is $$$
                    20 20 20 
    1276/     7B5 : 53 55 42 00 00      	db	"SUB",0,0	;file type is sub
    1277/     7BA : 00                  submod:	db	0	;module number
    1278/     7BB :                     subrc:	ds	1	;record count filed
    1279/     7BC :                     	ds	16	;disk map
    1280/     7CC :                     subcr:	ds	1	;current record to read
    1281/     7CD :                     
    1282/     7CD :                     ;	command file control block
    1283/     7CD :                     comfcb:	ds	32	;fields filled in later
    1284/     7ED :                     comrec:	ds	1	;current record to read/write
    1285/     7EE :                     dcnt:	ds	1	;disk directory count (used for error codes)
    1286/     7EF :                     cdisk:	ds	1	;current disk
    1287/     7F0 :                     sdisk:	ds	1	;selected disk for current operation
    1288/     7F1 :                     			;none=0, a=1, b=2 ...
    1289/     7F1 :                     bptr:	ds	1	;buffer pointer
    1290/     7F2 :                     	end	ccploc
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 23 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


  symbol table (* = unused):
  ------------------------

 ADDH :                         259 C |  ADDHCF :                       44B C |
*ARCHITECTURE :                                        x86_64-unknown-linux - |
 BADSERIAL :                    3CF C |  BDOS :                           5 - |
 BDOSL :                        800 - |  BDOS_COND :                     F4 C |
 BDOS_INR :                      C3 C | *BIGENDIAN :                      0 - |
 BLANK :                         A2 C |  BMOVE0 :                       730 C |
 BMOVE1 :                       73E C |  BMOVE2 :                       743 C |
 BMOVE3 :                       74F C |  BPTR :                         7F1 C |
*BRANCHEXT :                      0 - |  BREAKF :                         B - |
 BREAK_KEY :                    1C2 C |  BUFF :                          80 - |
*CASESENSITIVE :                  0 - |  CCP :                          382 C |
 CCP0 :                         398 C |  CCPCLEAR :                     358 C |
 CCPLOC :                         0 - |  CCPSTART :                     35C C |
 CDISK :                        7EF C |  CLOSE :                         DA C |
 CLOSEF :                        10 - |  COMADDR :                       88 C |
 COMBUF :                         8 C |  COMERR :                       209 C |
 COMERR0 :                      20F C |  COMERR1 :                      222 C |
 COMFCB :                       7CD C |  COMLEN :                         7 C |
 COMREC :                       7ED C |  COMTYPE :                      783 C |
*CONSTPI :        3.141592653589793 - |  CONV0 :                        408 C |
 CONV1 :                        433 C |  CR :                             D - |
 CRLF :                          98 C |  CSELECT :                      1D0 C |
 CSELF :                         19 - | *DATE :                  08/12/2019 - |
 DCNT :                         7EE C |  DEBLANK :                      24F C |
 DELETE :                        EF C |  DELF :                          13 - |
 DELIM :                        230 C |  DEL_SUB :                      1DD C |
 DIR0 :                         488 C |  DIR1 :                         48F C |
 DIR2 :                         498 C |  DIR3 :                         4D9 C |
 DIR4 :                         4F9 C |  DIR5 :                         50E C |
 DIR6 :                         50F C |  DIRB :                         4F7 C |
 DIRECT :                       477 C |  DIRHDR0 :                      4CC C |
 DIRHDR1 :                      4D4 C |  DISKA :                          4 - |
 DISKREAD :                      F9 C |  DISKREADC :                     FE C |
 DISKWRITE :                    104 C |  DMAF :                          1A - |
 DREADF :                        14 - |  DWRITF :                        15 - |
 EFILL :                        2F0 C |  EFILL0 :                       2F2 C |
 ENDCOM :                       789 C |  ENDIR :                        51B C |
 EOFILE :                        1A - |  ERASE :                        51F C |
 ERASEFILE :                    542 C |  ERMSG :                        552 C |
*FALSE :                          0 - |  FCB :                           5C - |
 FILLFCB :                      260 C |  FILLFCB0 :                     25E C |
 FULLMSG :                      607 C | *FULLPMMU :                       1 - |
 GETNUMBER :                    3F8 C |  GETUSER :                      113 C |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*INEXTMODE :                      0 - |  INITF :                          D - |
 INITIALIZE :                    B8 C | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - |  INTLEN :                         6 - |
 INTRIN0 :                      333 C |  INTRIN1 :                      33C C |
 INTRIN2 :                      34F C |  INTRIN3 :                      354 C |
 INTRINSIC :                    32E C |  INTVEC :                       310 C |
 JMPTAB :                       3C1 C |  LA :                            5F - |
 LF :                             A - | *LIFTF :                          C - |
*LISTON :                         1 - |  LOAD0 :                        6E1 C |
 LOAD1 :                        701 C |  LOADERR :                      771 C |
 LOADMSG :                      77A C | *LOGF :                          18 - |
 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 24 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


*MACEXP :                         7 - |  MAKE :                         109 C |
 MAKEF :                         16 - |  MAXLEN :                         6 C |
*MOMCPU :                      8080 - | *MOMCPUNAME :                  8080 - |
 MOVE0 :                        442 C |  MOVENAME :                     440 C |
*NESTMAX :                      100 - |  NOFILE :                       3EA C |
 NOFMSG :                       3F0 C |  NOREAD :                       1A7 C |
 NOSUB :                        196 C |  OPEN :                          CB C |
 OPENC :                         D0 C |  OPENF :                          F - |
*PACKING :                        0 - | *PADDING :                        1 - |
 PADNAME :                      2B9 C |  PADTY :                        2E9 C |
*PBUFF :                          9 - |  PCHARF :                         2 - |
 PRIN0 :                         AC C |  PRINT :                         A7 C |
 PRINTBC :                       92 C |  PRINTCHAR :                     8C C |
 RBUFF :                          A - |  RCHARF :                         1 - |
 RDMSG :                        3DF C |  READCOM :                      139 C |
 READCOM0 :                     1AB C |  READCOM1 :                     1BA C |
 READERR :                      3D9 C | *RELAXED :                        0 - |
 REN1 :                         63F C |  REN2 :                         659 C |
 RENAM :                        10E C |  RENAME :                       610 C |
 RENERR1 :                      66D C |  RENERR2 :                      673 C |
 RENERR3 :                      679 C |  RENF :                          17 - |
 RENMSG :                       682 C |  RESETDISK :                    466 C |
 RETCOM :                       786 C |  RETSAVE :                      601 C |
*ROFILE :                         9 - |  SAVE :                         5AD C |
 SAVE0 :                        5D4 C |  SAVE1 :                        5F1 C |
 SAVERR :                       5FB C |  SAVEUSER :                     11A C |
 SCNQ :                         301 C |  SCNQ0 :                        309 C |
 SDISK :                        7F0 C |  SEARCH :                        DF C |
 SEARCHCOM :                     E9 C |  SEARCHN :                       E4 C |
 SEARF :                         11 - |  SEARNF :                        12 - |
 SELECT :                        BD C |  SELF :                           E - |
 SER0 :                         1FD C |  SERIAL :                       328 C |
 SERIALIZE :                    1F5 C | *SETCUR :                       288 C |
 SETCUR0 :                      289 C |  SETDISK :                      454 C |
 SETDISKA :                     129 C |  SETDMA :                       1D8 C |
 SETDMABUFF :                   1D5 C |  SETDSK :                       290 C |
 SETNAM0 :                      298 C |  SETNAM1 :                      2A9 C |
 SETNAM2 :                      2AB C |  SETNAME :                      296 C |
 SETTY :                        2C0 C |  SETTY0 :                       2C8 C |
 SETTY1 :                       2D9 C |  SETTY2 :                       2DB C |
 SETUSER :                      115 C |  STACK :                        7AB C |
 STADDR :                        8A C |  SUBCR :                        7CC C |
 SUBFCB :                       7AC C |  SUBMIT :                       7AB C |
 SUBMOD :                       7BA C |  SUBRC :                        7BB C |
 SYSFILE :                        A - |  TESTING :                        0 - |
*TIME :                 09:31:58 AM - |  TRAN :                         100 - |
 TRANM :                          0 - |  TRANSLATE :                    130 C |
 TRNAME :                       2AF C |  TRTYP :                        2DF C |
*TRUE :                           1 - |  TYPE :                         55D C |
 TYPE0 :                        574 C |  TYPE1 :                        587 C |
 TYPEOF :                       5A0 C |  TYPERR :                       5A7 C |
 USER :                         68E C |  USER0 :                        6C4 C |
 USERER :                       76B C |  USERF :                         20 - |
 USERFUNC :                     6A5 C | *VERSION :                     142F - |
 _FALSE :                         0 - | *_TRUE :           FFFFFFFFFFFFFFFF - |

    223 symbols
     34 unused symbols

 AS V1.42 Beta [Bld 148] - source file ccp.asm - page 25 - 08/12/2019 09:31:58 AM
console command processor (CCP), ver 2.0


  codepages:
  ----------

STANDARD (0 changed characters)


0.02 seconds assembly time

   1291 lines source file
      2 passes
      0 errors
      0 warnings
