Morrow Designs Decision 1 CBIOS Revision E.4

This Revision differs from previous revisions as follows:

     1.)  The  CBIOS is larger by about 0.5k,  leaving a  TPA  of 
     about  54k.  Support  has  been added for  5.25  inch  soft-
     sectored diskettes, both single and double sided with Morrow 
     Designs  Micro-Decision format.  This is available only  for 
     the  DJ/DMA diskette controllers shipped with EPROMS  labled 
     2.5 or higher. Earlier controllers require firmware changes. 
     The   FORMATDJ.COM  program  has  been  renamed  FDJ.COM  to 
     distinguish  it from erarlier versions.  It accomodates  the 
     new formats.

     2.)  Multio and WBIO Character Device Drivers  are  supplied 
     with support for the Centronics Port,  which shares hardware 
     with  the existing Diablo Hytype Port.   A special cable  is 
     required   for   interface  to  Centronics   Devices.    The 
     Centronics Port is assigned to the PUN: device driver. A new 
     program,  SWAP.COM  is provided to swap the  LST:  and  PUN: 
     drivers  to allow the Centronics Port to be used as the LST: 
     device.   Other assignments may also be made.   The  program 
     has a help message, invoke as:

	SWAP<cr>

     Note  that  SWAP will refuse to function if your CBIOS  does 
     not have Multio drivers.

     3.)  Multio  and WBIO Character Devices  are  bank  switched 
     under  control  of a port ( at base+7 ) which  contain  bits 
     other than those required to select the bank desired.  These 
     other  bits are meant for system control,  and changing them 
     will cause the system to crash.  Thus, if you want to select 
     a device other than the one in use by the system, you may do 
     so,  but  you must not alter the state of the  group  select 
     port.   Since  this port is write only,  you can only obtain 
     the  contents of the system bits by accessing  the  system's 
     copy  of its last write to that port.   Locating this single 
     byte  within the bios required knowledge of  several  'Magic 
     Numbers' in earlier releases of the bios.  The new character 
     drivers  in revision E.4 will return a pointer to the  group 
     byte in register [DE] following any single character service 
     request  from  BDOS.   That  is,  your  application  program 
     running in the TPA can find the group byte as follows:

mvi	c,0BH		;check console status, real safe, no one will notice
call	5		;have BDOS do it.
xchg			;pointer to group was in [DE], now in [HL]
shld	savegp		;save the group address.


Later, the same program may select a device as follows (for serial port 2)

lhld	savegp
mov	a,m		;read group bits
ori	2		;0=parallel, 1=console, 2=unused serial, 3=list serial
out	4fh		;this is the address of the group select port
;note:  from  the application's point-of-view,  the group byte is read-only.
;also, you must re-select the port each time you wish to use the device since
;the CBIOS will switch to another port to select its devices.

     4.)  The  MOVCPM.COM program supplied with earlier  releases 
     contained  a driver for the selected hard-disk as  the  last 
     drive  in  the system,  and the signon banner often did  not 
     identify the drive type.   The intent had been to provide  a 
     floppy  disk which was bootable,  and which could be used to 
     sysgen the hard-disk with one of the other MOVCPM  programs, 
     one  which would make the hard-disk the primary drive on the 
     system.   Unfortunately,  some users,  and many  technicians 
     here,  got  into trouble when they tried to boot these disks 
     and  immediately PIP programs to the  hard-disk.  Hard-disks 
     vary in storage placement on all but the outer-most  tracks. 
     If  your system has a HDC/DMA controller with an M10 or  M16 
     drive,  you may only use the bootable diskette to SYSGEN the 
     hard-disk, you may not transfer data or run programs because 
     the  bootable  diskette contains drivers for the M5  drives.  
     This  release  identifies  it  as  such.

     5.)   Your  distribution  diskettes  contain  several  files 
     dealing  with  the CBIOS for your system.  If  you  need  to 
     change the characteristics of your system,  you will need to 
     know about the following items:

     First,  your diskettes are marked with a number in the upper 
     right-hand  corner,  something  like  #904  or  #901.   This 
     identifies  the  collection  of devices  supported  in  your 
     CBIOS,  and is really just a factory part number.  Somewhere 
     on  my desk,  there is a master list of SoftWare  (SW)  part 
     numbers,  along with the devices supported by each one.   My 
     desk has a permanent OUT-OF-SPACE ERROR,  so I keep the real 
     list on my disk.  Your disk has a copy of the pertinant part 
     of  this master list in a group of files beginning with  the 
     letters 'SW'.

     Second,   your  disk  contains  several  variations  on  the 
     MOVCPM.COM  program.  Try 'DIR MOVCPM*.COM'.   Note that the 
     numbers  in the name are related to the file  extensions  in 
     the  'SW'  files.   Example:  on the disks for Factory  Part 
     Number #904, there are files:

	MOVCPM.COM		SW904.000
	MOVCPM5.COM		SW904.005
	MOVCPM10.COM		SW904.010
	MOVCPM16.COM		SW904.016

     The  'SW'  files  are the actual equate files  used  in  the 
     Mastering  Lab at Morrow Designs to create  the  MOVCPM*.COM 
     files.



     Third, there are files with names:

	ABOOT.A			ABOOT.B
	CBIOS.A			CBIOS.B

     These pieces of program are like epoxy,  Part A, and Part B.  
     You can combine them with the following commands:

	PIP ABOOT.ASM=ABOOT.A,ABOOT.B
	PIP CBIOS.ASM=CBIOS.A,CBIOS.B

     Combined  this  way,   you  have  a  CBIOS  which  bears  no 
     similarity to the one you need for your system.   The Part A 
     pieces  contain all of the comments relating to the  EQUates 
     required  to make the assembly time conditions generate  the 
     code required for a collection of hardware.   In general, an 
     EQUate  in  Part  A  will  cause a section  of  code  to  be 
     assembled  in Part B.  For instance,  the  EQUate  'mforder' 
     tells  Part B to make the mini-floppys show-up as drives  A: 
     thru  whatever is in 'maxmf',  and to assemble the warm-boot 
     code  for the mini-floppy.   So to generate a CBIOS  with  a 
     special  configuration,  all  I  have  to  do  here  in  the 
     Mastering Lab,  is to fiddle around with the equates in Part 
     A,  then  add  parts  A and B,  and voila,  a new  CBIOS  is 
     created.  Because I have all sorts of configurations, I have 
     removed the comments from Part A,  fiddled with the equates, 
     and assigned meaningful names to them,  'SW9xx.0yy' where xx 
     is an arbitrary part number,  and yy is related to the warm-
     boot  drive size.   You have a copy of the SW files used  to 
     make  your  MOVCPM  files.   If you ever need  to  make  any 
     changes to your CBIOS,  or if you simply wish to make a nice 
     listing  for  reference,  you should edit  the  CBIOS.A  and 
     ABOOT.A files,  and make the EQUates there match the equates 
     in the SW files.   Then change the first equate, 'ABSASM' to 
     match  the assembler you will be using,  as indicated in the 
     source file.   You have your choice of either MAC,  or RMAC. 
     We  do not use the ASM assembler supplied with CP/M  because 
     it  has  an insufficient  conditional  assembly  capability. 
     These assemblers are available from most dealers.
     

     If you are using the MAC assembler, you will need to declare 
     the length of the CBIOS ... 

     i n   a d v a n c e   o f   a s s e m b l y ! ! ! 

     If the length of your CBIOS is likely to change so much that 
     you  can not estimate its length accurately in advance,  you 
     may set BIOSLN to some arbitrarily large value, and assemble 
     it.   Look in the symbol file for the value  'BIOSLEN',  and 
     assemble  a second time using this value.  The actual length 
     of  the  CBIOS contained in a MOVCPM.COM file can  be  found 
     under DDT or SID as follows:

     
	SID MOVCPM.COM<cr>
	S103<cr>
	;the value displayed is the BIOSLN.

     You  should  enter  this  value in the  source  file  before 
     assembly.  For  your reference,  while under DDT or  SID,  a 
     LOCATED   copy  of  FDOS  has  the   following   interesting 
     addresses:

	ABOOT	0900H
	CCP	0B00H
	BDOS	1300H
	BIOS	2100H
	END:	SIGNON MESSAGE TEXT


Reconfiguring a System

     To reconfigure the CP/M system for your particular hardware, 
     you  need  the  MAC  assembler  (not  included  with  system 
     software) to assemble the CBIOS.ASM and ABOOT.ASM files.

     Many parameters of the CBIOS can be modified by changing the 
     value  of  certain key variables which are used  during  the 
     assembly. For example, the label MSIZE is used to adjust the 
     memory size of the reconfigured CP/M.  The following list of 
     equates were pulled out of the CBIOS to give you an idea  of 
     the options available in the CBIOS.ASM file.   Refer to the 
     CBIOS.ASM  file  if you want to see a full explanation  for 
     some of these equates.


















                  List of Equates - CBIOS.ASM

maxhd	equ	0	;Set to number of HDCA3 hard disk drives
maxmw	equ	1	;Set to number of HDDMA hard disks
maxfd	equ	0	;Set to number of 2D/B floppies
maxdm	equ	2	;Set to number of DJ DMA floppies 8"
maxmf	equ	2	;Set to number of DJ DMA floppies 5 1/4"

hdorder	equ	0	;Set the order of logical drives ELSE 0 
mworder	equ	1	;   if not included
fdorder	equ	0
dmorder	equ	2
mforder	equ	3
			;HDC3 controller disk drives. Set only 1
M26	equ	0	;Shugart SA4000
M20	equ	0	;Fujitsu M2302B
M10F	equ	0	;Fujitsu M2301B
M10M	equ	0	;Memorex

			;HDDMA controller disk drives. Set only 1
cm5619	equ	0	;CMI CM-5619
st412	equ	1	;Seagate ST-412
st506	equ	0	;Seagate ST-506

     Make a copy of the .ASM files, then edit the CBIOS.ASM file 
     for  your  desired  system  configuration.    This  involves 
     changing  the numbers following the equ portion of the  file 
     to  reflect  the number of drives,  their order  within  the 
     system,  the  drive  type,  etc.   Use the  following  as  a 
     guideline for assembling the files:

          A>MAC CBIOS<cr>

          A>MAC ABOOT<cr> 

     Once  the  CBIOS.ASM and ABOOT.ASM files have been  edited 
     and  re-assembled,  the following procedure may be  used  to 
     incorporate the new drivers into CP/M, enter the command:

          A>TYPE ABOOT.PRN<cr>

     watch for the label "OFFSET" in the listing,  and record its 
     value. Next, the command:

          A>TYPE CBIOS.PRN<cr>  

     watch for the label "OFFSETC" in the listing, and record its 
     value.

     If  you  modified  the  BIOSLN,  then you  must  modify  the 
     MOVCPM.COM program to create a CP/M system that matches  the 
     new  CBIOS's length.   The following procedure will  perform 
     this modification.
          

           A>DDT MOVCPM.COM<cr>

           -S103<cr>

     Location  103  contains  the  BIOSLN value  for  the  MOVCPM 
     program. Now, type:

          0103 15 xx<cr>
          0104 43 .<cr>

     where xx is the first two digits of BIOSLN and press RETURN.  
     For  instance,  for a BIOSLN of 1800,  type in  18<cr>,  and 
     exit:

          -G0<cr>

     Next enter:

          A>SAVE 53 MOVCPM.COM<cr>

     to save the reconfigured MOVCPM program, and
	
          A>MOVCPM xx *<cr>

     where   xx  is  the  MSIZE  value  that  you  assembled  the 
     CBIOS.ASM file with, then
	
          A>SAVE 48 CPMxx.COM<cr>

     with xx as above.


     Again enter DDT, this time with the new CP/M system file:

          A>DDT CPMxx.COM<cr>
          -ICBIOS.HEX<cr>
          -Rnnnn<cr>

     Where  nnnn  is the value of OFFSETC noted  above  from  the 
     listing, and:

          -IABOOT.HEX<cr>
          -Rmmmm<cr>

     Where  mmmm is the OFFSET value obtained from the listing.
     Now exit from DDT as before:

          G0<cr>

          and enter:

          A>SAVE 48 CPMxx.COM<cr>

     with xx as above, and then

           A>SYSGEN<cr>

    SYSGEN returns

          Morrow Designs SYSGEN version 4.x
          Source drive name (or <RETURN> if in memory)

     Answer  by  pressing the RETURN key.   (At  this  point  the 
     source for the new  system is in RAM memory, not on the disk 
     where you want it).  The return:

          Destination drive name (or <RETURN> to warm boot)

     Enter the destination drive - A through P.  Be careful about 
     which drives (hard disk or floppy) are drives A,  B, etc, as 
     this  step  destroys  the original CP/M on  the  destination 
     drive.

     To complete this process, press the RETURN key twice:

          Destination on (drive):, type <RETURN> to warm boot)
          Function complete

          Destination drive name (or <RETURN> to warm boot)

     Reset  the system and do a "cold boot."  The  system  header 
     displays your new system size now.



MOVCPM
    
     If  your system does not need any re-configuration,  you may 
     use the MOVCPM program as it is.  As mentioned  above,  most 
     systems are supplied with more than one copy of MOVCPM,  one 
     for each of several possible configurations. Usually, a user 
     will  be  interested  in  only two of  the  MOVCPM  programs 
     supplied, MOVCPM.COM, which will boot-up from diskettes, and 
     MOVCPMn.COM  (  where n is the hard disk type )  which  will 
     boot-up on the hard disk.   Although the factory has already 
     done  the  following,  you will be interested in  case  your 
     system  ever requires service.   Your original copy of  CP/M 
     came  from a diskette ( it is your CP/M Master Disk  ),  and 
     was placed onto the hard disk as follows:

          MOVCPM * *<cr>
          ( movcpm prints some stuff )
          SYSGEN<cr>
          ( see paragraph above for sysgen operation )

     It is important to note that the CPU board has some switches 
     which  select which drive will be used  for  cold-boot.   As 
     shipped from the factory,  the diskette drives will be used.  
     One  may  alter the settings of these switches to  make  the 
     hard  disk  the primary drive,  or one may use  the  program 
     BOOTMW for this purpose.  Try the following:

          ( reset the system and re-boot )
          BOOTMW<cr>

     Now  read the signon banner.  It indicates that the  primary 
     drive  (  drive A:  ) is a hard disk,  and it indicates  its 
     size. Also note that the diskettes have been re-assigned and 
     have different drive names. Type DIR, and have a look at the 
     contents  of  this  drive.   The same  files  found  on  the 
     distribution disk should be on the hard disk.  Now try using 
     the  MOVCPM program to make the diskettes the primary drives 
     again:

          MOVCPM 48<cr>
          ( this makes a 48k system like the one on the diskette)
          -- or --
          MOVCPM<cr>
          (  which makes a 64k system which will not re-boot )
     
     The  relocated  CP/M  will  begin  executing,  however,  the 
     relocated CP/M is highly unstable.  In particular, if a warm 
     boot  occurs,  the system may not re-boot properly.  This is 
     not a bug in the MOVCPM.COM program, but rather a difference 
     in  the  length  of the original and  relocated  CP/M's.  We 
     recommend  that  you use the FDJ program explained  next  to 
     initialize  a new diskette,  then practice using MOVCPM  and 
     SYSGEN  to create new "system disks," and verify  that  they 
     will boot correctly.

FDJ.COM

     The command file FDJ.COM formats and initializes both 5  1/4 
     and 8 inch diskettes for the DJDMA floppy disk controller.

     This   program   is  menu-driven  and  is   therefore   self 
     explanatory.  Simply enter

          A>FDJ<cr>

     and follow the instructions.

     Morrow  hard-sectored  5.25  inch  end-user  diskettes   are 
     double-sided, double-density with 35 cylinders ( 70 tracks ) 
     each having ten 512-byte sectors ( selection "D" ).  You can 
     read/write  the  single-sided  variation of the above  (  35 
     tracks ), as well as the single-density ( 256-byte sectors ) 
     variants  of the above.  Hard-sectored 8 inch diskettes  are 
     not supported.

     Morrow   soft-sectored  5.25  inch  end-user  diskettes  are 
     double-sided,  double-density with 40 cylinders each  having 
     five  1024-byte sectors per surface ( selection "B" ).   The 
     single-sided variant is also supported, while single-density 
     is not.

     Morrow  soft-sectored 8 inch end-user diskettes  are  either 
     single-sided  or  double-sided  depending upon the  type  of 
     drives  supplied with the system.   Both are  double-density 
     with  77 cylinders,  and four 1024-byte sectors per  surface   
     (selection "G").   Two other double-density formats may also 
     be read and written.  They are, 256-byte and 512-byte single 
     and  double sided formats with 26 and 15 sectors per surface 
     respectively ( part of selection "I" ).

     Morrow   also  supports  the  common  "CP/M   Single-Density 
     Exchange Format" which is single-sided,  single-density with 
     77 tracks,  each with twenty-six 128-byte sectors (selection 
     "F").  

FORMATHD and FORMATMW

     If  it  is  desired to format the  hard  disk,  the  program 
     FORMATHD.COM  (8 and 14 inch hard disks) or FORMATMW.COM  (5 
     1/4 inch hard disks) should be used.


CAUTION!
     Use caution with the hard disk format programs:   They erase 
     the  data on the hard disk and it can not be  recovered.  If 
     you have to format the disk, think about what is on the hard 
     disk before proceeding.




BOOTHD

     The  program BOOTHD.COM contains a boot strap loader for the 
     HDCA  hard disk controller.  BOOTHD.COM could be  programmed 
     into  a PROM so that you could boot directly onto  the  hard 
     disks without having to bother with the floppies.


BOOTMW

     The  program BOOTMW.COM contains a boot strap loader for the 
     HDC/DMA hard disk controller.

     The Morrow Designs MPZ80 CPU card has both BOOTHD and BOOTMW 
     encoded  in  its PROM.   Refer to the MPZ80 manual  for  the 
     proper switch settings.



