{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green45\blue153;\red174\green15\blue46;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c17647\c60000;\csgenericrgb\c68235\c5882\c18039;}
{\info
{\author G\'fcnter Woigk}
{\*\copyright cc-by-sa}}\paperw11900\paperh16840\margl1440\margr1440\vieww15300\viewh14020\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Welcome,\

\b0 \
this is 
\b version 4.2
\b0  of the Z80 assembler 
\b zasm
\b0 .\
new in this version: support for #target TZX: directly create a .tzx tape files.\
\

\b install:
\b0 \
    copy zasm where you like, e.g. into /usr/local/bin/.\
\

\b Homepage, downloads & documentation:
\b0 \
    
\f1\fs22 http://k1.spdns.de/Develop/Projects/zasm/
\f0\fs24 \
\

\b Source:
\b0 \
    
\f1\fs22 http://k1.spdns.de/Git/
\f0\fs24 \
\

\b Send bug reports and requests to:\

\b0     
\f1\fs22 mailto:kio@little-bat.de
\f0\fs24 \
\

\b Included 3rd party sources:\

\b0     Einar Saukas' ZX7 "optimal" LZ77 packer.\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\b \cf0 \ul \ulc0 Short Introduction\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\b0 \cf0 \ulnone \
zasm is a \cf2 Z80 assembler\cf0 . \
zasm supports assembling code for the Intel \cf2 8080\cf0  using Z80 syntax. \
zasm can also compile native 8080 assembler source.\
zasm also supports the additional opcodes for the Hitachi \cf2 HD64180\cf0 .\
zasm can generate binary files or \cf2 Intel Hex\cf0  or \cf2 Motorola S19\cf0  files.\
zasm supports generating various specialized files for \cf2 Sinclair and Jupiter Ace\cf0 .\
The \cf2 list\cf0  file can include the \cf2 generated opcodes\cf0  and accumulating \cf2 cpu cycles\cf0 .\
zasm supports \cf2 various\cf0  historically used syntax variants and the \cf2 syntax\cf0  emitted by sdcc.\
zasm supports \cf2 character set conversion\cf0 , e.g. for the ZX80 and ZX81.\
zasm supports including and \cf2 compiling of c source\cf0  with \cf2 sdcc\cf0 . \
zasm supports \cf2 ZX7 compression\cf0  directly from the source.\
Longish documentation is at 
\i http://k1.spdns.de/Develop/Projects/zasm/Documentation/
\i0 .\
\
In case you find a bug \cf3 send mailto:kio@little-bat.de\cf0 .\
Bugs which aren't reported can't be fixed.\
\
Start zasm \cf2 without arguments\cf0  to show all command line options.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\b \cf0 Examples in folder Examples/:
\b0 \
    ZX80, ZX81, ZX Spectrum and Jupiter Ace emulator files\
    c project stub\
    zx7 .tap file example\
\

\b Compiling a c project:
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\pardirnatural\partightenfactor0
\cf0     
\i related command line options:
\i0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0
\cf0     
\b \cf2 -c /path/to/scdd 
\b0 \cf0       \
            zasm tries to find your sdcc in your $PATH.\
            You can point it to your executable if reqired.\
    
\b \cf2 -I /path/to/include
\b0 \cf0 \
            This option (mind the space!) is passed (without space) to sdcc.\
            Use this option if sdcc doesn't find the header files \
            which you installed e.g. from "sdcc/include/".\
    
\b \cf2 --clean
\b0 \cf0 \
            zasm caches compiled c files. They are only recompiled if the\
            c file is modified. zasm does not monitor all included files and therefore,\
            in case you modify header files, you may wish to discard all cached files.\
            note: zasm creates a folder named "s/" which you can simply delete as well.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\pardirnatural\partightenfactor0
\cf0     
\i related assembler directives in the assembler source file:
\i0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0
\cf0     
\b \cf2 #CODE
\b0 \cf0    define a code segment with name, address, length and optional flag\
            sdcc uses various segments to store different kinds of code, \
            e.g. for code (sic!) or const data in rom. see example file \
            or see the (not existing) documentation of sdcc on this topic.\
    
\b \cf2 #DATA
\b0 \cf0    define a data segment.\
            you can't put code in a data segment, just allocate space for data in here. \
            used to define labels in ram, e.g. for variables.\
    
\b \cf2 #CFLAGS
\b0 \cf0  add or remove flags passed to sdcc. Two flags are always passed to sdcc, \
            unless you entirely replace the cflags: -mz80 and -S.\
    
\b \cf2 #INCLUDE LIBRARY "path/to/dir/"
\b0 \cf0 \
            include all files from the named directory which resolve unresolved labels.\
            Files must be named according to the labels they define, \
            e.g. assembler file "__divulong.s" defines label __divulong\
            or the c file "_malloc.c" defines label _malloc.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural\partightenfactor0

\b \cf0 ZX7, an "optimal" LZ77 packer:
\b0 \
    The compressor and decompressors were written by Einar Saukas and others.\
    zasm supports direct compression of the generated code. \
    To decompress use one of the included Z80 decompressors in 
\i "Examples/"
\i0 .\
    For an example see 
\i "Examples/tap_with_zx7.asm"
\i0 .\
\
    \
}